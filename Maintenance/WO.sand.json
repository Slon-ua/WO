{
	"info": {
		"_postman_id": "8febb878-b023-4f24-8940-59cf450cf5d7",
		"name": "321 WO: Sand",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Sand",
			"item": [
				{
					"name": "1 Sand:  Pre - Past Inspections   (without Maintenance)",
					"item": [
						{
							"name": "1 Creaate car & Pre- Post inspection & Check duplication",
							"item": [
								{
									"name": "Login Admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// console.log( pm.cookies.get(\"laravel_session\"));",
													"//let cookies = \"laravel_session=\"+ pm.cookies.get(\"laravel_session\");",
													"",
													"//console.log(cookies);",
													"",
													"pm.collectionVariables.set(\"cookies-token\", \"laravel_session=\"+ pm.cookies.get(\"laravel_session\"));",
													"",
													"// console.log(pm.globals.get(\"cookies-token\") +\" | \"+pm.collectionVariables.get(\"cookies-token\")+\" | \"+pm.environment.get(\"cookies-token\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "_token",
													"value": "XrMI2Z8n96OD7Az80vTRrPBrwFumiJUvBa7IQ2C0",
													"type": "text"
												},
												{
													"key": "email",
													"value": "sergeyk@driveroo.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "123456",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/admin/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"admin",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uncheck Maintenance",
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": " sandbox.driveroo.com",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Connection",
												"value": " keep-alive",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Pragma",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cache-Control",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Upgrade-Insecure-Requests",
												"value": " 1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "User-Agent",
												"value": " Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": " text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Site",
												"value": " none",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Mode",
												"value": " navigate",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-User",
												"value": " ?1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Dest",
												"value": " document",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": " gzip, deflate, br",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Language",
												"value": " ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": " _gid=GA1.2.840618837.1611337377; _hjTLDTest=1; _hjid=8d983bd7-eca9-4fea-af47-1ed7d0fad41b; ajs_group_id=null; ajs_anonymous_id=%225a1ec840-5f13-481d-a854-e650dc93f008%22; io=w6KnxNj69BQwpA66AAWX; _ga=GA1.1.1369376699.1611131368; _ga_VLL86CMPFN=GS1.1.1611399836.14.1.1611399849.47; laravel_session=jqfREURLwCPfkcCsgOrb4UEH2JMFMMgluL4RiFFR",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": "{{cookies-token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "id",
													"value": "64",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Driveroo_Test_Auto_Env",
													"type": "text"
												},
												{
													"key": "system_name",
													"value": "Driveroo_Test_Auto_Env",
													"type": "text"
												},
												{
													"key": "address",
													"value": "Gagarina, 25",
													"type": "text"
												},
												{
													"key": "terminal_address",
													"value": "Gagarina, 25",
													"type": "text"
												},
												{
													"key": "ttl",
													"value": "",
													"type": "text"
												},
												{
													"key": "timezone",
													"value": "America/Los_Angeles",
													"type": "text"
												},
												{
													"key": "currency",
													"value": "USD",
													"type": "text"
												},
												{
													"key": "measurement",
													"value": "USCS",
													"type": "text"
												},
												{
													"key": "notification_channels[0]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "notification_channels[1]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "behaviors[0][name]",
													"value": "assigned_vehicles",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][region]",
													"value": "US",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][vin]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][ymm]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][chassis]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][engine]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[1][name]",
													"value": "assigned_heavy",
													"type": "text"
												},
												{
													"key": "behaviors[1][data][sn]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "behaviors[2][name]",
													"value": "",
													"type": "text"
												},
												{
													"key": "permissions[company-vehicles-recall]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-vehicles-visibility]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-daily-log]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-assign]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-dashboard-create-issues]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-fuel]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-remind]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-tasks]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-daily-inspection]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-damage]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-inspection-location]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-location-fence]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-inspection-complete]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[alert-car-status-change]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-accident]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-incident]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-maintenance]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "permissions[company-inspection]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-service-frequency]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-warehouse]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-metabase-reports]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "dashboard_service_id",
													"value": "107",
													"type": "text"
												},
												{
													"key": "user_tracking",
													"value": "0",
													"type": "text"
												},
												{
													"key": "gps_interval",
													"value": "10",
													"type": "text"
												},
												{
													"key": "gps_stop_time",
													"value": "",
													"type": "text"
												},
												{
													"key": "diesel_price",
													"value": "2",
													"type": "text"
												},
												{
													"key": "gasoline_price",
													"value": "5",
													"type": "text"
												},
												{
													"key": "fuel_service_id",
													"value": "102",
													"type": "text"
												},
												{
													"key": "maintenance_service_id",
													"value": "126",
													"type": "text"
												},
												{
													"key": "mileage_increase_limit",
													"value": "250",
													"type": "text"
												},
												{
													"key": "hours_increase_limit",
													"value": "5.5",
													"type": "text"
												},
												{
													"key": "metabase_reports[__0][name]",
													"value": "first",
													"type": "text"
												},
												{
													"key": "metabase_reports[__0][link]",
													"value": "https://metabase.driveroo.com/public/question/93d29118-f432-400a-9834-2df992fbe378",
													"type": "text"
												},
												{
													"key": "metabase_reports[__1][name]",
													"value": "second",
													"type": "text"
												},
												{
													"key": "metabase_reports[__1][link]",
													"value": "https://metabase.driveroo.com/public/question/93d29118-f432-400a-9834-2df992fbe378",
													"type": "text"
												},
												{
													"key": "cdb_id",
													"value": "CDB-20",
													"type": "text"
												},
												{
													"key": "stripe_customer_id",
													"value": "123456",
													"type": "text"
												},
												{
													"key": "stripe_sub_item_id",
													"value": "1234578",
													"type": "text"
												},
												{
													"key": "service[1][service_type_id]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[1][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[2][service_type_id]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "service[2][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[3][service_type_id]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "service[3][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[4][service_type_id]",
													"value": "4",
													"type": "text"
												},
												{
													"key": "service[4][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[5][service_type_id]",
													"value": "5",
													"type": "text"
												},
												{
													"key": "service[5][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[6][service_type_id]",
													"value": "6",
													"type": "text"
												},
												{
													"key": "service[6][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[9][service_type_id]",
													"value": "9",
													"type": "text"
												},
												{
													"key": "service[9][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[10][service_type_id]",
													"value": "10",
													"type": "text"
												},
												{
													"key": "service[10][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[11][service_type_id]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "service[11][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[12][service_type_id]",
													"value": "12",
													"type": "text"
												},
												{
													"key": "service[12][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[14][service_type_id]",
													"value": "14",
													"type": "text"
												},
												{
													"key": "service[14][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[15][service_type_id]",
													"value": "15",
													"type": "text"
												},
												{
													"key": "service[15][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[16][service_type_id]",
													"value": "16",
													"type": "text"
												},
												{
													"key": "service[16][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[17][service_type_id]",
													"value": "17",
													"type": "text"
												},
												{
													"key": "service[17][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[18][service_type_id]",
													"value": "18",
													"type": "text"
												},
												{
													"key": "service[18][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[19][service_type_id]",
													"value": "19",
													"type": "text"
												},
												{
													"key": "service[19][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[20][service_type_id]",
													"value": "20",
													"type": "text"
												},
												{
													"key": "service[20][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[22][service_type_id]",
													"value": "22",
													"type": "text"
												},
												{
													"key": "service[22][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[23][service_type_id]",
													"value": "23",
													"type": "text"
												},
												{
													"key": "service[23][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[24][service_type_id]",
													"value": "24",
													"type": "text"
												},
												{
													"key": "service[24][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[25][service_type_id]",
													"value": "25",
													"type": "text"
												},
												{
													"key": "service[25][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[26][service_type_id]",
													"value": "26",
													"type": "text"
												},
												{
													"key": "service[26][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[27][service_type_id]",
													"value": "27",
													"type": "text"
												},
												{
													"key": "service[27][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[28][service_type_id]",
													"value": "28",
													"type": "text"
												},
												{
													"key": "service[28][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[29][service_type_id]",
													"value": "29",
													"type": "text"
												},
												{
													"key": "service[29][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[30][service_type_id]",
													"value": "30",
													"type": "text"
												},
												{
													"key": "service[30][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[31][service_type_id]",
													"value": "31",
													"type": "text"
												},
												{
													"key": "service[31][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[32][service_type_id]",
													"value": "32",
													"type": "text"
												},
												{
													"key": "service[32][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[33][service_type_id]",
													"value": "33",
													"type": "text"
												},
												{
													"key": "service[33][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[34][service_type_id]",
													"value": "34",
													"type": "text"
												},
												{
													"key": "service[34][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[35][service_type_id]",
													"value": "35",
													"type": "text"
												},
												{
													"key": "service[35][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[36][service_type_id]",
													"value": "36",
													"type": "text"
												},
												{
													"key": "service[36][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[37][service_type_id]",
													"value": "37",
													"type": "text"
												},
												{
													"key": "service[37][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[38][service_type_id]",
													"value": "38",
													"type": "text"
												},
												{
													"key": "service[38][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[39][service_type_id]",
													"value": "39",
													"type": "text"
												},
												{
													"key": "service[39][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[40][service_type_id]",
													"value": "40",
													"type": "text"
												},
												{
													"key": "service[40][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[41][service_type_id]",
													"value": "41",
													"type": "text"
												},
												{
													"key": "service[41][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[42][service_type_id]",
													"value": "42",
													"type": "text"
												},
												{
													"key": "service[42][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[43][service_type_id]",
													"value": "43",
													"type": "text"
												},
												{
													"key": "service[43][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[44][service_type_id]",
													"value": "44",
													"type": "text"
												},
												{
													"key": "service[44][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[45][service_type_id]",
													"value": "45",
													"type": "text"
												},
												{
													"key": "service[45][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[46][service_type_id]",
													"value": "46",
													"type": "text"
												},
												{
													"key": "service[46][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[47][service_type_id]",
													"value": "47",
													"type": "text"
												},
												{
													"key": "service[47][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[48][service_type_id]",
													"value": "48",
													"type": "text"
												},
												{
													"key": "service[48][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[49][service_type_id]",
													"value": "49",
													"type": "text"
												},
												{
													"key": "service[49][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[50][service_type_id]",
													"value": "50",
													"type": "text"
												},
												{
													"key": "service[50][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[51][service_type_id]",
													"value": "51",
													"type": "text"
												},
												{
													"key": "service[51][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[52][service_type_id]",
													"value": "52",
													"type": "text"
												},
												{
													"key": "service[52][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[53][service_type_id]",
													"value": "53",
													"type": "text"
												},
												{
													"key": "service[53][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[54][service_type_id]",
													"value": "54",
													"type": "text"
												},
												{
													"key": "service[54][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[55][service_type_id]",
													"value": "55",
													"type": "text"
												},
												{
													"key": "service[55][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[56][service_type_id]",
													"value": "56",
													"type": "text"
												},
												{
													"key": "service[56][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[57][service_type_id]",
													"value": "57",
													"type": "text"
												},
												{
													"key": "service[57][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[58][service_type_id]",
													"value": "58",
													"type": "text"
												},
												{
													"key": "service[58][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[59][service_type_id]",
													"value": "59",
													"type": "text"
												},
												{
													"key": "service[59][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[60][service_type_id]",
													"value": "60",
													"type": "text"
												},
												{
													"key": "service[60][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[61][service_type_id]",
													"value": "61",
													"type": "text"
												},
												{
													"key": "service[61][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[62][service_type_id]",
													"value": "62",
													"type": "text"
												},
												{
													"key": "service[62][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[63][service_type_id]",
													"value": "63",
													"type": "text"
												},
												{
													"key": "service[63][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[64][service_type_id]",
													"value": "64",
													"type": "text"
												},
												{
													"key": "service[64][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[65][service_type_id]",
													"value": "65",
													"type": "text"
												},
												{
													"key": "service[65][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[66][service_type_id]",
													"value": "66",
													"type": "text"
												},
												{
													"key": "service[66][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[67][service_type_id]",
													"value": "67",
													"type": "text"
												},
												{
													"key": "service[67][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[68][service_type_id]",
													"value": "68",
													"type": "text"
												},
												{
													"key": "service[68][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[69][service_type_id]",
													"value": "69",
													"type": "text"
												},
												{
													"key": "service[69][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[70][service_type_id]",
													"value": "70",
													"type": "text"
												},
												{
													"key": "service[70][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[71][service_type_id]",
													"value": "71",
													"type": "text"
												},
												{
													"key": "service[71][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[72][service_type_id]",
													"value": "72",
													"type": "text"
												},
												{
													"key": "service[72][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[73][service_type_id]",
													"value": "73",
													"type": "text"
												},
												{
													"key": "service[73][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[74][service_type_id]",
													"value": "74",
													"type": "text"
												},
												{
													"key": "service[74][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[75][service_type_id]",
													"value": "75",
													"type": "text"
												},
												{
													"key": "service[75][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[76][service_type_id]",
													"value": "76",
													"type": "text"
												},
												{
													"key": "service[76][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[77][service_type_id]",
													"value": "77",
													"type": "text"
												},
												{
													"key": "service[77][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[78][service_type_id]",
													"value": "78",
													"type": "text"
												},
												{
													"key": "service[78][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[79][service_type_id]",
													"value": "79",
													"type": "text"
												},
												{
													"key": "service[79][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[80][service_type_id]",
													"value": "80",
													"type": "text"
												},
												{
													"key": "service[80][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[81][service_type_id]",
													"value": "81",
													"type": "text"
												},
												{
													"key": "service[81][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[82][service_type_id]",
													"value": "82",
													"type": "text"
												},
												{
													"key": "service[82][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[83][service_type_id]",
													"value": "83",
													"type": "text"
												},
												{
													"key": "service[83][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[84][service_type_id]",
													"value": "84",
													"type": "text"
												},
												{
													"key": "service[84][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[85][service_type_id]",
													"value": "85",
													"type": "text"
												},
												{
													"key": "service[85][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[86][service_type_id]",
													"value": "86",
													"type": "text"
												},
												{
													"key": "service[86][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[87][service_type_id]",
													"value": "87",
													"type": "text"
												},
												{
													"key": "service[87][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[88][service_type_id]",
													"value": "88",
													"type": "text"
												},
												{
													"key": "service[88][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[89][service_type_id]",
													"value": "89",
													"type": "text"
												},
												{
													"key": "service[89][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[90][service_type_id]",
													"value": "90",
													"type": "text"
												},
												{
													"key": "service[90][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[91][service_type_id]",
													"value": "91",
													"type": "text"
												},
												{
													"key": "service[91][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[92][service_type_id]",
													"value": "92",
													"type": "text"
												},
												{
													"key": "service[92][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[93][service_type_id]",
													"value": "93",
													"type": "text"
												},
												{
													"key": "service[93][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[94][service_type_id]",
													"value": "94",
													"type": "text"
												},
												{
													"key": "service[94][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[95][service_type_id]",
													"value": "95",
													"type": "text"
												},
												{
													"key": "service[95][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[96][service_type_id]",
													"value": "96",
													"type": "text"
												},
												{
													"key": "service[96][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[98][service_type_id]",
													"value": "98",
													"type": "text"
												},
												{
													"key": "service[98][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[99][service_type_id]",
													"value": "99",
													"type": "text"
												},
												{
													"key": "service[99][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[100][service_type_id]",
													"value": "100",
													"type": "text"
												},
												{
													"key": "service[100][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[101][service_type_id]",
													"value": "101",
													"type": "text"
												},
												{
													"key": "service[101][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[102][service_type_id]",
													"value": "102",
													"type": "text"
												},
												{
													"key": "service[102][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[103][service_type_id]",
													"value": "103",
													"type": "text"
												},
												{
													"key": "service[103][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[105][service_type_id]",
													"value": "105",
													"type": "text"
												},
												{
													"key": "service[105][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[106][service_type_id]",
													"value": "106",
													"type": "text"
												},
												{
													"key": "service[106][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[107][service_type_id]",
													"value": "107",
													"type": "text"
												},
												{
													"key": "service[107][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[108][service_type_id]",
													"value": "108",
													"type": "text"
												},
												{
													"key": "service[108][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[109][service_type_id]",
													"value": "109",
													"type": "text"
												},
												{
													"key": "service[109][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[110][service_type_id]",
													"value": "110",
													"type": "text"
												},
												{
													"key": "service[110][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[111][service_type_id]",
													"value": "111",
													"type": "text"
												},
												{
													"key": "service[111][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[112][service_type_id]",
													"value": "112",
													"type": "text"
												},
												{
													"key": "service[112][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[113][service_type_id]",
													"value": "113",
													"type": "text"
												},
												{
													"key": "service[113][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[115][service_type_id]",
													"value": "115",
													"type": "text"
												},
												{
													"key": "service[115][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[116][service_type_id]",
													"value": "116",
													"type": "text"
												},
												{
													"key": "service[116][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[117][service_type_id]",
													"value": "117",
													"type": "text"
												},
												{
													"key": "service[117][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[118][service_type_id]",
													"value": "118",
													"type": "text"
												},
												{
													"key": "service[118][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[119][service_type_id]",
													"value": "119",
													"type": "text"
												},
												{
													"key": "service[119][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[120][service_type_id]",
													"value": "120",
													"type": "text"
												},
												{
													"key": "service[120][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[121][service_type_id]",
													"value": "121",
													"type": "text"
												},
												{
													"key": "service[121][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[122][service_type_id]",
													"value": "122",
													"type": "text"
												},
												{
													"key": "service[122][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[124][service_type_id]",
													"value": "124",
													"type": "text"
												},
												{
													"key": "service[124][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[125][service_type_id]",
													"value": "125",
													"type": "text"
												},
												{
													"key": "service[125][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[126][service_type_id]",
													"value": "126",
													"type": "text"
												},
												{
													"key": "service[126][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[128][service_type_id]",
													"value": "128",
													"type": "text"
												},
												{
													"key": "service[128][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[129][service_type_id]",
													"value": "129",
													"type": "text"
												},
												{
													"key": "service[129][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[130][service_type_id]",
													"value": "130",
													"type": "text"
												},
												{
													"key": "service[130][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[131][service_type_id]",
													"value": "131",
													"type": "text"
												},
												{
													"key": "service[131][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[132][service_type_id]",
													"value": "132",
													"type": "text"
												},
												{
													"key": "service[132][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[133][service_type_id]",
													"value": "133",
													"type": "text"
												},
												{
													"key": "service[133][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[134][service_type_id]",
													"value": "134",
													"type": "text"
												},
												{
													"key": "service[134][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[135][service_type_id]",
													"value": "135",
													"type": "text"
												},
												{
													"key": "service[135][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[136][service_type_id]",
													"value": "136",
													"type": "text"
												},
												{
													"key": "service[136][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[137][service_type_id]",
													"value": "137",
													"type": "text"
												},
												{
													"key": "service[137][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[138][service_type_id]",
													"value": "138",
													"type": "text"
												},
												{
													"key": "service[138][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[139][service_type_id]",
													"value": "139",
													"type": "text"
												},
												{
													"key": "service[139][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[140][service_type_id]",
													"value": "140",
													"type": "text"
												},
												{
													"key": "service[140][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[141][service_type_id]",
													"value": "141",
													"type": "text"
												},
												{
													"key": "service[141][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[142][service_type_id]",
													"value": "142",
													"type": "text"
												},
												{
													"key": "service[142][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[143][service_type_id]",
													"value": "143",
													"type": "text"
												},
												{
													"key": "service[143][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[144][service_type_id]",
													"value": "144",
													"type": "text"
												},
												{
													"key": "service[144][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[145][service_type_id]",
													"value": "145",
													"type": "text"
												},
												{
													"key": "service[145][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[146][service_type_id]",
													"value": "146",
													"type": "text"
												},
												{
													"key": "service[146][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[147][service_type_id]",
													"value": "147",
													"type": "text"
												},
												{
													"key": "service[147][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[148][service_type_id]",
													"value": "148",
													"type": "text"
												},
												{
													"key": "service[148][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[149][service_type_id]",
													"value": "149",
													"type": "text"
												},
												{
													"key": "service[149][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[150][service_type_id]",
													"value": "150",
													"type": "text"
												},
												{
													"key": "service[150][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[151][service_type_id]",
													"value": "151",
													"type": "text"
												},
												{
													"key": "service[151][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[152][service_type_id]",
													"value": "152",
													"type": "text"
												},
												{
													"key": "service[152][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[153][service_type_id]",
													"value": "153",
													"type": "text"
												},
												{
													"key": "service[153][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[154][service_type_id]",
													"value": "154",
													"type": "text"
												},
												{
													"key": "service[154][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[155][service_type_id]",
													"value": "155",
													"type": "text"
												},
												{
													"key": "service[155][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[156][service_type_id]",
													"value": "156",
													"type": "text"
												},
												{
													"key": "service[156][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[157][service_type_id]",
													"value": "157",
													"type": "text"
												},
												{
													"key": "service[157][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[158][service_type_id]",
													"value": "158",
													"type": "text"
												},
												{
													"key": "service[158][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[159][service_type_id]",
													"value": "159",
													"type": "text"
												},
												{
													"key": "service[159][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[160][service_type_id]",
													"value": "160",
													"type": "text"
												},
												{
													"key": "service[160][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[161][service_type_id]",
													"value": "161",
													"type": "text"
												},
												{
													"key": "service[161][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[162][service_type_id]",
													"value": "162",
													"type": "text"
												},
												{
													"key": "service[162][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[163][service_type_id]",
													"value": "163",
													"type": "text"
												},
												{
													"key": "service[163][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[166][service_type_id]",
													"value": "166",
													"type": "text"
												},
												{
													"key": "service[166][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[167][service_type_id]",
													"value": "167",
													"type": "text"
												},
												{
													"key": "service[167][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[168][service_type_id]",
													"value": "168",
													"type": "text"
												},
												{
													"key": "service[168][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[169][service_type_id]",
													"value": "169",
													"type": "text"
												},
												{
													"key": "service[169][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[170][service_type_id]",
													"value": "170",
													"type": "text"
												},
												{
													"key": "service[170][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[171][service_type_id]",
													"value": "171",
													"type": "text"
												},
												{
													"key": "service[171][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[172][service_type_id]",
													"value": "172",
													"type": "text"
												},
												{
													"key": "service[172][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[173][service_type_id]",
													"value": "173",
													"type": "text"
												},
												{
													"key": "service[173][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[174][service_type_id]",
													"value": "174",
													"type": "text"
												},
												{
													"key": "service[174][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[175][service_type_id]",
													"value": "175",
													"type": "text"
												},
												{
													"key": "service[175][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[176][service_type_id]",
													"value": "176",
													"type": "text"
												},
												{
													"key": "service[176][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[177][service_type_id]",
													"value": "177",
													"type": "text"
												},
												{
													"key": "service[177][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[178][service_type_id]",
													"value": "178",
													"type": "text"
												},
												{
													"key": "service[178][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[179][service_type_id]",
													"value": "179",
													"type": "text"
												},
												{
													"key": "service[179][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[180][service_type_id]",
													"value": "180",
													"type": "text"
												},
												{
													"key": "service[180][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[181][service_type_id]",
													"value": "181",
													"type": "text"
												},
												{
													"key": "service[181][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[182][service_type_id]",
													"value": "182",
													"type": "text"
												},
												{
													"key": "service[182][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[183][service_type_id]",
													"value": "183",
													"type": "text"
												},
												{
													"key": "service[183][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[184][service_type_id]",
													"value": "184",
													"type": "text"
												},
												{
													"key": "service[184][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[185][service_type_id]",
													"value": "185",
													"type": "text"
												},
												{
													"key": "service[185][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[187][service_type_id]",
													"value": "187",
													"type": "text"
												},
												{
													"key": "service[187][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[188][service_type_id]",
													"value": "188",
													"type": "text"
												},
												{
													"key": "service[188][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[189][service_type_id]",
													"value": "189",
													"type": "text"
												},
												{
													"key": "service[189][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[190][service_type_id]",
													"value": "190",
													"type": "text"
												},
												{
													"key": "service[190][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[193][service_type_id]",
													"value": "193",
													"type": "text"
												},
												{
													"key": "service[193][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[194][service_type_id]",
													"value": "194",
													"type": "text"
												},
												{
													"key": "service[194][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[195][service_type_id]",
													"value": "195",
													"type": "text"
												},
												{
													"key": "service[195][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[196][service_type_id]",
													"value": "196",
													"type": "text"
												},
												{
													"key": "service[196][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[197][service_type_id]",
													"value": "197",
													"type": "text"
												},
												{
													"key": "service[197][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[198][service_type_id]",
													"value": "198",
													"type": "text"
												},
												{
													"key": "service[198][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[199][service_type_id]",
													"value": "199",
													"type": "text"
												},
												{
													"key": "service[199][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[200][service_type_id]",
													"value": "200",
													"type": "text"
												},
												{
													"key": "service[200][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[201][service_type_id]",
													"value": "201",
													"type": "text"
												},
												{
													"key": "service[201][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[202][service_type_id]",
													"value": "202",
													"type": "text"
												},
												{
													"key": "service[202][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[203][service_type_id]",
													"value": "203",
													"type": "text"
												},
												{
													"key": "service[203][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[204][service_type_id]",
													"value": "204",
													"type": "text"
												},
												{
													"key": "service[204][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[205][service_type_id]",
													"value": "205",
													"type": "text"
												},
												{
													"key": "service[205][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[206][service_type_id]",
													"value": "206",
													"type": "text"
												},
												{
													"key": "service[206][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[207][service_type_id]",
													"value": "207",
													"type": "text"
												},
												{
													"key": "service[207][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[208][service_type_id]",
													"value": "208",
													"type": "text"
												},
												{
													"key": "service[208][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[209][service_type_id]",
													"value": "209",
													"type": "text"
												},
												{
													"key": "service[209][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[210][service_type_id]",
													"value": "210",
													"type": "text"
												},
												{
													"key": "service[210][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[211][service_type_id]",
													"value": "211",
													"type": "text"
												},
												{
													"key": "service[211][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[212][service_type_id]",
													"value": "212",
													"type": "text"
												},
												{
													"key": "service[212][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[213][service_type_id]",
													"value": "213",
													"type": "text"
												},
												{
													"key": "service[213][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[214][service_type_id]",
													"value": "214",
													"type": "text"
												},
												{
													"key": "service[214][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[215][service_type_id]",
													"value": "215",
													"type": "text"
												},
												{
													"key": "service[215][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[216][service_type_id]",
													"value": "216",
													"type": "text"
												},
												{
													"key": "service[216][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[217][service_type_id]",
													"value": "217",
													"type": "text"
												},
												{
													"key": "service[217][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[218][service_type_id]",
													"value": "218",
													"type": "text"
												},
												{
													"key": "service[218][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[219][service_type_id]",
													"value": "219",
													"type": "text"
												},
												{
													"key": "service[219][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[220][service_type_id]",
													"value": "220",
													"type": "text"
												},
												{
													"key": "service[220][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[221][service_type_id]",
													"value": "221",
													"type": "text"
												},
												{
													"key": "service[221][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[222][service_type_id]",
													"value": "222",
													"type": "text"
												},
												{
													"key": "service[222][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[223][service_type_id]",
													"value": "223",
													"type": "text"
												},
												{
													"key": "service[223][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[224][service_type_id]",
													"value": "224",
													"type": "text"
												},
												{
													"key": "service[224][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[225][service_type_id]",
													"value": "225",
													"type": "text"
												},
												{
													"key": "service[225][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[226][service_type_id]",
													"value": "226",
													"type": "text"
												},
												{
													"key": "service[226][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[227][service_type_id]",
													"value": "227",
													"type": "text"
												},
												{
													"key": "service[227][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[228][service_type_id]",
													"value": "228",
													"type": "text"
												},
												{
													"key": "service[228][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[229][service_type_id]",
													"value": "229",
													"type": "text"
												},
												{
													"key": "service[229][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[230][service_type_id]",
													"value": "230",
													"type": "text"
												},
												{
													"key": "service[230][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[231][service_type_id]",
													"value": "231",
													"type": "text"
												},
												{
													"key": "service[231][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[232][service_type_id]",
													"value": "232",
													"type": "text"
												},
												{
													"key": "service[232][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[233][service_type_id]",
													"value": "233",
													"type": "text"
												},
												{
													"key": "service[233][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[234][service_type_id]",
													"value": "234",
													"type": "text"
												},
												{
													"key": "service[234][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[235][service_type_id]",
													"value": "235",
													"type": "text"
												},
												{
													"key": "service[235][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[236][service_type_id]",
													"value": "236",
													"type": "text"
												},
												{
													"key": "service[236][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[237][service_type_id]",
													"value": "237",
													"type": "text"
												},
												{
													"key": "service[237][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[238][service_type_id]",
													"value": "238",
													"type": "text"
												},
												{
													"key": "service[238][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[239][service_type_id]",
													"value": "239",
													"type": "text"
												},
												{
													"key": "service[239][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[240][service_type_id]",
													"value": "240",
													"type": "text"
												},
												{
													"key": "service[240][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[241][service_type_id]",
													"value": "241",
													"type": "text"
												},
												{
													"key": "service[241][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[242][service_type_id]",
													"value": "242",
													"type": "text"
												},
												{
													"key": "service[242][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[245][service_type_id]",
													"value": "245",
													"type": "text"
												},
												{
													"key": "service[245][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[246][service_type_id]",
													"value": "246",
													"type": "text"
												},
												{
													"key": "service[246][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[247][service_type_id]",
													"value": "247",
													"type": "text"
												},
												{
													"key": "service[247][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[248][service_type_id]",
													"value": "248",
													"type": "text"
												},
												{
													"key": "service[248][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[249][service_type_id]",
													"value": "249",
													"type": "text"
												},
												{
													"key": "service[249][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[250][service_type_id]",
													"value": "250",
													"type": "text"
												},
												{
													"key": "service[250][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[251][service_type_id]",
													"value": "251",
													"type": "text"
												},
												{
													"key": "service[251][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[252][service_type_id]",
													"value": "252",
													"type": "text"
												},
												{
													"key": "service[252][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[253][service_type_id]",
													"value": "253",
													"type": "text"
												},
												{
													"key": "service[253][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[254][service_type_id]",
													"value": "254",
													"type": "text"
												},
												{
													"key": "service[254][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[255][service_type_id]",
													"value": "255",
													"type": "text"
												},
												{
													"key": "service[255][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[256][service_type_id]",
													"value": "256",
													"type": "text"
												},
												{
													"key": "service[256][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[257][service_type_id]",
													"value": "257",
													"type": "text"
												},
												{
													"key": "service[257][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[258][service_type_id]",
													"value": "258",
													"type": "text"
												},
												{
													"key": "service[258][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[259][service_type_id]",
													"value": "259",
													"type": "text"
												},
												{
													"key": "service[259][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[260][service_type_id]",
													"value": "260",
													"type": "text"
												},
												{
													"key": "service[260][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[261][service_type_id]",
													"value": "261",
													"type": "text"
												},
												{
													"key": "service[261][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[262][service_type_id]",
													"value": "262",
													"type": "text"
												},
												{
													"key": "service[262][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[263][service_type_id]",
													"value": "263",
													"type": "text"
												},
												{
													"key": "service[263][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[264][service_type_id]",
													"value": "264",
													"type": "text"
												},
												{
													"key": "service[264][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[265][service_type_id]",
													"value": "265",
													"type": "text"
												},
												{
													"key": "service[265][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[266][service_type_id]",
													"value": "266",
													"type": "text"
												},
												{
													"key": "service[266][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[267][service_type_id]",
													"value": "267",
													"type": "text"
												},
												{
													"key": "service[267][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[268][service_type_id]",
													"value": "268",
													"type": "text"
												},
												{
													"key": "service[268][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[269][service_type_id]",
													"value": "269",
													"type": "text"
												},
												{
													"key": "service[269][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[270][service_type_id]",
													"value": "270",
													"type": "text"
												},
												{
													"key": "service[270][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[271][service_type_id]",
													"value": "271",
													"type": "text"
												},
												{
													"key": "service[271][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[272][service_type_id]",
													"value": "272",
													"type": "text"
												},
												{
													"key": "service[272][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[273][service_type_id]",
													"value": "273",
													"type": "text"
												},
												{
													"key": "service[273][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[274][service_type_id]",
													"value": "274",
													"type": "text"
												},
												{
													"key": "service[274][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[275][service_type_id]",
													"value": "275",
													"type": "text"
												},
												{
													"key": "service[275][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[276][service_type_id]",
													"value": "276",
													"type": "text"
												},
												{
													"key": "service[276][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[277][service_type_id]",
													"value": "277",
													"type": "text"
												},
												{
													"key": "service[277][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[278][service_type_id]",
													"value": "278",
													"type": "text"
												},
												{
													"key": "service[278][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[279][service_type_id]",
													"value": "279",
													"type": "text"
												},
												{
													"key": "service[279][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[280][service_type_id]",
													"value": "280",
													"type": "text"
												},
												{
													"key": "service[280][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[281][service_type_id]",
													"value": "281",
													"type": "text"
												},
												{
													"key": "service[281][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[282][service_type_id]",
													"value": "282",
													"type": "text"
												},
												{
													"key": "service[282][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[284][service_type_id]",
													"value": "284",
													"type": "text"
												},
												{
													"key": "service[284][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[285][service_type_id]",
													"value": "285",
													"type": "text"
												},
												{
													"key": "service[285][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[286][service_type_id]",
													"value": "286",
													"type": "text"
												},
												{
													"key": "service[286][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[287][service_type_id]",
													"value": "287",
													"type": "text"
												},
												{
													"key": "service[287][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[288][service_type_id]",
													"value": "288",
													"type": "text"
												},
												{
													"key": "service[288][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[289][service_type_id]",
													"value": "289",
													"type": "text"
												},
												{
													"key": "service[289][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[290][service_type_id]",
													"value": "290",
													"type": "text"
												},
												{
													"key": "service[290][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[291][service_type_id]",
													"value": "291",
													"type": "text"
												},
												{
													"key": "service[291][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[292][service_type_id]",
													"value": "292",
													"type": "text"
												},
												{
													"key": "service[292][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[293][service_type_id]",
													"value": "293",
													"type": "text"
												},
												{
													"key": "service[293][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[294][service_type_id]",
													"value": "294",
													"type": "text"
												},
												{
													"key": "service[294][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[295][service_type_id]",
													"value": "295",
													"type": "text"
												},
												{
													"key": "service[295][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[296][service_type_id]",
													"value": "296",
													"type": "text"
												},
												{
													"key": "service[296][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[297][service_type_id]",
													"value": "297",
													"type": "text"
												},
												{
													"key": "service[297][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[298][service_type_id]",
													"value": "298",
													"type": "text"
												},
												{
													"key": "service[298][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[299][service_type_id]",
													"value": "299",
													"type": "text"
												},
												{
													"key": "service[299][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[300][service_type_id]",
													"value": "300",
													"type": "text"
												},
												{
													"key": "service[300][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[301][service_type_id]",
													"value": "301",
													"type": "text"
												},
												{
													"key": "service[301][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[303][service_type_id]",
													"value": "303",
													"type": "text"
												},
												{
													"key": "service[303][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[305][service_type_id]",
													"value": "305",
													"type": "text"
												},
												{
													"key": "service[305][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[306][service_type_id]",
													"value": "306",
													"type": "text"
												},
												{
													"key": "service[306][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[307][service_type_id]",
													"value": "307",
													"type": "text"
												},
												{
													"key": "service[307][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[308][service_type_id]",
													"value": "308",
													"type": "text"
												},
												{
													"key": "service[308][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[309][service_type_id]",
													"value": "309",
													"type": "text"
												},
												{
													"key": "service[309][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[310][service_type_id]",
													"value": "310",
													"type": "text"
												},
												{
													"key": "service[310][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[313][service_type_id]",
													"value": "313",
													"type": "text"
												},
												{
													"key": "service[313][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[314][service_type_id]",
													"value": "314",
													"type": "text"
												},
												{
													"key": "service[314][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[315][service_type_id]",
													"value": "315",
													"type": "text"
												},
												{
													"key": "service[315][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[316][service_type_id]",
													"value": "316",
													"type": "text"
												},
												{
													"key": "service[316][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[317][service_type_id]",
													"value": "317",
													"type": "text"
												},
												{
													"key": "service[317][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[318][service_type_id]",
													"value": "318",
													"type": "text"
												},
												{
													"key": "service[318][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[319][service_type_id]",
													"value": "319",
													"type": "text"
												},
												{
													"key": "service[319][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[320][service_type_id]",
													"value": "320",
													"type": "text"
												},
												{
													"key": "service[320][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[321][service_type_id]",
													"value": "321",
													"type": "text"
												},
												{
													"key": "service[321][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[322][service_type_id]",
													"value": "322",
													"type": "text"
												},
												{
													"key": "service[322][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[323][service_type_id]",
													"value": "323",
													"type": "text"
												},
												{
													"key": "service[323][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[324][service_type_id]",
													"value": "324",
													"type": "text"
												},
												{
													"key": "service[324][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[325][service_type_id]",
													"value": "325",
													"type": "text"
												},
												{
													"key": "service[325][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[326][service_type_id]",
													"value": "326",
													"type": "text"
												},
												{
													"key": "service[326][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[327][service_type_id]",
													"value": "327",
													"type": "text"
												},
												{
													"key": "service[327][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[328][service_type_id]",
													"value": "328",
													"type": "text"
												},
												{
													"key": "service[328][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[329][service_type_id]",
													"value": "329",
													"type": "text"
												},
												{
													"key": "service[329][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[330][service_type_id]",
													"value": "330",
													"type": "text"
												},
												{
													"key": "service[330][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[331][service_type_id]",
													"value": "331",
													"type": "text"
												},
												{
													"key": "service[331][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[332][service_type_id]",
													"value": "332",
													"type": "text"
												},
												{
													"key": "service[332][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[333][service_type_id]",
													"value": "333",
													"type": "text"
												},
												{
													"key": "service[333][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[334][service_type_id]",
													"value": "334",
													"type": "text"
												},
												{
													"key": "service[334][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[335][service_type_id]",
													"value": "335",
													"type": "text"
												},
												{
													"key": "service[335][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[336][service_type_id]",
													"value": "336",
													"type": "text"
												},
												{
													"key": "service[336][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[337][service_type_id]",
													"value": "337",
													"type": "text"
												},
												{
													"key": "service[337][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[338][service_type_id]",
													"value": "338",
													"type": "text"
												},
												{
													"key": "service[338][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[341][service_type_id]",
													"value": "341",
													"type": "text"
												},
												{
													"key": "service[341][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[342][service_type_id]",
													"value": "342",
													"type": "text"
												},
												{
													"key": "service[342][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[343][service_type_id]",
													"value": "343",
													"type": "text"
												},
												{
													"key": "service[343][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[344][service_type_id]",
													"value": "344",
													"type": "text"
												},
												{
													"key": "service[344][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[345][service_type_id]",
													"value": "345",
													"type": "text"
												},
												{
													"key": "service[345][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[346][service_type_id]",
													"value": "346",
													"type": "text"
												},
												{
													"key": "service[346][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[347][service_type_id]",
													"value": "347",
													"type": "text"
												},
												{
													"key": "service[347][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[348][service_type_id]",
													"value": "348",
													"type": "text"
												},
												{
													"key": "service[348][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[349][service_type_id]",
													"value": "349",
													"type": "text"
												},
												{
													"key": "service[349][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[350][service_type_id]",
													"value": "350",
													"type": "text"
												},
												{
													"key": "service[350][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[351][service_type_id]",
													"value": "351",
													"type": "text"
												},
												{
													"key": "service[351][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[352][service_type_id]",
													"value": "352",
													"type": "text"
												},
												{
													"key": "service[352][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[353][service_type_id]",
													"value": "353",
													"type": "text"
												},
												{
													"key": "service[353][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[354][service_type_id]",
													"value": "354",
													"type": "text"
												},
												{
													"key": "service[354][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[355][service_type_id]",
													"value": "355",
													"type": "text"
												},
												{
													"key": "service[355][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[356][service_type_id]",
													"value": "356",
													"type": "text"
												},
												{
													"key": "service[356][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[357][service_type_id]",
													"value": "357",
													"type": "text"
												},
												{
													"key": "service[357][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[358][service_type_id]",
													"value": "358",
													"type": "text"
												},
												{
													"key": "service[358][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[359][service_type_id]",
													"value": "359",
													"type": "text"
												},
												{
													"key": "service[359][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[360][service_type_id]",
													"value": "360",
													"type": "text"
												},
												{
													"key": "service[360][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[361][service_type_id]",
													"value": "361",
													"type": "text"
												},
												{
													"key": "service[361][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[362][service_type_id]",
													"value": "362",
													"type": "text"
												},
												{
													"key": "service[362][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[363][service_type_id]",
													"value": "363",
													"type": "text"
												},
												{
													"key": "service[363][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[364][service_type_id]",
													"value": "364",
													"type": "text"
												},
												{
													"key": "service[364][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[365][service_type_id]",
													"value": "365",
													"type": "text"
												},
												{
													"key": "service[365][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[366][service_type_id]",
													"value": "366",
													"type": "text"
												},
												{
													"key": "service[366][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[367][service_type_id]",
													"value": "367",
													"type": "text"
												},
												{
													"key": "service[367][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[368][service_type_id]",
													"value": "368",
													"type": "text"
												},
												{
													"key": "service[368][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[369][service_type_id]",
													"value": "369",
													"type": "text"
												},
												{
													"key": "service[369][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[370][service_type_id]",
													"value": "370",
													"type": "text"
												},
												{
													"key": "service[370][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[371][service_type_id]",
													"value": "371",
													"type": "text"
												},
												{
													"key": "service[371][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[372][service_type_id]",
													"value": "372",
													"type": "text"
												},
												{
													"key": "service[372][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[373][service_type_id]",
													"value": "373",
													"type": "text"
												},
												{
													"key": "service[373][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[374][service_type_id]",
													"value": "374",
													"type": "text"
												},
												{
													"key": "service[374][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[375][service_type_id]",
													"value": "375",
													"type": "text"
												},
												{
													"key": "service[375][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[376][service_type_id]",
													"value": "376",
													"type": "text"
												},
												{
													"key": "service[376][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[377][service_type_id]",
													"value": "377",
													"type": "text"
												},
												{
													"key": "service[377][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[378][service_type_id]",
													"value": "378",
													"type": "text"
												},
												{
													"key": "service[378][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[379][service_type_id]",
													"value": "379",
													"type": "text"
												},
												{
													"key": "service[379][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[382][service_type_id]",
													"value": "382",
													"type": "text"
												},
												{
													"key": "service[382][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[383][service_type_id]",
													"value": "383",
													"type": "text"
												},
												{
													"key": "service[383][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[384][service_type_id]",
													"value": "384",
													"type": "text"
												},
												{
													"key": "service[384][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[385][service_type_id]",
													"value": "385",
													"type": "text"
												},
												{
													"key": "service[385][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[386][service_type_id]",
													"value": "386",
													"type": "text"
												},
												{
													"key": "service[386][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[387][service_type_id]",
													"value": "387",
													"type": "text"
												},
												{
													"key": "service[387][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[388][service_type_id]",
													"value": "388",
													"type": "text"
												},
												{
													"key": "service[388][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[389][service_type_id]",
													"value": "389",
													"type": "text"
												},
												{
													"key": "service[389][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[390][service_type_id]",
													"value": "390",
													"type": "text"
												},
												{
													"key": "service[390][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[391][service_type_id]",
													"value": "391",
													"type": "text"
												},
												{
													"key": "service[391][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[392][service_type_id]",
													"value": "392",
													"type": "text"
												},
												{
													"key": "service[392][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[393][service_type_id]",
													"value": "393",
													"type": "text"
												},
												{
													"key": "service[393][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[394][service_type_id]",
													"value": "394",
													"type": "text"
												},
												{
													"key": "service[394][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[395][service_type_id]",
													"value": "395",
													"type": "text"
												},
												{
													"key": "service[395][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[396][service_type_id]",
													"value": "396",
													"type": "text"
												},
												{
													"key": "service[396][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[397][service_type_id]",
													"value": "397",
													"type": "text"
												},
												{
													"key": "service[397][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[398][service_type_id]",
													"value": "398",
													"type": "text"
												},
												{
													"key": "service[398][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[399][service_type_id]",
													"value": "399",
													"type": "text"
												},
												{
													"key": "service[399][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[400][service_type_id]",
													"value": "400",
													"type": "text"
												},
												{
													"key": "service[400][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[401][service_type_id]",
													"value": "401",
													"type": "text"
												},
												{
													"key": "service[401][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[402][service_type_id]",
													"value": "402",
													"type": "text"
												},
												{
													"key": "service[402][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[403][service_type_id]",
													"value": "403",
													"type": "text"
												},
												{
													"key": "service[403][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[404][service_type_id]",
													"value": "404",
													"type": "text"
												},
												{
													"key": "service[404][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[405][service_type_id]",
													"value": "405",
													"type": "text"
												},
												{
													"key": "service[405][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[406][service_type_id]",
													"value": "406",
													"type": "text"
												},
												{
													"key": "service[406][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[407][service_type_id]",
													"value": "407",
													"type": "text"
												},
												{
													"key": "service[407][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[408][service_type_id]",
													"value": "408",
													"type": "text"
												},
												{
													"key": "service[408][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[409][service_type_id]",
													"value": "409",
													"type": "text"
												},
												{
													"key": "service[409][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[410][service_type_id]",
													"value": "410",
													"type": "text"
												},
												{
													"key": "service[410][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[411][service_type_id]",
													"value": "411",
													"type": "text"
												},
												{
													"key": "service[411][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[412][service_type_id]",
													"value": "412",
													"type": "text"
												},
												{
													"key": "service[412][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[413][service_type_id]",
													"value": "413",
													"type": "text"
												},
												{
													"key": "service[413][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[414][service_type_id]",
													"value": "414",
													"type": "text"
												},
												{
													"key": "service[414][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[415][service_type_id]",
													"value": "415",
													"type": "text"
												},
												{
													"key": "service[415][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[416][service_type_id]",
													"value": "416",
													"type": "text"
												},
												{
													"key": "service[416][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[417][service_type_id]",
													"value": "417",
													"type": "text"
												},
												{
													"key": "service[417][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[423][service_type_id]",
													"value": "423",
													"type": "text"
												},
												{
													"key": "service[423][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[424][service_type_id]",
													"value": "424",
													"type": "text"
												},
												{
													"key": "service[424][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_types[1][value]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_types[2][value]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "car_types[3][value]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "car_types[4][value]",
													"value": "4",
													"type": "text"
												},
												{
													"key": "car_types[5][value]",
													"value": "5",
													"type": "text"
												},
												{
													"key": "car_types[6][value]",
													"value": "6",
													"type": "text"
												},
												{
													"key": "car_types[8][value]",
													"value": "8",
													"type": "text"
												},
												{
													"key": "car_types[9][value]",
													"value": "9",
													"type": "text"
												},
												{
													"key": "car_types[10][value]",
													"value": "10",
													"type": "text"
												},
												{
													"key": "car_types[11][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "car_types[12][value]",
													"value": "12",
													"type": "text"
												},
												{
													"key": "car_types[13][value]",
													"value": "13",
													"type": "text"
												},
												{
													"key": "car_types[14][value]",
													"value": "14",
													"type": "text"
												},
												{
													"key": "car_types[15][value]",
													"value": "15",
													"type": "text"
												},
												{
													"key": "car_types[16][value]",
													"value": "16",
													"type": "text"
												},
												{
													"key": "car_types[17][value]",
													"value": "17",
													"type": "text"
												},
												{
													"key": "car_types[18][value]",
													"value": "18",
													"type": "text"
												},
												{
													"key": "car_types[19][value]",
													"value": "19",
													"type": "text"
												},
												{
													"key": "car_types[20][value]",
													"value": "20",
													"type": "text"
												},
												{
													"key": "car_types[21][value]",
													"value": "21",
													"type": "text"
												},
												{
													"key": "car_types[22][value]",
													"value": "22",
													"type": "text"
												},
												{
													"key": "car_types[23][value]",
													"value": "23",
													"type": "text"
												},
												{
													"key": "car_types[24][value]",
													"value": "24",
													"type": "text"
												},
												{
													"key": "car_types[25][value]",
													"value": "25",
													"type": "text"
												},
												{
													"key": "car_types[26][value]",
													"value": "26",
													"type": "text"
												},
												{
													"key": "car_types[27][value]",
													"value": "27",
													"type": "text"
												},
												{
													"key": "car_types[28][value]",
													"value": "28",
													"type": "text"
												},
												{
													"key": "car_types[29][value]",
													"value": "29",
													"type": "text"
												},
												{
													"key": "car_types[30][value]",
													"value": "30",
													"type": "text"
												},
												{
													"key": "car_types[31][value]",
													"value": "31",
													"type": "text"
												},
												{
													"key": "car_types[32][value]",
													"value": "32",
													"type": "text"
												},
												{
													"key": "car_types[33][value]",
													"value": "33",
													"type": "text"
												},
												{
													"key": "car_types[35][value]",
													"value": "35",
													"type": "text"
												},
												{
													"key": "car_types[36][value]",
													"value": "36",
													"type": "text"
												},
												{
													"key": "car_types[37][value]",
													"value": "37",
													"type": "text"
												},
												{
													"key": "car_types[38][value]",
													"value": "38",
													"type": "text"
												},
												{
													"key": "car_types[39][value]",
													"value": "39",
													"type": "text"
												},
												{
													"key": "car_types[40][value]",
													"value": "40",
													"type": "text"
												},
												{
													"key": "car_types[41][value]",
													"value": "41",
													"type": "text"
												},
												{
													"key": "car_types[42][value]",
													"value": "42",
													"type": "text"
												},
												{
													"key": "car_types[43][value]",
													"value": "43",
													"type": "text"
												},
												{
													"key": "car_types[44][value]",
													"value": "44",
													"type": "text"
												},
												{
													"key": "car_types[45][value]",
													"value": "45",
													"type": "text"
												},
												{
													"key": "car_types[46][value]",
													"value": "46",
													"type": "text"
												},
												{
													"key": "car_types[47][value]",
													"value": "47",
													"type": "text"
												},
												{
													"key": "car_types[48][value]",
													"value": "48",
													"type": "text"
												},
												{
													"key": "car_types[49][value]",
													"value": "49",
													"type": "text"
												},
												{
													"key": "car_types[50][value]",
													"value": "50",
													"type": "text"
												},
												{
													"key": "car_types[215][value]",
													"value": "215",
													"type": "text"
												},
												{
													"key": "car_types[219][value]",
													"value": "219",
													"type": "text"
												},
												{
													"key": "car_types[264][value]",
													"value": "264",
													"type": "text"
												},
												{
													"key": "car_statuses[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_statuses[1]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "car_statuses[2]",
													"value": "4",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/admin/companies/64",
											"host": [
												"{{4443}}"
											],
											"path": [
												"admin",
												"companies",
												"64"
											]
										}
									},
									"response": []
								},
								{
									"name": "/admin/requests - List of all Service Started",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"if(responseJson.data.length){",
													"    pm.collectionVariables.set(\"requestCancel\",responseJson.data[0].id );",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Host",
												"value": " sandbox.driveroo.com",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Connection",
												"value": " keep-alive",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Pragma",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cache-Control",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Upgrade-Insecure-Requests",
												"value": " 1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "User-Agent",
												"value": " Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": " text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Site",
												"value": " none",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Mode",
												"value": " navigate",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-User",
												"value": " ?1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Dest",
												"value": " document",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": " gzip, deflate, br",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Language",
												"value": " ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": " _gid=GA1.2.840618837.1611337377; _hjTLDTest=1; _hjid=8d983bd7-eca9-4fea-af47-1ed7d0fad41b; ajs_group_id=null; ajs_anonymous_id=%225a1ec840-5f13-481d-a854-e650dc93f008%22; io=w6KnxNj69BQwpA66AAWX; _ga=GA1.1.1369376699.1611131368; _ga_VLL86CMPFN=GS1.1.1611399836.14.1.1611399849.47; laravel_session=jqfREURLwCPfkcCsgOrb4UEH2JMFMMgluL4RiFFR",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": "{{cookies-token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name=Chuck+Norris&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "Chuck+Norris"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/admin/requests - List of all Provider Arrived",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"if(responseJson.data.length){",
													"    pm.collectionVariables.set(\"requestCancel\",responseJson.data[0].id );",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Host",
												"value": " sandbox.driveroo.com",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Connection",
												"value": " keep-alive",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Pragma",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cache-Control",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Upgrade-Insecure-Requests",
												"value": " 1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "User-Agent",
												"value": " Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": " text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Site",
												"value": " none",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Mode",
												"value": " navigate",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-User",
												"value": " ?1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Dest",
												"value": " document",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": " gzip, deflate, br",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Language",
												"value": " ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": " _gid=GA1.2.840618837.1611337377; _hjTLDTest=1; _hjid=8d983bd7-eca9-4fea-af47-1ed7d0fad41b; ajs_group_id=null; ajs_anonymous_id=%225a1ec840-5f13-481d-a854-e650dc93f008%22; io=w6KnxNj69BQwpA66AAWX; _ga=GA1.1.1369376699.1611131368; _ga_VLL86CMPFN=GS1.1.1611399836.14.1.1611399849.47; laravel_session=jqfREURLwCPfkcCsgOrb4UEH2JMFMMgluL4RiFFR",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": "{{cookies-token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name=Chuck+Norris&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "Chuck+Norris"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/admin/requestCancel/139270 - request Cancel",
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Host",
												"value": " sandbox.driveroo.com",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Connection",
												"value": " keep-alive",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Pragma",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cache-Control",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Upgrade-Insecure-Requests",
												"value": " 1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "User-Agent",
												"value": " Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": " text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Site",
												"value": " none",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Mode",
												"value": " navigate",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-User",
												"value": " ?1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Dest",
												"value": " document",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": " gzip, deflate, br",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Language",
												"value": " ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": " _gid=GA1.2.840618837.1611337377; _hjTLDTest=1; _hjid=8d983bd7-eca9-4fea-af47-1ed7d0fad41b; ajs_group_id=null; ajs_anonymous_id=%225a1ec840-5f13-481d-a854-e650dc93f008%22; io=w6KnxNj69BQwpA66AAWX; _ga=GA1.1.1369376699.1611131368; _ga_VLL86CMPFN=GS1.1.1611399836.14.1.1611399849.47; laravel_session=jqfREURLwCPfkcCsgOrb4UEH2JMFMMgluL4RiFFR",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": "{{cookies-token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{4443}}/api/admin/requestCancel/{{}requestCancel}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requestCancel",
												"{{}requestCancel}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive Car Stats",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/stats",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"stats"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id\",responseJson.data[0].car_type.id)",
													"console.log(\"car_type_id#1 = \"+(pm.collectionVariables.get(\"car_type_id\")))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=van&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "van"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id#2\",responseJson.data[0].car_type.id)",
													"console.log(\"car_type_id#2 = \"+(pm.collectionVariables.get(\"car_type_id#2\")))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=Cargo+Van&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "Cargo+Van"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id#3\",responseJson.data[0].car_type.id)",
													"// pm.collectionVariables.set(\"user_id\",responseJson.data[0].holder.id)",
													"console.log(\"car_type_id#3s = \"+(pm.collectionVariables.get(\"car_type_id#3\")))",
													"// console.log(pm.collectionVariables.get(\"user_id\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=Passenger&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "Passenger"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/users?name=? - Recive ID Freddie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"user_id\",responseJson.data[0].id)",
													"console.log(\"user_id#1 = \"+pm.collectionVariables.get(\"user_id\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Freddie&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Freddie"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/users?name=? - Recive ID Chuck",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"// pm.collectionVariables.set(\"group_id\",responseJson.data[0].groups[0].id)",
													"pm.collectionVariables.set(\"user_id#2\",responseJson.data[0].id)",
													"// console.log(pm.collectionVariables.get(\"group_id\"))",
													"console.log(\"user_id#2 = \"+pm.collectionVariables.get(\"user_id#2\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Chuck&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Chuck"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Eddie & ID Team",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"group_id\",responseJson.data[0].groups[0].group_id)",
													"pm.collectionVariables.set(\"user_id_without-perm\",responseJson.data[0].id)",
													"console.log(\"group_id = \"+pm.collectionVariables.get(\"group_id\"))",
													"console.log(\"user_id_without-perm = \"+pm.collectionVariables.get(\"user_id_without-perm\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Halen&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Halen"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Select Car #3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"if (responseJson.data[0]){",
													"    pm.collectionVariables.set(\"car_id_resolve\", responseJson.data[0].id);",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car={{VIN}}&sort=&order=asc&page=1&group_id=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car",
													"value": "{{VIN}}"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/cars/16489/remove -Delete car",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// let responseJson = pm.response.json();",
													"",
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"// pm.test(\"Check responce\", function () {",
													"//     pm.expect(responseJson.success).to.be.equal(true);",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/cars/{{car_id_resolve}}/remove",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"cars",
												"{{car_id_resolve}}",
												"remove"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars - Create car",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"car_id_resolve\", responseJson.data.id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a(\"number\");",
													"    pm.expect(responseJson.data.car_model_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mileage\": \"20001\",\n  \"hours\": \"\",\n  \"purchase_at\": \"2020-01-01\",\n  \"nickname\": \"Car #3\",\n  \"license_plate\": \"SV27148\",\n  \"car_type_id\": 45,\n  \"car_status_id\": 1,\n  \"vin\": \"{{VIN}}\",\n  \"chassis\": \"\",\n  \"engine\": \"\",\n  \"sn\": \"\",\n  \"year\": 0,\n  \"make\": \"\",\n  \"model\": \"\",\n  \"trim\": \"R 6.8 AT (457 Hp) (SUV)\",\n  \"notes\": \"string\",\n  \"extra_notes\": \"string\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars"
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    auth: {",
													"\t\ttype: \"bearer\",",
													"\t\tbearer: [",
													"\t\t\t{",
													"\t\t\t\tkey: \"token\",",
													"\t\t\t\tvalue: \"Bearer \" + String(pm.collectionVariables.get(\"API_keys_Admin_Sergii\")),",
													"                // value: `Bearer ${pm.collectionVariables.get(\"API_keys_Admin_Sergii\")}`,",
													"\t\t\t\ttype: \"string\"",
													"\t\t\t}",
													"\t\t]",
													"\t},",
													"    header: {",
													"        // 'Authorization': `${pm.collectionVariables.get(\"API_keys_Admin_Sergii\")}`,",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    auth: {",
													"\t\ttype: \"bearer\",",
													"\t\tbearer: [",
													"\t\t\t{",
													"\t\t\t\tkey: \"token\",",
													"\t\t\t\tvalue: \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"\t\t\t\ttype: \"string\"",
													"\t\t\t}",
													"\t\t]",
													"\t},",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (provider)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name=&company_name=&provider_name={{provider_sand}}&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": ""
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": "{{provider_sand}}"
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (provider)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name=&company_name=&provider_name={{provider_sand}}&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": ""
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": "{{provider_sand}}"
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"//  console.log(responseJson.request_id);",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "151",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "02000.2",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "020002",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43264",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.74515",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GFH8IV5c][value]",
													"value": "Not Damaged or Defective",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qZVO1L4f][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ZQwbcA4F][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[nR9vgteo][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5WtfNkTm][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0H5yxSAZ][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[vWIhsunm][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[fxPL2Ivg][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[a9q9eWsv][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vTxNzEdU][value]",
													"value": "232828",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" console.log( pm.collectionVariables.get(\"issues_question\"))",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"// console.log(pm.globals.get(\"todeyDate\"));",
													"",
													"/*",
													"// ============== Conver DATE =========",
													"",
													"function formatDate(inputDate,char) {",
													"   var date = new Date(inputDate);",
													"    if (!isNaN(date.getTime())) {",
													"        // Months use 0 index.",
													"        return date.getMonth() + 1 + char + date.getDate() + char + date.getFullYear();",
													"    }",
													"}",
													"",
													"",
													"",
													"let date =new Date(\"Mon Dec 13 2021 03:00:00 GMT+0300 (Восточная Европа, летнее время)\")",
													"",
													"console.log(\"1 = \"+date)",
													"console.log(\"2 = \"+date.toLocaleDateString())",
													"console.log(\"3 = \"+date.toLocaleDateString('en-ZA'))",
													"console.log(\"4 = \"+date.toLocaleDateString('en-CA'))",
													"console.log(\"5 = \"+date.toLocaleDateString(\"en-US\"));",
													"console.log(\"6 = \"+date.toLocaleDateString('en-US', {year: 'numeric', month: '2-digit', day: '2-digit'}));",
													"",
													"console.log(\"=======\")",
													"console.log(\"1.1 = \"+formatDate(date,\".\"));",
													"console.log(\"1.2 = \"+formatDate(date.toLocaleDateString(),\".\"));",
													"console.log(\"1.3 = \"+formatDate(date.toLocaleDateString('en-ZA'),\"/\"));",
													"console.log(\"1.4 = \"+formatDate(date.toLocaleDateString('en-CA'),\"-\"));",
													"console.log(\"1.5 = \"+formatDate(date.toLocaleDateString(\"en-US\"),\"/\"));",
													"console.log(\"1.6 = \"+formatDate(date.toLocaleDateString('en-US', {year: 'numeric', month: '2-digit', day: '2-digit'}),\"/\"));",
													"",
													"// ============== Conver DATE =========",
													"*/",
													"",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=days&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{API_keys_Admin_Sergii}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"//  console.log(responseJson.request_id);",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "153",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "02000.2",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "020002",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43272",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.7449",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[l4RnHUPQ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[ss7Ux58o][value]",
													"value": "232830",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[sBtsLQvJ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[4r8DSbp3][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[PxOvds8k][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[UGPQ7ZsN][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{car_id_resolve}/issues? - filtem by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"let j =0;",
													"for (let i=0; i<responseJson.length; i++){",
													"    if (responseJson[i].status!=0){",
													"        j++;",
													"    }",
													"}",
													"",
													"pm.test(\"Check dublikation of issues\", function () {",
													"    pm.expect(pm.collectionVariables.get(\"issues_question\")).to.be.equal(responseJson[0].label.slice(0));",
													"    // pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"});",
													" ",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.length-j).to.be.equal(1);",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&issue={{issues_question}}&sort=service_type&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "issue",
													"value": "{{issues_question}}"
												},
												{
													"key": "sort",
													"value": "service_type"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=days&order=asc&page=1&status=0",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": "0"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow\n- Login to Admin panel\n- Turn off Maintenance\n- Login\n- Create car by VIN\n- Select inspections  Pre- inspection\n- Start inspections  Pre- inspection\n- Finish inspection  Pre- inspection\n- Recive list of inspections\n- Select inspections  Post- inspection\n- Start inspections  Post- inspection\n- Finish inspection  Post- inspection\n- Recive list of inspections and check duplicate\n- Recive list of inspections and save ID of 10 issues\n\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "2 ХхХХХХХХХХХХХхххХХХХХХххХХХ",
							"item": [
								{
									"name": "/userApi/fleets/login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// function randomInteger(min, max) {",
													"//   // получить случайное число от (min-0.5) до (max+0.5)",
													"//   let rand = min - 0.5 + Math.random() * (max - min + 1);",
													"//   return Math.round(rand);",
													"// }",
													"// console.log(Number(pm.collectionVariables.get(\"mileage\"))+randomInteger(100,150))",
													"// // pm.collectionVariables.set(\"mileage\",pm.collectionVariables.get(\"mileage\")+randomInteger(100,150))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.car.id).to.be.a(\"number\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "151",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43264",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.74515",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GFH8IV5c][value]",
													"value": "Not Damaged or Defective",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qZVO1L4f][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ZQwbcA4F][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[nR9vgteo][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5WtfNkTm][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0H5yxSAZ][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[vWIhsunm][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[fxPL2Ivg][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[a9q9eWsv][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vTxNzEdU][value]",
													"value": "232828",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=days&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"//  console.log(responseJson.request_id);",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.car.id).to.be.a(\"number\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "153",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function randomInteger(min, max) {",
													"  // получить случайное число от (min-0.5) до (max+0.5)",
													"  let rand = min - 0.5 + Math.random() * (max - min + 1);",
													"  return Math.round(rand);",
													"}",
													"",
													"// console.log(Number(pm.collectionVariables.get(\"mileage\"))+randomInteger(100,150));",
													" pm.collectionVariables.set(\"mileage\",Number(pm.collectionVariables.get(\"mileage\"))+randomInteger(100,150));",
													"",
													" function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43272",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.7449",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[l4RnHUPQ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[ss7Ux58o][value]",
													"value": "232830",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[sBtsLQvJ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[4r8DSbp3][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[PxOvds8k][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[UGPQ7ZsN][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{car_id_resolve}/issues? - filtem by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"let j =0;",
													"for (let i=0; i<responseJson.length; i++){",
													"    if (responseJson[i].status!=0){",
													"        j++;",
													"    }",
													"}",
													"",
													"pm.test(\"Check dublikation of issues\", function () {",
													"    pm.expect(pm.collectionVariables.get(\"issues_question\")).to.be.equal(responseJson[0].label.slice(0));",
													"    // pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"});",
													" ",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.length-j).to.be.equal(1);",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&issue={{issues_question}}&sort=service_type&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "issue",
													"value": "{{issues_question}}"
												},
												{
													"key": "sort",
													"value": "service_type"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=days&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow\n- Login to Admin panel\n- Turn off Maintenance\n- Login\n- Create car by VIN\n- Select inspections  Pre- inspection\n- Start inspections  Pre- inspection\n- Finish inspection  Pre- inspection\n- Recive list of inspections\n- Select inspections  Post- inspection\n- Start inspections  Post- inspection\n- Finish inspection  Post- inspection\n- Recive list of inspections and check duplicate\n- Recive list of inspections and save ID of 10 issues\n\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "3 Assing-mail-resolve / Resolve without assign",
							"item": [
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/assign - Assing WO 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.work_order.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[1]}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[1]}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{work_order_uuid}}/resolve - WO 1 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.work_order.resolve.amount).to.be.equal(5.45);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "200002",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.45",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/resolve - Resolve without assing 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.resolve.amount).to.be.equal(\"$9.45\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "200002",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "9.45",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[0]}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[0]}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO with Assing\n- Resolve WO\n- Resolwe WO without Assing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "4 Assing-Reject-Assing-Resolve",
							"item": [
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/assign - Assing WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.work_order.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_id\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[2]}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[2]}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/issues/{{issues_id}}/reject  - Reject WO 2",
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[2]}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[2]}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/assign - Assing WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.work_order.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[2]}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[2]}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{work_order_uuid}}/resolve - WO 2 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "200002",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO with Assing\n- Reject WO\n- Assing WO\n- Resolwe WO ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "5 Assing-Reject-Resolve",
							"item": [
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/assign - Assing WO 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.work_order.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[3]}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[3]}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/issues/{{issues_id[}}/reject  - Reject WO 3",
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[3]}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[3]}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/resolve - Resolve without assing 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.reporter.name).to.be.equal(\"Chuck Norris\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "200002",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[3]}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[3]}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO with Assing\n- Reject WO\n- Resolwe WO without Assing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "6 Assing-User2-Reject-Resolve",
							"item": [
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/assign - Assing WO 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.work_order.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[4]}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[4]}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/issues/{{issues_id}}/reject  - Reject WO 4",
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[4]}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[4]}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/resolve - Resolve without assing 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.reporter.name).to.be.equal(\"Chuck Norris\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "200002",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[4]}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[4]}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO with Assing\n- Login by another user\n- Reject WO by another user\n- Resolwe WO without Assing by another user\n- Login by default user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "7 Assing-User2-Reject-Assing-Resolve",
							"item": [
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/assign - Assing WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.work_order.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[5]}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[5]}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/issues/{{issues_id}}/reject  - Reject WO 5",
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[5]}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[5]}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/assign - Assing WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.work_order.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[5]}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[5]}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/company/profile - Check Maitenance OFF",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseJson = pm.response.json();",
													"",
													"",
													"pm.test(\"Check Maitenance OFF\", function () {",
													"    console.log(\"Check Maitenance OFF\")",
													"    console.log(\"company-maintenance = \"+responseJson.data.permissions['company-maintenance']) ",
													"    pm.expect(responseJson.data.permissions['company-maintenance']).to.be.eql(false);",
													"});",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false,
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/company/profile",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"company",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{work_order_uuid}}/resolve - WO 5 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.work_order.resolve.amount).to.be.equal(7.45);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "200002",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "7.45",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO with Assing\n- Login by another user\n- Reject WO by another user\n- Assing WO by another user\n- Resolwe WO \n- Login by default user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "8 Open issue-User2-Open issue-Assing-Resolve",
							"item": [
								{
									"name": "/userApi/fleets/issues/{{issues_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[6]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[6]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[6]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[6]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/assign - Assing WO 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.work_order.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[6]}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[6]}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{work_order_uuid}}/resolve - WO 6 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "200002",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Open aditional info about issues\n- Login by another user\n- Open aditional info about issues\n- Assing WO by another user\n- Resolwe WO \n- Login by default user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "9 Open issue-User2-Open issue-Resolve",
							"item": [
								{
									"name": "/userApi/fleets/issues/{{issues_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[7]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[7]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[7]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[7]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/issues/{{issues_id}}/resolve - Resolve without assing 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.issue_id).to.be.a('number');",
													"    pm.expect(responseJson.data.label).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.reporter.name).to.be.equal(\"Chuck Norris\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "200002",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[7]}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[7]}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Open aditional info about issues\n- Login by another user\n- Open aditional info about issues\n- Resolwe WO \n- Login by default user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "10 /userApi/cars/16489/remove -Delete car",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check responce\", function () {",
											"    pm.expect(responseJson.success).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_id}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/userApi/cars/{{car_id_resolve}}/remove",
									"host": [
										"{{4443}}"
									],
									"path": [
										"userApi",
										"cars",
										"{{car_id_resolve}}",
										"remove"
									]
								}
							},
							"response": []
						}
					],
					"description": "Create work-order or resolve issues base on Pre - Past Inspections\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "2 Sand: Pre - Past Inspections from Findings (Maintenance)",
					"item": [
						{
							"name": "1 Creaate car & Pre- Post inspection & Check duplication",
							"item": [
								{
									"name": "Login Admin ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// console.log( pm.cookies.get(\"laravel_session\"));",
													"//let cookies = \"laravel_session=\"+ pm.cookies.get(\"laravel_session\");",
													"",
													"//console.log(cookies);",
													"",
													"pm.collectionVariables.set(\"cookies-token\", \"laravel_session=\"+ pm.cookies.get(\"laravel_session\"));",
													"",
													"// console.log(pm.globals.get(\"cookies-token\") +\" | \"+pm.collectionVariables.get(\"cookies-token\")+\" | \"+pm.environment.get(\"cookies-token\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "_token",
													"value": "XrMI2Z8n96OD7Az80vTRrPBrwFumiJUvBa7IQ2C0",
													"type": "text"
												},
												{
													"key": "email",
													"value": "sergeyk@driveroo.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "123456",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/admin/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"admin",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check Maintenance",
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": " sandbox.driveroo.com",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Connection",
												"value": " keep-alive",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Pragma",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cache-Control",
												"value": " no-cache",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Upgrade-Insecure-Requests",
												"value": " 1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "User-Agent",
												"value": " Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": " text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Site",
												"value": " none",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Mode",
												"value": " navigate",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-User",
												"value": " ?1",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Sec-Fetch-Dest",
												"value": " document",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": " gzip, deflate, br",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Language",
												"value": " ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": "laravel_session=oJ6aqQZEVe8P3CloocZBVH4evwEp1bg6KxxYE1S2",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": "{{cookies-token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "id",
													"value": "64",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Driveroo_Test_Auto_Env",
													"type": "text"
												},
												{
													"key": "system_name",
													"value": "Driveroo_Test_Auto_Env",
													"type": "text"
												},
												{
													"key": "address",
													"value": "Gagarina, 25",
													"type": "text"
												},
												{
													"key": "terminal_address",
													"value": "Gagarina, 25",
													"type": "text"
												},
												{
													"key": "ttl",
													"value": "",
													"type": "text"
												},
												{
													"key": "timezone",
													"value": "America/Los_Angeles",
													"type": "text"
												},
												{
													"key": "currency",
													"value": "USD",
													"type": "text"
												},
												{
													"key": "measurement",
													"value": "USCS",
													"type": "text"
												},
												{
													"key": "notification_channels[0]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "notification_channels[1]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "behaviors[0][name]",
													"value": "assigned_vehicles",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][region]",
													"value": "US",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][vin]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][ymm]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][chassis]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][engine]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[1][name]",
													"value": "assigned_heavy",
													"type": "text"
												},
												{
													"key": "behaviors[1][data][sn]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "behaviors[2][name]",
													"value": "",
													"type": "text"
												},
												{
													"key": "permissions[company-vehicles-recall]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-vehicles-visibility]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-daily-log]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-assign]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-dashboard-create-issues]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-fuel]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-remind]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-tasks]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-daily-inspection]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-damage]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-inspection-location]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-location-fence]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-inspection-complete]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[alert-car-status-change]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-accident]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-incident]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-maintenance]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-inspection]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-service-frequency]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-warehouse]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-metabase-reports]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "dashboard_service_id",
													"value": "107",
													"type": "text"
												},
												{
													"key": "user_tracking",
													"value": "0",
													"type": "text"
												},
												{
													"key": "gps_interval",
													"value": "10",
													"type": "text"
												},
												{
													"key": "gps_stop_time",
													"value": "",
													"type": "text"
												},
												{
													"key": "diesel_price",
													"value": "2",
													"type": "text"
												},
												{
													"key": "gasoline_price",
													"value": "5",
													"type": "text"
												},
												{
													"key": "fuel_service_id",
													"value": "102",
													"type": "text"
												},
												{
													"key": "maintenance_service_id",
													"value": "126",
													"type": "text"
												},
												{
													"key": "mileage_increase_limit",
													"value": "250",
													"type": "text"
												},
												{
													"key": "hours_increase_limit",
													"value": "5.5",
													"type": "text"
												},
												{
													"key": "metabase_reports[__0][name]",
													"value": "first",
													"type": "text"
												},
												{
													"key": "metabase_reports[__0][link]",
													"value": "https://metabase.driveroo.com/public/question/93d29118-f432-400a-9834-2df992fbe378",
													"type": "text"
												},
												{
													"key": "metabase_reports[__1][name]",
													"value": "second",
													"type": "text"
												},
												{
													"key": "metabase_reports[__1][link]",
													"value": "https://metabase.driveroo.com/public/question/93d29118-f432-400a-9834-2df992fbe378",
													"type": "text"
												},
												{
													"key": "cdb_id",
													"value": "CDB-20",
													"type": "text"
												},
												{
													"key": "stripe_customer_id",
													"value": "123456",
													"type": "text"
												},
												{
													"key": "stripe_sub_item_id",
													"value": "1234578",
													"type": "text"
												},
												{
													"key": "service[1][service_type_id]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[1][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[2][service_type_id]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "service[2][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[3][service_type_id]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "service[3][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[4][service_type_id]",
													"value": "4",
													"type": "text"
												},
												{
													"key": "service[4][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[5][service_type_id]",
													"value": "5",
													"type": "text"
												},
												{
													"key": "service[5][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[6][service_type_id]",
													"value": "6",
													"type": "text"
												},
												{
													"key": "service[6][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[9][service_type_id]",
													"value": "9",
													"type": "text"
												},
												{
													"key": "service[9][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[10][service_type_id]",
													"value": "10",
													"type": "text"
												},
												{
													"key": "service[10][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[11][service_type_id]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "service[11][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[12][service_type_id]",
													"value": "12",
													"type": "text"
												},
												{
													"key": "service[12][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[14][service_type_id]",
													"value": "14",
													"type": "text"
												},
												{
													"key": "service[14][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[15][service_type_id]",
													"value": "15",
													"type": "text"
												},
												{
													"key": "service[15][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[16][service_type_id]",
													"value": "16",
													"type": "text"
												},
												{
													"key": "service[16][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[17][service_type_id]",
													"value": "17",
													"type": "text"
												},
												{
													"key": "service[17][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[18][service_type_id]",
													"value": "18",
													"type": "text"
												},
												{
													"key": "service[18][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[19][service_type_id]",
													"value": "19",
													"type": "text"
												},
												{
													"key": "service[19][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[20][service_type_id]",
													"value": "20",
													"type": "text"
												},
												{
													"key": "service[20][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[22][service_type_id]",
													"value": "22",
													"type": "text"
												},
												{
													"key": "service[22][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[23][service_type_id]",
													"value": "23",
													"type": "text"
												},
												{
													"key": "service[23][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[24][service_type_id]",
													"value": "24",
													"type": "text"
												},
												{
													"key": "service[24][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[25][service_type_id]",
													"value": "25",
													"type": "text"
												},
												{
													"key": "service[25][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[26][service_type_id]",
													"value": "26",
													"type": "text"
												},
												{
													"key": "service[26][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[27][service_type_id]",
													"value": "27",
													"type": "text"
												},
												{
													"key": "service[27][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[28][service_type_id]",
													"value": "28",
													"type": "text"
												},
												{
													"key": "service[28][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[29][service_type_id]",
													"value": "29",
													"type": "text"
												},
												{
													"key": "service[29][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[30][service_type_id]",
													"value": "30",
													"type": "text"
												},
												{
													"key": "service[30][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[31][service_type_id]",
													"value": "31",
													"type": "text"
												},
												{
													"key": "service[31][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[32][service_type_id]",
													"value": "32",
													"type": "text"
												},
												{
													"key": "service[32][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[33][service_type_id]",
													"value": "33",
													"type": "text"
												},
												{
													"key": "service[33][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[34][service_type_id]",
													"value": "34",
													"type": "text"
												},
												{
													"key": "service[34][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[35][service_type_id]",
													"value": "35",
													"type": "text"
												},
												{
													"key": "service[35][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[36][service_type_id]",
													"value": "36",
													"type": "text"
												},
												{
													"key": "service[36][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[37][service_type_id]",
													"value": "37",
													"type": "text"
												},
												{
													"key": "service[37][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[38][service_type_id]",
													"value": "38",
													"type": "text"
												},
												{
													"key": "service[38][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[39][service_type_id]",
													"value": "39",
													"type": "text"
												},
												{
													"key": "service[39][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[40][service_type_id]",
													"value": "40",
													"type": "text"
												},
												{
													"key": "service[40][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[41][service_type_id]",
													"value": "41",
													"type": "text"
												},
												{
													"key": "service[41][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[42][service_type_id]",
													"value": "42",
													"type": "text"
												},
												{
													"key": "service[42][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[43][service_type_id]",
													"value": "43",
													"type": "text"
												},
												{
													"key": "service[43][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[44][service_type_id]",
													"value": "44",
													"type": "text"
												},
												{
													"key": "service[44][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[45][service_type_id]",
													"value": "45",
													"type": "text"
												},
												{
													"key": "service[45][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[46][service_type_id]",
													"value": "46",
													"type": "text"
												},
												{
													"key": "service[46][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[47][service_type_id]",
													"value": "47",
													"type": "text"
												},
												{
													"key": "service[47][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[48][service_type_id]",
													"value": "48",
													"type": "text"
												},
												{
													"key": "service[48][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[49][service_type_id]",
													"value": "49",
													"type": "text"
												},
												{
													"key": "service[49][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[50][service_type_id]",
													"value": "50",
													"type": "text"
												},
												{
													"key": "service[50][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[51][service_type_id]",
													"value": "51",
													"type": "text"
												},
												{
													"key": "service[51][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[52][service_type_id]",
													"value": "52",
													"type": "text"
												},
												{
													"key": "service[52][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[53][service_type_id]",
													"value": "53",
													"type": "text"
												},
												{
													"key": "service[53][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[54][service_type_id]",
													"value": "54",
													"type": "text"
												},
												{
													"key": "service[54][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[55][service_type_id]",
													"value": "55",
													"type": "text"
												},
												{
													"key": "service[55][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[56][service_type_id]",
													"value": "56",
													"type": "text"
												},
												{
													"key": "service[56][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[57][service_type_id]",
													"value": "57",
													"type": "text"
												},
												{
													"key": "service[57][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[58][service_type_id]",
													"value": "58",
													"type": "text"
												},
												{
													"key": "service[58][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[59][service_type_id]",
													"value": "59",
													"type": "text"
												},
												{
													"key": "service[59][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[60][service_type_id]",
													"value": "60",
													"type": "text"
												},
												{
													"key": "service[60][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[61][service_type_id]",
													"value": "61",
													"type": "text"
												},
												{
													"key": "service[61][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[62][service_type_id]",
													"value": "62",
													"type": "text"
												},
												{
													"key": "service[62][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[63][service_type_id]",
													"value": "63",
													"type": "text"
												},
												{
													"key": "service[63][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[64][service_type_id]",
													"value": "64",
													"type": "text"
												},
												{
													"key": "service[64][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[65][service_type_id]",
													"value": "65",
													"type": "text"
												},
												{
													"key": "service[65][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[66][service_type_id]",
													"value": "66",
													"type": "text"
												},
												{
													"key": "service[66][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[67][service_type_id]",
													"value": "67",
													"type": "text"
												},
												{
													"key": "service[67][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[68][service_type_id]",
													"value": "68",
													"type": "text"
												},
												{
													"key": "service[68][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[69][service_type_id]",
													"value": "69",
													"type": "text"
												},
												{
													"key": "service[69][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[70][service_type_id]",
													"value": "70",
													"type": "text"
												},
												{
													"key": "service[70][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[71][service_type_id]",
													"value": "71",
													"type": "text"
												},
												{
													"key": "service[71][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[72][service_type_id]",
													"value": "72",
													"type": "text"
												},
												{
													"key": "service[72][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[73][service_type_id]",
													"value": "73",
													"type": "text"
												},
												{
													"key": "service[73][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[74][service_type_id]",
													"value": "74",
													"type": "text"
												},
												{
													"key": "service[74][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[75][service_type_id]",
													"value": "75",
													"type": "text"
												},
												{
													"key": "service[75][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[76][service_type_id]",
													"value": "76",
													"type": "text"
												},
												{
													"key": "service[76][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[77][service_type_id]",
													"value": "77",
													"type": "text"
												},
												{
													"key": "service[77][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[78][service_type_id]",
													"value": "78",
													"type": "text"
												},
												{
													"key": "service[78][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[79][service_type_id]",
													"value": "79",
													"type": "text"
												},
												{
													"key": "service[79][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[80][service_type_id]",
													"value": "80",
													"type": "text"
												},
												{
													"key": "service[80][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[81][service_type_id]",
													"value": "81",
													"type": "text"
												},
												{
													"key": "service[81][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[82][service_type_id]",
													"value": "82",
													"type": "text"
												},
												{
													"key": "service[82][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[83][service_type_id]",
													"value": "83",
													"type": "text"
												},
												{
													"key": "service[83][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[84][service_type_id]",
													"value": "84",
													"type": "text"
												},
												{
													"key": "service[84][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[85][service_type_id]",
													"value": "85",
													"type": "text"
												},
												{
													"key": "service[85][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[86][service_type_id]",
													"value": "86",
													"type": "text"
												},
												{
													"key": "service[86][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[87][service_type_id]",
													"value": "87",
													"type": "text"
												},
												{
													"key": "service[87][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[88][service_type_id]",
													"value": "88",
													"type": "text"
												},
												{
													"key": "service[88][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[89][service_type_id]",
													"value": "89",
													"type": "text"
												},
												{
													"key": "service[89][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[90][service_type_id]",
													"value": "90",
													"type": "text"
												},
												{
													"key": "service[90][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[91][service_type_id]",
													"value": "91",
													"type": "text"
												},
												{
													"key": "service[91][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[92][service_type_id]",
													"value": "92",
													"type": "text"
												},
												{
													"key": "service[92][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[93][service_type_id]",
													"value": "93",
													"type": "text"
												},
												{
													"key": "service[93][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[94][service_type_id]",
													"value": "94",
													"type": "text"
												},
												{
													"key": "service[94][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[95][service_type_id]",
													"value": "95",
													"type": "text"
												},
												{
													"key": "service[95][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[96][service_type_id]",
													"value": "96",
													"type": "text"
												},
												{
													"key": "service[96][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[98][service_type_id]",
													"value": "98",
													"type": "text"
												},
												{
													"key": "service[98][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[99][service_type_id]",
													"value": "99",
													"type": "text"
												},
												{
													"key": "service[99][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[100][service_type_id]",
													"value": "100",
													"type": "text"
												},
												{
													"key": "service[100][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[101][service_type_id]",
													"value": "101",
													"type": "text"
												},
												{
													"key": "service[101][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[102][service_type_id]",
													"value": "102",
													"type": "text"
												},
												{
													"key": "service[102][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[103][service_type_id]",
													"value": "103",
													"type": "text"
												},
												{
													"key": "service[103][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[105][service_type_id]",
													"value": "105",
													"type": "text"
												},
												{
													"key": "service[105][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[106][service_type_id]",
													"value": "106",
													"type": "text"
												},
												{
													"key": "service[106][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[107][service_type_id]",
													"value": "107",
													"type": "text"
												},
												{
													"key": "service[107][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[108][service_type_id]",
													"value": "108",
													"type": "text"
												},
												{
													"key": "service[108][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[109][service_type_id]",
													"value": "109",
													"type": "text"
												},
												{
													"key": "service[109][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[110][service_type_id]",
													"value": "110",
													"type": "text"
												},
												{
													"key": "service[110][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[111][service_type_id]",
													"value": "111",
													"type": "text"
												},
												{
													"key": "service[111][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[112][service_type_id]",
													"value": "112",
													"type": "text"
												},
												{
													"key": "service[112][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[113][service_type_id]",
													"value": "113",
													"type": "text"
												},
												{
													"key": "service[113][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[115][service_type_id]",
													"value": "115",
													"type": "text"
												},
												{
													"key": "service[115][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[116][service_type_id]",
													"value": "116",
													"type": "text"
												},
												{
													"key": "service[116][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[117][service_type_id]",
													"value": "117",
													"type": "text"
												},
												{
													"key": "service[117][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[118][service_type_id]",
													"value": "118",
													"type": "text"
												},
												{
													"key": "service[118][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[119][service_type_id]",
													"value": "119",
													"type": "text"
												},
												{
													"key": "service[119][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[120][service_type_id]",
													"value": "120",
													"type": "text"
												},
												{
													"key": "service[120][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[121][service_type_id]",
													"value": "121",
													"type": "text"
												},
												{
													"key": "service[121][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[122][service_type_id]",
													"value": "122",
													"type": "text"
												},
												{
													"key": "service[122][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[124][service_type_id]",
													"value": "124",
													"type": "text"
												},
												{
													"key": "service[124][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[125][service_type_id]",
													"value": "125",
													"type": "text"
												},
												{
													"key": "service[125][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[126][service_type_id]",
													"value": "126",
													"type": "text"
												},
												{
													"key": "service[126][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[128][service_type_id]",
													"value": "128",
													"type": "text"
												},
												{
													"key": "service[128][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[129][service_type_id]",
													"value": "129",
													"type": "text"
												},
												{
													"key": "service[129][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[130][service_type_id]",
													"value": "130",
													"type": "text"
												},
												{
													"key": "service[130][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[131][service_type_id]",
													"value": "131",
													"type": "text"
												},
												{
													"key": "service[131][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[132][service_type_id]",
													"value": "132",
													"type": "text"
												},
												{
													"key": "service[132][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[133][service_type_id]",
													"value": "133",
													"type": "text"
												},
												{
													"key": "service[133][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[134][service_type_id]",
													"value": "134",
													"type": "text"
												},
												{
													"key": "service[134][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[135][service_type_id]",
													"value": "135",
													"type": "text"
												},
												{
													"key": "service[135][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[136][service_type_id]",
													"value": "136",
													"type": "text"
												},
												{
													"key": "service[136][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[137][service_type_id]",
													"value": "137",
													"type": "text"
												},
												{
													"key": "service[137][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[138][service_type_id]",
													"value": "138",
													"type": "text"
												},
												{
													"key": "service[138][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[139][service_type_id]",
													"value": "139",
													"type": "text"
												},
												{
													"key": "service[139][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[140][service_type_id]",
													"value": "140",
													"type": "text"
												},
												{
													"key": "service[140][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[141][service_type_id]",
													"value": "141",
													"type": "text"
												},
												{
													"key": "service[141][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[142][service_type_id]",
													"value": "142",
													"type": "text"
												},
												{
													"key": "service[142][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[143][service_type_id]",
													"value": "143",
													"type": "text"
												},
												{
													"key": "service[143][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[144][service_type_id]",
													"value": "144",
													"type": "text"
												},
												{
													"key": "service[144][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[145][service_type_id]",
													"value": "145",
													"type": "text"
												},
												{
													"key": "service[145][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[146][service_type_id]",
													"value": "146",
													"type": "text"
												},
												{
													"key": "service[146][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[147][service_type_id]",
													"value": "147",
													"type": "text"
												},
												{
													"key": "service[147][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[148][service_type_id]",
													"value": "148",
													"type": "text"
												},
												{
													"key": "service[148][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[149][service_type_id]",
													"value": "149",
													"type": "text"
												},
												{
													"key": "service[149][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[150][service_type_id]",
													"value": "150",
													"type": "text"
												},
												{
													"key": "service[150][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[151][service_type_id]",
													"value": "151",
													"type": "text"
												},
												{
													"key": "service[151][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[152][service_type_id]",
													"value": "152",
													"type": "text"
												},
												{
													"key": "service[152][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[153][service_type_id]",
													"value": "153",
													"type": "text"
												},
												{
													"key": "service[153][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[154][service_type_id]",
													"value": "154",
													"type": "text"
												},
												{
													"key": "service[154][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[155][service_type_id]",
													"value": "155",
													"type": "text"
												},
												{
													"key": "service[155][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[156][service_type_id]",
													"value": "156",
													"type": "text"
												},
												{
													"key": "service[156][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[157][service_type_id]",
													"value": "157",
													"type": "text"
												},
												{
													"key": "service[157][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[158][service_type_id]",
													"value": "158",
													"type": "text"
												},
												{
													"key": "service[158][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[159][service_type_id]",
													"value": "159",
													"type": "text"
												},
												{
													"key": "service[159][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[160][service_type_id]",
													"value": "160",
													"type": "text"
												},
												{
													"key": "service[160][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[161][service_type_id]",
													"value": "161",
													"type": "text"
												},
												{
													"key": "service[161][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[162][service_type_id]",
													"value": "162",
													"type": "text"
												},
												{
													"key": "service[162][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[163][service_type_id]",
													"value": "163",
													"type": "text"
												},
												{
													"key": "service[163][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[166][service_type_id]",
													"value": "166",
													"type": "text"
												},
												{
													"key": "service[166][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[167][service_type_id]",
													"value": "167",
													"type": "text"
												},
												{
													"key": "service[167][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[168][service_type_id]",
													"value": "168",
													"type": "text"
												},
												{
													"key": "service[168][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[169][service_type_id]",
													"value": "169",
													"type": "text"
												},
												{
													"key": "service[169][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[170][service_type_id]",
													"value": "170",
													"type": "text"
												},
												{
													"key": "service[170][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[171][service_type_id]",
													"value": "171",
													"type": "text"
												},
												{
													"key": "service[171][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[172][service_type_id]",
													"value": "172",
													"type": "text"
												},
												{
													"key": "service[172][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[173][service_type_id]",
													"value": "173",
													"type": "text"
												},
												{
													"key": "service[173][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[174][service_type_id]",
													"value": "174",
													"type": "text"
												},
												{
													"key": "service[174][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[175][service_type_id]",
													"value": "175",
													"type": "text"
												},
												{
													"key": "service[175][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[176][service_type_id]",
													"value": "176",
													"type": "text"
												},
												{
													"key": "service[176][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[177][service_type_id]",
													"value": "177",
													"type": "text"
												},
												{
													"key": "service[177][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[178][service_type_id]",
													"value": "178",
													"type": "text"
												},
												{
													"key": "service[178][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[179][service_type_id]",
													"value": "179",
													"type": "text"
												},
												{
													"key": "service[179][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[180][service_type_id]",
													"value": "180",
													"type": "text"
												},
												{
													"key": "service[180][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[181][service_type_id]",
													"value": "181",
													"type": "text"
												},
												{
													"key": "service[181][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[182][service_type_id]",
													"value": "182",
													"type": "text"
												},
												{
													"key": "service[182][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[183][service_type_id]",
													"value": "183",
													"type": "text"
												},
												{
													"key": "service[183][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[184][service_type_id]",
													"value": "184",
													"type": "text"
												},
												{
													"key": "service[184][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[185][service_type_id]",
													"value": "185",
													"type": "text"
												},
												{
													"key": "service[185][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[187][service_type_id]",
													"value": "187",
													"type": "text"
												},
												{
													"key": "service[187][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[188][service_type_id]",
													"value": "188",
													"type": "text"
												},
												{
													"key": "service[188][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[189][service_type_id]",
													"value": "189",
													"type": "text"
												},
												{
													"key": "service[189][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[190][service_type_id]",
													"value": "190",
													"type": "text"
												},
												{
													"key": "service[190][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[193][service_type_id]",
													"value": "193",
													"type": "text"
												},
												{
													"key": "service[193][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[194][service_type_id]",
													"value": "194",
													"type": "text"
												},
												{
													"key": "service[194][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[195][service_type_id]",
													"value": "195",
													"type": "text"
												},
												{
													"key": "service[195][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[196][service_type_id]",
													"value": "196",
													"type": "text"
												},
												{
													"key": "service[196][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[197][service_type_id]",
													"value": "197",
													"type": "text"
												},
												{
													"key": "service[197][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[198][service_type_id]",
													"value": "198",
													"type": "text"
												},
												{
													"key": "service[198][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[199][service_type_id]",
													"value": "199",
													"type": "text"
												},
												{
													"key": "service[199][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[200][service_type_id]",
													"value": "200",
													"type": "text"
												},
												{
													"key": "service[200][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[201][service_type_id]",
													"value": "201",
													"type": "text"
												},
												{
													"key": "service[201][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[202][service_type_id]",
													"value": "202",
													"type": "text"
												},
												{
													"key": "service[202][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[203][service_type_id]",
													"value": "203",
													"type": "text"
												},
												{
													"key": "service[203][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[204][service_type_id]",
													"value": "204",
													"type": "text"
												},
												{
													"key": "service[204][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[205][service_type_id]",
													"value": "205",
													"type": "text"
												},
												{
													"key": "service[205][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[206][service_type_id]",
													"value": "206",
													"type": "text"
												},
												{
													"key": "service[206][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[207][service_type_id]",
													"value": "207",
													"type": "text"
												},
												{
													"key": "service[207][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[208][service_type_id]",
													"value": "208",
													"type": "text"
												},
												{
													"key": "service[208][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[209][service_type_id]",
													"value": "209",
													"type": "text"
												},
												{
													"key": "service[209][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[210][service_type_id]",
													"value": "210",
													"type": "text"
												},
												{
													"key": "service[210][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[211][service_type_id]",
													"value": "211",
													"type": "text"
												},
												{
													"key": "service[211][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[212][service_type_id]",
													"value": "212",
													"type": "text"
												},
												{
													"key": "service[212][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[213][service_type_id]",
													"value": "213",
													"type": "text"
												},
												{
													"key": "service[213][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[214][service_type_id]",
													"value": "214",
													"type": "text"
												},
												{
													"key": "service[214][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[215][service_type_id]",
													"value": "215",
													"type": "text"
												},
												{
													"key": "service[215][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[216][service_type_id]",
													"value": "216",
													"type": "text"
												},
												{
													"key": "service[216][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[217][service_type_id]",
													"value": "217",
													"type": "text"
												},
												{
													"key": "service[217][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[218][service_type_id]",
													"value": "218",
													"type": "text"
												},
												{
													"key": "service[218][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[219][service_type_id]",
													"value": "219",
													"type": "text"
												},
												{
													"key": "service[219][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[220][service_type_id]",
													"value": "220",
													"type": "text"
												},
												{
													"key": "service[220][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[221][service_type_id]",
													"value": "221",
													"type": "text"
												},
												{
													"key": "service[221][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[222][service_type_id]",
													"value": "222",
													"type": "text"
												},
												{
													"key": "service[222][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[223][service_type_id]",
													"value": "223",
													"type": "text"
												},
												{
													"key": "service[223][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[224][service_type_id]",
													"value": "224",
													"type": "text"
												},
												{
													"key": "service[224][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[225][service_type_id]",
													"value": "225",
													"type": "text"
												},
												{
													"key": "service[225][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[226][service_type_id]",
													"value": "226",
													"type": "text"
												},
												{
													"key": "service[226][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[227][service_type_id]",
													"value": "227",
													"type": "text"
												},
												{
													"key": "service[227][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[228][service_type_id]",
													"value": "228",
													"type": "text"
												},
												{
													"key": "service[228][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[229][service_type_id]",
													"value": "229",
													"type": "text"
												},
												{
													"key": "service[229][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[230][service_type_id]",
													"value": "230",
													"type": "text"
												},
												{
													"key": "service[230][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[231][service_type_id]",
													"value": "231",
													"type": "text"
												},
												{
													"key": "service[231][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[232][service_type_id]",
													"value": "232",
													"type": "text"
												},
												{
													"key": "service[232][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[233][service_type_id]",
													"value": "233",
													"type": "text"
												},
												{
													"key": "service[233][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[234][service_type_id]",
													"value": "234",
													"type": "text"
												},
												{
													"key": "service[234][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[235][service_type_id]",
													"value": "235",
													"type": "text"
												},
												{
													"key": "service[235][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[236][service_type_id]",
													"value": "236",
													"type": "text"
												},
												{
													"key": "service[236][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[237][service_type_id]",
													"value": "237",
													"type": "text"
												},
												{
													"key": "service[237][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[238][service_type_id]",
													"value": "238",
													"type": "text"
												},
												{
													"key": "service[238][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[239][service_type_id]",
													"value": "239",
													"type": "text"
												},
												{
													"key": "service[239][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[240][service_type_id]",
													"value": "240",
													"type": "text"
												},
												{
													"key": "service[240][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[241][service_type_id]",
													"value": "241",
													"type": "text"
												},
												{
													"key": "service[241][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[242][service_type_id]",
													"value": "242",
													"type": "text"
												},
												{
													"key": "service[242][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[245][service_type_id]",
													"value": "245",
													"type": "text"
												},
												{
													"key": "service[245][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[246][service_type_id]",
													"value": "246",
													"type": "text"
												},
												{
													"key": "service[246][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[247][service_type_id]",
													"value": "247",
													"type": "text"
												},
												{
													"key": "service[247][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[248][service_type_id]",
													"value": "248",
													"type": "text"
												},
												{
													"key": "service[248][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[249][service_type_id]",
													"value": "249",
													"type": "text"
												},
												{
													"key": "service[249][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[250][service_type_id]",
													"value": "250",
													"type": "text"
												},
												{
													"key": "service[250][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[251][service_type_id]",
													"value": "251",
													"type": "text"
												},
												{
													"key": "service[251][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[252][service_type_id]",
													"value": "252",
													"type": "text"
												},
												{
													"key": "service[252][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[253][service_type_id]",
													"value": "253",
													"type": "text"
												},
												{
													"key": "service[253][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[254][service_type_id]",
													"value": "254",
													"type": "text"
												},
												{
													"key": "service[254][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[255][service_type_id]",
													"value": "255",
													"type": "text"
												},
												{
													"key": "service[255][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[256][service_type_id]",
													"value": "256",
													"type": "text"
												},
												{
													"key": "service[256][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[257][service_type_id]",
													"value": "257",
													"type": "text"
												},
												{
													"key": "service[257][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[258][service_type_id]",
													"value": "258",
													"type": "text"
												},
												{
													"key": "service[258][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[259][service_type_id]",
													"value": "259",
													"type": "text"
												},
												{
													"key": "service[259][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[260][service_type_id]",
													"value": "260",
													"type": "text"
												},
												{
													"key": "service[260][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[261][service_type_id]",
													"value": "261",
													"type": "text"
												},
												{
													"key": "service[261][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[262][service_type_id]",
													"value": "262",
													"type": "text"
												},
												{
													"key": "service[262][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[263][service_type_id]",
													"value": "263",
													"type": "text"
												},
												{
													"key": "service[263][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[264][service_type_id]",
													"value": "264",
													"type": "text"
												},
												{
													"key": "service[264][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[265][service_type_id]",
													"value": "265",
													"type": "text"
												},
												{
													"key": "service[265][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[266][service_type_id]",
													"value": "266",
													"type": "text"
												},
												{
													"key": "service[266][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[267][service_type_id]",
													"value": "267",
													"type": "text"
												},
												{
													"key": "service[267][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[268][service_type_id]",
													"value": "268",
													"type": "text"
												},
												{
													"key": "service[268][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[269][service_type_id]",
													"value": "269",
													"type": "text"
												},
												{
													"key": "service[269][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[270][service_type_id]",
													"value": "270",
													"type": "text"
												},
												{
													"key": "service[270][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[271][service_type_id]",
													"value": "271",
													"type": "text"
												},
												{
													"key": "service[271][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[272][service_type_id]",
													"value": "272",
													"type": "text"
												},
												{
													"key": "service[272][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[273][service_type_id]",
													"value": "273",
													"type": "text"
												},
												{
													"key": "service[273][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[274][service_type_id]",
													"value": "274",
													"type": "text"
												},
												{
													"key": "service[274][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[275][service_type_id]",
													"value": "275",
													"type": "text"
												},
												{
													"key": "service[275][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[276][service_type_id]",
													"value": "276",
													"type": "text"
												},
												{
													"key": "service[276][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[277][service_type_id]",
													"value": "277",
													"type": "text"
												},
												{
													"key": "service[277][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[278][service_type_id]",
													"value": "278",
													"type": "text"
												},
												{
													"key": "service[278][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[279][service_type_id]",
													"value": "279",
													"type": "text"
												},
												{
													"key": "service[279][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[280][service_type_id]",
													"value": "280",
													"type": "text"
												},
												{
													"key": "service[280][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[281][service_type_id]",
													"value": "281",
													"type": "text"
												},
												{
													"key": "service[281][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[282][service_type_id]",
													"value": "282",
													"type": "text"
												},
												{
													"key": "service[282][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[284][service_type_id]",
													"value": "284",
													"type": "text"
												},
												{
													"key": "service[284][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[285][service_type_id]",
													"value": "285",
													"type": "text"
												},
												{
													"key": "service[285][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[286][service_type_id]",
													"value": "286",
													"type": "text"
												},
												{
													"key": "service[286][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[287][service_type_id]",
													"value": "287",
													"type": "text"
												},
												{
													"key": "service[287][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[288][service_type_id]",
													"value": "288",
													"type": "text"
												},
												{
													"key": "service[288][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[289][service_type_id]",
													"value": "289",
													"type": "text"
												},
												{
													"key": "service[289][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[290][service_type_id]",
													"value": "290",
													"type": "text"
												},
												{
													"key": "service[290][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[291][service_type_id]",
													"value": "291",
													"type": "text"
												},
												{
													"key": "service[291][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[292][service_type_id]",
													"value": "292",
													"type": "text"
												},
												{
													"key": "service[292][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[293][service_type_id]",
													"value": "293",
													"type": "text"
												},
												{
													"key": "service[293][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[294][service_type_id]",
													"value": "294",
													"type": "text"
												},
												{
													"key": "service[294][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[295][service_type_id]",
													"value": "295",
													"type": "text"
												},
												{
													"key": "service[295][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[296][service_type_id]",
													"value": "296",
													"type": "text"
												},
												{
													"key": "service[296][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[297][service_type_id]",
													"value": "297",
													"type": "text"
												},
												{
													"key": "service[297][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[298][service_type_id]",
													"value": "298",
													"type": "text"
												},
												{
													"key": "service[298][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[299][service_type_id]",
													"value": "299",
													"type": "text"
												},
												{
													"key": "service[299][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[300][service_type_id]",
													"value": "300",
													"type": "text"
												},
												{
													"key": "service[300][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[301][service_type_id]",
													"value": "301",
													"type": "text"
												},
												{
													"key": "service[301][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[303][service_type_id]",
													"value": "303",
													"type": "text"
												},
												{
													"key": "service[303][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[305][service_type_id]",
													"value": "305",
													"type": "text"
												},
												{
													"key": "service[305][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[306][service_type_id]",
													"value": "306",
													"type": "text"
												},
												{
													"key": "service[306][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[307][service_type_id]",
													"value": "307",
													"type": "text"
												},
												{
													"key": "service[307][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[308][service_type_id]",
													"value": "308",
													"type": "text"
												},
												{
													"key": "service[308][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[309][service_type_id]",
													"value": "309",
													"type": "text"
												},
												{
													"key": "service[309][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[310][service_type_id]",
													"value": "310",
													"type": "text"
												},
												{
													"key": "service[310][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[313][service_type_id]",
													"value": "313",
													"type": "text"
												},
												{
													"key": "service[313][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[314][service_type_id]",
													"value": "314",
													"type": "text"
												},
												{
													"key": "service[314][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[315][service_type_id]",
													"value": "315",
													"type": "text"
												},
												{
													"key": "service[315][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[316][service_type_id]",
													"value": "316",
													"type": "text"
												},
												{
													"key": "service[316][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[317][service_type_id]",
													"value": "317",
													"type": "text"
												},
												{
													"key": "service[317][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[318][service_type_id]",
													"value": "318",
													"type": "text"
												},
												{
													"key": "service[318][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[319][service_type_id]",
													"value": "319",
													"type": "text"
												},
												{
													"key": "service[319][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[320][service_type_id]",
													"value": "320",
													"type": "text"
												},
												{
													"key": "service[320][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[321][service_type_id]",
													"value": "321",
													"type": "text"
												},
												{
													"key": "service[321][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[322][service_type_id]",
													"value": "322",
													"type": "text"
												},
												{
													"key": "service[322][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[323][service_type_id]",
													"value": "323",
													"type": "text"
												},
												{
													"key": "service[323][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[324][service_type_id]",
													"value": "324",
													"type": "text"
												},
												{
													"key": "service[324][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[325][service_type_id]",
													"value": "325",
													"type": "text"
												},
												{
													"key": "service[325][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[326][service_type_id]",
													"value": "326",
													"type": "text"
												},
												{
													"key": "service[326][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[327][service_type_id]",
													"value": "327",
													"type": "text"
												},
												{
													"key": "service[327][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[328][service_type_id]",
													"value": "328",
													"type": "text"
												},
												{
													"key": "service[328][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[329][service_type_id]",
													"value": "329",
													"type": "text"
												},
												{
													"key": "service[329][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[330][service_type_id]",
													"value": "330",
													"type": "text"
												},
												{
													"key": "service[330][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[331][service_type_id]",
													"value": "331",
													"type": "text"
												},
												{
													"key": "service[331][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[332][service_type_id]",
													"value": "332",
													"type": "text"
												},
												{
													"key": "service[332][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[333][service_type_id]",
													"value": "333",
													"type": "text"
												},
												{
													"key": "service[333][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[334][service_type_id]",
													"value": "334",
													"type": "text"
												},
												{
													"key": "service[334][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[335][service_type_id]",
													"value": "335",
													"type": "text"
												},
												{
													"key": "service[335][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[336][service_type_id]",
													"value": "336",
													"type": "text"
												},
												{
													"key": "service[336][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[337][service_type_id]",
													"value": "337",
													"type": "text"
												},
												{
													"key": "service[337][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[338][service_type_id]",
													"value": "338",
													"type": "text"
												},
												{
													"key": "service[338][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[341][service_type_id]",
													"value": "341",
													"type": "text"
												},
												{
													"key": "service[341][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[342][service_type_id]",
													"value": "342",
													"type": "text"
												},
												{
													"key": "service[342][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[343][service_type_id]",
													"value": "343",
													"type": "text"
												},
												{
													"key": "service[343][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[344][service_type_id]",
													"value": "344",
													"type": "text"
												},
												{
													"key": "service[344][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[345][service_type_id]",
													"value": "345",
													"type": "text"
												},
												{
													"key": "service[345][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[346][service_type_id]",
													"value": "346",
													"type": "text"
												},
												{
													"key": "service[346][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[347][service_type_id]",
													"value": "347",
													"type": "text"
												},
												{
													"key": "service[347][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[348][service_type_id]",
													"value": "348",
													"type": "text"
												},
												{
													"key": "service[348][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[349][service_type_id]",
													"value": "349",
													"type": "text"
												},
												{
													"key": "service[349][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[350][service_type_id]",
													"value": "350",
													"type": "text"
												},
												{
													"key": "service[350][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[351][service_type_id]",
													"value": "351",
													"type": "text"
												},
												{
													"key": "service[351][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[352][service_type_id]",
													"value": "352",
													"type": "text"
												},
												{
													"key": "service[352][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[353][service_type_id]",
													"value": "353",
													"type": "text"
												},
												{
													"key": "service[353][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[354][service_type_id]",
													"value": "354",
													"type": "text"
												},
												{
													"key": "service[354][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[355][service_type_id]",
													"value": "355",
													"type": "text"
												},
												{
													"key": "service[355][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[356][service_type_id]",
													"value": "356",
													"type": "text"
												},
												{
													"key": "service[356][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[357][service_type_id]",
													"value": "357",
													"type": "text"
												},
												{
													"key": "service[357][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[358][service_type_id]",
													"value": "358",
													"type": "text"
												},
												{
													"key": "service[358][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[359][service_type_id]",
													"value": "359",
													"type": "text"
												},
												{
													"key": "service[359][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[360][service_type_id]",
													"value": "360",
													"type": "text"
												},
												{
													"key": "service[360][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[361][service_type_id]",
													"value": "361",
													"type": "text"
												},
												{
													"key": "service[361][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[362][service_type_id]",
													"value": "362",
													"type": "text"
												},
												{
													"key": "service[362][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[363][service_type_id]",
													"value": "363",
													"type": "text"
												},
												{
													"key": "service[363][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[364][service_type_id]",
													"value": "364",
													"type": "text"
												},
												{
													"key": "service[364][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[365][service_type_id]",
													"value": "365",
													"type": "text"
												},
												{
													"key": "service[365][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[366][service_type_id]",
													"value": "366",
													"type": "text"
												},
												{
													"key": "service[366][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[367][service_type_id]",
													"value": "367",
													"type": "text"
												},
												{
													"key": "service[367][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[368][service_type_id]",
													"value": "368",
													"type": "text"
												},
												{
													"key": "service[368][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[369][service_type_id]",
													"value": "369",
													"type": "text"
												},
												{
													"key": "service[369][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[370][service_type_id]",
													"value": "370",
													"type": "text"
												},
												{
													"key": "service[370][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[371][service_type_id]",
													"value": "371",
													"type": "text"
												},
												{
													"key": "service[371][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[372][service_type_id]",
													"value": "372",
													"type": "text"
												},
												{
													"key": "service[372][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[373][service_type_id]",
													"value": "373",
													"type": "text"
												},
												{
													"key": "service[373][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[374][service_type_id]",
													"value": "374",
													"type": "text"
												},
												{
													"key": "service[374][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[375][service_type_id]",
													"value": "375",
													"type": "text"
												},
												{
													"key": "service[375][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[376][service_type_id]",
													"value": "376",
													"type": "text"
												},
												{
													"key": "service[376][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[377][service_type_id]",
													"value": "377",
													"type": "text"
												},
												{
													"key": "service[377][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[378][service_type_id]",
													"value": "378",
													"type": "text"
												},
												{
													"key": "service[378][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[379][service_type_id]",
													"value": "379",
													"type": "text"
												},
												{
													"key": "service[379][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[382][service_type_id]",
													"value": "382",
													"type": "text"
												},
												{
													"key": "service[382][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[383][service_type_id]",
													"value": "383",
													"type": "text"
												},
												{
													"key": "service[383][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[384][service_type_id]",
													"value": "384",
													"type": "text"
												},
												{
													"key": "service[384][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[385][service_type_id]",
													"value": "385",
													"type": "text"
												},
												{
													"key": "service[385][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[386][service_type_id]",
													"value": "386",
													"type": "text"
												},
												{
													"key": "service[386][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[387][service_type_id]",
													"value": "387",
													"type": "text"
												},
												{
													"key": "service[387][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[388][service_type_id]",
													"value": "388",
													"type": "text"
												},
												{
													"key": "service[388][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[389][service_type_id]",
													"value": "389",
													"type": "text"
												},
												{
													"key": "service[389][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[390][service_type_id]",
													"value": "390",
													"type": "text"
												},
												{
													"key": "service[390][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[391][service_type_id]",
													"value": "391",
													"type": "text"
												},
												{
													"key": "service[391][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[392][service_type_id]",
													"value": "392",
													"type": "text"
												},
												{
													"key": "service[392][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[393][service_type_id]",
													"value": "393",
													"type": "text"
												},
												{
													"key": "service[393][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[394][service_type_id]",
													"value": "394",
													"type": "text"
												},
												{
													"key": "service[394][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[395][service_type_id]",
													"value": "395",
													"type": "text"
												},
												{
													"key": "service[395][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[396][service_type_id]",
													"value": "396",
													"type": "text"
												},
												{
													"key": "service[396][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[397][service_type_id]",
													"value": "397",
													"type": "text"
												},
												{
													"key": "service[397][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[398][service_type_id]",
													"value": "398",
													"type": "text"
												},
												{
													"key": "service[398][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[399][service_type_id]",
													"value": "399",
													"type": "text"
												},
												{
													"key": "service[399][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[400][service_type_id]",
													"value": "400",
													"type": "text"
												},
												{
													"key": "service[400][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[401][service_type_id]",
													"value": "401",
													"type": "text"
												},
												{
													"key": "service[401][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[402][service_type_id]",
													"value": "402",
													"type": "text"
												},
												{
													"key": "service[402][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[403][service_type_id]",
													"value": "403",
													"type": "text"
												},
												{
													"key": "service[403][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[404][service_type_id]",
													"value": "404",
													"type": "text"
												},
												{
													"key": "service[404][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[405][service_type_id]",
													"value": "405",
													"type": "text"
												},
												{
													"key": "service[405][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[406][service_type_id]",
													"value": "406",
													"type": "text"
												},
												{
													"key": "service[406][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[407][service_type_id]",
													"value": "407",
													"type": "text"
												},
												{
													"key": "service[407][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[408][service_type_id]",
													"value": "408",
													"type": "text"
												},
												{
													"key": "service[408][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[409][service_type_id]",
													"value": "409",
													"type": "text"
												},
												{
													"key": "service[409][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[410][service_type_id]",
													"value": "410",
													"type": "text"
												},
												{
													"key": "service[410][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[411][service_type_id]",
													"value": "411",
													"type": "text"
												},
												{
													"key": "service[411][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[412][service_type_id]",
													"value": "412",
													"type": "text"
												},
												{
													"key": "service[412][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[413][service_type_id]",
													"value": "413",
													"type": "text"
												},
												{
													"key": "service[413][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[414][service_type_id]",
													"value": "414",
													"type": "text"
												},
												{
													"key": "service[414][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[415][service_type_id]",
													"value": "415",
													"type": "text"
												},
												{
													"key": "service[415][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[416][service_type_id]",
													"value": "416",
													"type": "text"
												},
												{
													"key": "service[416][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[417][service_type_id]",
													"value": "417",
													"type": "text"
												},
												{
													"key": "service[417][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[423][service_type_id]",
													"value": "423",
													"type": "text"
												},
												{
													"key": "service[423][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[424][service_type_id]",
													"value": "424",
													"type": "text"
												},
												{
													"key": "service[424][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_types[1][value]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_types[2][value]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "car_types[3][value]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "car_types[4][value]",
													"value": "4",
													"type": "text"
												},
												{
													"key": "car_types[5][value]",
													"value": "5",
													"type": "text"
												},
												{
													"key": "car_types[6][value]",
													"value": "6",
													"type": "text"
												},
												{
													"key": "car_types[8][value]",
													"value": "8",
													"type": "text"
												},
												{
													"key": "car_types[9][value]",
													"value": "9",
													"type": "text"
												},
												{
													"key": "car_types[10][value]",
													"value": "10",
													"type": "text"
												},
												{
													"key": "car_types[11][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "car_types[12][value]",
													"value": "12",
													"type": "text"
												},
												{
													"key": "car_types[13][value]",
													"value": "13",
													"type": "text"
												},
												{
													"key": "car_types[14][value]",
													"value": "14",
													"type": "text"
												},
												{
													"key": "car_types[15][value]",
													"value": "15",
													"type": "text"
												},
												{
													"key": "car_types[16][value]",
													"value": "16",
													"type": "text"
												},
												{
													"key": "car_types[17][value]",
													"value": "17",
													"type": "text"
												},
												{
													"key": "car_types[18][value]",
													"value": "18",
													"type": "text"
												},
												{
													"key": "car_types[19][value]",
													"value": "19",
													"type": "text"
												},
												{
													"key": "car_types[20][value]",
													"value": "20",
													"type": "text"
												},
												{
													"key": "car_types[21][value]",
													"value": "21",
													"type": "text"
												},
												{
													"key": "car_types[22][value]",
													"value": "22",
													"type": "text"
												},
												{
													"key": "car_types[23][value]",
													"value": "23",
													"type": "text"
												},
												{
													"key": "car_types[24][value]",
													"value": "24",
													"type": "text"
												},
												{
													"key": "car_types[25][value]",
													"value": "25",
													"type": "text"
												},
												{
													"key": "car_types[26][value]",
													"value": "26",
													"type": "text"
												},
												{
													"key": "car_types[27][value]",
													"value": "27",
													"type": "text"
												},
												{
													"key": "car_types[28][value]",
													"value": "28",
													"type": "text"
												},
												{
													"key": "car_types[29][value]",
													"value": "29",
													"type": "text"
												},
												{
													"key": "car_types[30][value]",
													"value": "30",
													"type": "text"
												},
												{
													"key": "car_types[31][value]",
													"value": "31",
													"type": "text"
												},
												{
													"key": "car_types[32][value]",
													"value": "32",
													"type": "text"
												},
												{
													"key": "car_types[33][value]",
													"value": "33",
													"type": "text"
												},
												{
													"key": "car_types[35][value]",
													"value": "35",
													"type": "text"
												},
												{
													"key": "car_types[36][value]",
													"value": "36",
													"type": "text"
												},
												{
													"key": "car_types[37][value]",
													"value": "37",
													"type": "text"
												},
												{
													"key": "car_types[38][value]",
													"value": "38",
													"type": "text"
												},
												{
													"key": "car_types[39][value]",
													"value": "39",
													"type": "text"
												},
												{
													"key": "car_types[40][value]",
													"value": "40",
													"type": "text"
												},
												{
													"key": "car_types[41][value]",
													"value": "41",
													"type": "text"
												},
												{
													"key": "car_types[42][value]",
													"value": "42",
													"type": "text"
												},
												{
													"key": "car_types[43][value]",
													"value": "43",
													"type": "text"
												},
												{
													"key": "car_types[44][value]",
													"value": "44",
													"type": "text"
												},
												{
													"key": "car_types[45][value]",
													"value": "45",
													"type": "text"
												},
												{
													"key": "car_types[46][value]",
													"value": "46",
													"type": "text"
												},
												{
													"key": "car_types[47][value]",
													"value": "47",
													"type": "text"
												},
												{
													"key": "car_types[48][value]",
													"value": "48",
													"type": "text"
												},
												{
													"key": "car_types[49][value]",
													"value": "49",
													"type": "text"
												},
												{
													"key": "car_types[50][value]",
													"value": "50",
													"type": "text"
												},
												{
													"key": "car_types[215][value]",
													"value": "215",
													"type": "text"
												},
												{
													"key": "car_types[219][value]",
													"value": "219",
													"type": "text"
												},
												{
													"key": "car_types[264][value]",
													"value": "264",
													"type": "text"
												},
												{
													"key": "car_statuses[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_statuses[1]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "car_statuses[2]",
													"value": "4",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/admin/companies/64",
											"host": [
												"{{4443}}"
											],
											"path": [
												"admin",
												"companies",
												"64"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id\",responseJson.data[0].car_type.id)",
													"// pm.collectionVariables.set(\"user_id\",responseJson.data[0].holder.id)",
													"console.log(\"car_type_id = \"+(pm.collectionVariables.get(\"car_type_id\")))",
													"// console.log(pm.collectionVariables.get(\"user_id\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=van&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "van"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id#2\",responseJson.data[0].car_type.id)",
													"// pm.collectionVariables.set(\"user_id\",responseJson.data[0].holder.id)",
													"console.log(\"car_type_id = \"+(pm.collectionVariables.get(\"car_type_id#2\")))",
													"// console.log(pm.collectionVariables.get(\"user_id\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=Cargo+Van&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "Cargo+Van"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id#3\",responseJson.data[0].car_type.id)",
													"// pm.collectionVariables.set(\"user_id\",responseJson.data[0].holder.id)",
													"console.log(\"car_type_id = \"+(pm.collectionVariables.get(\"car_type_id#3\")))",
													"// console.log(pm.collectionVariables.get(\"user_id\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=Passenger&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "Passenger"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/users?name=? - Recive ID Freddie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"// pm.collectionVariables.set(\"group_id\",responseJson.data[0].groups[0].id)",
													"pm.collectionVariables.set(\"user_id\",responseJson.data[0].id)",
													"// console.log(pm.collectionVariables.get(\"group_id\"))",
													"console.log(\"user_id = \"+pm.collectionVariables.get(\"user_id\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Freddie&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Freddie"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/users?name=? - Recive ID Chuck",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"// pm.collectionVariables.set(\"group_id\",responseJson.data[0].groups[0].id)",
													"pm.collectionVariables.set(\"user_id#2\",responseJson.data[0].id)",
													"// console.log(pm.collectionVariables.get(\"group_id\"))",
													"console.log(\"user_id#2 = \"+pm.collectionVariables.get(\"user_id#2\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Chuck&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Chuck"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Eddie & ID Team",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"group_id\",responseJson.data[0].groups[0].group_id)",
													"pm.collectionVariables.set(\"user_id_without-perm\",responseJson.data[0].id)",
													"console.log(\"group_id = \"+pm.collectionVariables.get(\"group_id\"))",
													"console.log(\"user_id_without-perm = \"+pm.collectionVariables.get(\"user_id_without-perm\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Halen&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Halen"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Select Car #3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"if (responseJson.data[0]){",
													"    pm.collectionVariables.set(\"car_id_resolve\", responseJson.data[0].id);",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car={{VIN}}&sort=&order=asc&page=1&group_id=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car",
													"value": "{{VIN}}"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/cars/16489/remove -Delete car",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/cars/{{car_id_resolve}}/remove",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"cars",
												"{{car_id_resolve}}",
												"remove"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars - Create car",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"// console.log(responseJson.data.id)",
													"pm.collectionVariables.set(\"car_id_resolve\", responseJson.data.id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a(\"number\");",
													"    pm.expect(responseJson.data.car_model_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"year\":\"\",\n\"make\":\"\",\n\"model\":\"\",\n\"trim\":\"\",\n\"id\":\"\",\n\"car_status_id\":1,\n\"pictureLoaded\":\"\",\n\"car_type_id\":45,\n\"vin\":\"{{VIN}}\",\n\"engine\":\"\",\n\"chassis\":\"\",\n\"notes\":\"string\",\n\"hours\":\"\",\n\"seriaNubmer\":\"\",\n\"purchase_at\":\"2020-01-01\",\n\"nickname\":\"Car #3\",\n\"group\":\"\",\n\"mileage\":20001,\n\"extra_notes\":\"string\",\n\"groups\":[532],\n\"license_plate\":\"SV27148\",\n\"picture\":\"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars"
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"// console.log(\"---- \"+responseJson.data[0])",
													"// console.log(responseJson.data.length)",
													"// console.log(responseJson.data[0].id)",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"//  console.log(responseJson.request_id);",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "151",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "02000.2",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "020002",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43264",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.74515",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GFH8IV5c][value]",
													"value": "Not Damaged or Defective",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qZVO1L4f][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ZQwbcA4F][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[nR9vgteo][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5WtfNkTm][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0H5yxSAZ][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[vWIhsunm][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[fxPL2Ivg][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[a9q9eWsv][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vTxNzEdU][value]",
													"value": "232828",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													"pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=days&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"// console.log(\"---- \"+responseJson.data[0])",
													"// console.log(responseJson.data.length)",
													"// console.log(responseJson.data[0].id)",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"//  console.log(responseJson.request_id);",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "153",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "02000.2",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "020002",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43272",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.7449",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[l4RnHUPQ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[ss7Ux58o][value]",
													"value": "232830",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[sBtsLQvJ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[4r8DSbp3][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[PxOvds8k][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[UGPQ7ZsN][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{car}/issues? - filtem by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"let j =0;",
													"for (let i=0; i<responseJson.length; i++){",
													"    if (responseJson[i].status!=0){",
													"        j++;",
													"    }",
													"}",
													"",
													"pm.test(\"Check dublikation of issues\", function () {",
													"    pm.expect(pm.collectionVariables.get(\"issues_question\")).to.be.equal(responseJson[0].label.slice(0));",
													"    // pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"});",
													" ",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.length-j).to.be.equal(1);",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&issue={{issues_question}}&sort=service_type&order=desc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "issue",
													"value": "{{issues_question}}"
												},
												{
													"key": "sort",
													"value": "service_type"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=status&order=asc&page=1&status=0",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "status"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": "0"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow\n- Login to Admin panel\n- Turn off Maintenance\n- Login\n- Create car by VIN\n- Select inspections  Pre- inspection\n- Start inspections  Pre- inspection\n- Finish inspection  Pre- inspection\n- Recive list of inspections\n- Select inspections  Post- inspection\n- Start inspections  Post- inspection\n- Finish inspection  Post- inspection\n- Recive list of inspections and check duplicate\n- Recive list of inspections and save ID of 10 issues\n\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "2 Assing-mail-resolve / Resolve without assign x3",
							"item": [
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[1]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work-order_id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[1]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"pm.collectionVariables.set(\"mileage_real\", responseJson.data.assigned_object.mileage);",
													"pm.collectionVariables.set(\"message_mileage\", responseJson.data.assigned_object.mileage);",
													"",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":null}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes - includes WO 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[1]}}\",\"off\":0,\"includes\":{}}]}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 1 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage-1).to.be.equals(pm.collectionVariables.get(\"mileage\"));",
													"    pm.expect(responseJson.data.resolve.amount).to.be.equal(9.45);",
													"",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "9.45",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/11/2021 11:51 PM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"pm.collectionVariables.set(\"mileage_real\", responseJson.data.assigned_object.mileage);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[0]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+1@driveroo.com\"); ",
													"    // pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+1@driveroo.com\"); ",
													"    // pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{assign_email_without-perm}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    console.log(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    pm.expect(responseJson.success).to.be.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "0.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "03/11/2021 1:05 PM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"The odometer you entered is above the reasonable increase limit set by your organization. Please check to make sure you are entering it correctly.\");",
													"    console.log(\"The odometer you entered is above the reasonable increase limit set by your organization. Please check to make sure you are entering it correctly.\");",
													"    pm.expect(responseJson.success).to.be.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"mileage\", pm.collectionVariables.get(\"mileage\")+500);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "0.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "03/11/2021 1:05 PM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    // pm.expect(responseJson.error_messages).to.be.eql(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" km.\");",
													"    // console.log(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" km.\");",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.equals(pm.collectionVariables.get(\"mileage_real\"));",
													"    pm.expect(responseJson.data.resolve.amount).to.be.equal(9.45);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "9.45",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "03/11/2021 1:05 PM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Delete WO\n- Create WO \n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolve WO\n\n- Create WO \n- Resolwe WO without Assing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "3 Assing-Reject-Assing-Include-Approv-Reject-Assing-Include-Resolve",
							"item": [
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[2]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing #1 WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.assign_name).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"\"}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/reject  - Reject by manager WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.updated_at).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing #2 WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes #1 WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_uuid\"))",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"// console.log(pm.collectionVariables.get(\"work_order_id\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[2]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Parts1\",\"part_no\":\"123\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Test\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes/approval - includes WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[2]}}\"}]}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_uuid}}/reject  - Reject by mechanik WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.updated_at).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing #3 WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":25}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes #2 WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"// console.log(pm.collectionVariables.get(\"mileage\"))",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_uuid\"))",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"// console.log(pm.collectionVariables.get(\"work_order_id\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[2]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Parts1\",\"part_no\":\"123\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Test\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 2 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage-1).to.be.equals(pm.collectionVariables.get(\"mileage\"));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.success).to.not.equal(pm.collectionVariables.get(\"mileage\"));",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "0.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[2]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Assing WO #1\n- Reject WO #1\n- Assing WO #2\n- Send Estimate\n- Approve Estimate\n- Reject WO #2\n- Assing WO #3 with Pre-approve amount\n- Send Estimate\n- Resolve WO \n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "4 Assing-Reject-Resolve",
							"item": [
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[3]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing WO 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"approve_amount\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/reject  - Reject WO 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.updated_at).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage-1).to.be.equals(pm.collectionVariables.get(\"mileage\"));",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "0.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[3]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Assing WO\n- Reject WO\n- Resolwe WO without Assing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "5 Assing-User2-Reject-Resolve",
							"item": [
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[4]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing WO 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_uuid\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"approve_amount\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    // pm.expect(responseJson.email).to.have.lengthOf(24);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    // pm.expect(responseJson.email).to.eql(\"zhukova.nadiia@gmail.com\"); ",
													"    // pm.expect(responseJson.name).to.eql('Nadezhda Moha');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    // pm.expect(responseJson.email).to.eql(\"zhukova.nadiia@gmail.com\"); ",
													"    // pm.expect(responseJson.name).to.eql('Nadezhda Moha');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/reject  - Reject WO 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_uuid\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage-1).to.be.equals(pm.collectionVariables.get(\"mileage\"));",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "0.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[4]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id_prod\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Assing WO\n- Login by another user\n- Reject WO by another user\n- Resolwe WO without Assing by another user\n- Login by default user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "6 Assing-User2-Reject-Assing-Include-Resolve",
							"item": [
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[5]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('In progress');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":null}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/reject  - Reject WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_uuid\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('In progress');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":null}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_uuid}/includes - includes WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage - 1);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"// console.log(pm.collectionVariables.get(\"work_order_id\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('In progress');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[5]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Parts1\",\"part_no\":\"123\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Test\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_uuid}}/resolve - WO 5 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage -1).to.be.equal(pm.collectionVariables.get(\"mileage\"));    ",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('Resolved');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[5]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Assing WO\n- Login by another user\n- Reject WO by another user\n- Assing WO by another user\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "7 Open WO-User2-Assing-Include-User1-Approv-Resolve",
							"item": [
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[6]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/assign - Assing WO 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_uuid\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_uuid}/includes - includes WO 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage - 1);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"// console.log(pm.collectionVariables.get(\"work_order_id\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[6]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Parts1\",\"part_no\":\"123\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Test\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/includes/approval - includes WO 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_uuid\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[6]}}\"}]}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - WO 6 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage-1).to.be.equals(pm.collectionVariables.get(\"mileage\"));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "0.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[6]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Open aditional info about issues\n- Login by another user\n- Open aditional info about issues\n- Assing WO by another user\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "8 Open WO-User2-Resolve",
							"item": [
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[7]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 5 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage-1).to.be.equals(pm.collectionVariables.get(\"mileage\"));",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[7]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Open aditional info about issues\n- Login by another user\n- Open aditional info about issues\n- Resolwe WO \n- Login by default user\n\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "9 Open WO-Add issue-Assing-Estimate/Approve-Resolve x3",
							"item": [
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=status&order=asc&page=1&status=0",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "status"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[0]}}\",\"{{issues_id[1]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/cars/{{car_id}}/issues/attachable?wo={{work_order_id}} - List of issues to add WO 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"attach_issues_id[0]\", responseJson.data[0].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[1]\", responseJson.data[1].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[2]\", responseJson.data[2].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[3]\", responseJson.data[3].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[4]\", responseJson.data[4].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[5]\", responseJson.data[5].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[6]\", responseJson.data[6].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[7]\", responseJson.data[7].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data[0]).to.to.have.any.keys(['issue_id','type']);",
													"    pm.expect(responseJson.data[0]).to.have.property('uuid');",
													"    pm.expect(responseJson.success).to.be.equal(true);});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues/attachable?wo={{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues",
												"attachable"
											],
											"query": [
												{
													"key": "wo",
													"value": "{{work_order_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/assign - Assing WO 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_without-perm}}\",\"assign_email\":\"{{assign_email_without-perm}}\",\"assign_phone\":\"{{assign_phone_without-perm}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id_without-perm}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":null}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_uuid}/includes - includes WO 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\",\"off\":1,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[0]}}\",\"off\":0,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[1]}}\",\"off\":0,\"includes\":{}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/includes/approval - includes WO 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"// console.log(pm.collectionVariables.get(\"work_order_uuid\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\"},{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[0]}}\"},{\"approved\":false,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[1]}}\"}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing WO 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.collectionVariables.set(\"message_mileage\", pm.collectionVariables.get(\"mileage\")+1);",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    // console.log(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"mileage\")+\" mi.\");",
													"    pm.expect(responseJson.success).to.be.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/18/2021 3:15 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{attach_issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing WO 8 Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"The odometer you entered is above the reasonable increase limit set by your organization. Please check to make sure you are entering it correctly.\");",
													"    console.log(\"The odometer you entered is above the reasonable increase limit set by your organization. Please check to make sure you are entering it correctly.\");",
													"    pm.expect(responseJson.success).to.be.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"mileage\", pm.collectionVariables.get(\"mileage\")+500);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/18/2021 3:15 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{attach_issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing WO 8 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.equals(pm.collectionVariables.get(\"mileage_real\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/18/2021 3:15 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{attach_issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "10 External user: Open WO-Add issue-Assing-Estimate/Approve-Resolve  #1",
							"item": [
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=status&order=asc&page=2&status=0",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "status"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "status",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"// console.log(pm.collectionVariables.get(\"mileage\"))",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[2]}}\",\"{{issues_id[3]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/cars/{{car_id}}/issues/attachable?wo={{work_order_id}} - List of issues to add WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"attach_issues_id[0]\", responseJson.data[0].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[1]\", responseJson.data[1].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[2]\", responseJson.data[2].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[3]\", responseJson.data[3].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[4]\", responseJson.data[4].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[5]\", responseJson.data[5].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[6]\", responseJson.data[6].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[7]\", responseJson.data[7].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data[0]).to.to.have.any.keys(['issue_id','type']);",
													"    pm.expect(responseJson.data[0]).to.have.property('uuid');",
													"    pm.expect(responseJson.success).to.be.equal(true);});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues/attachable?wo={{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues",
												"attachable"
											],
											"query": [
												{
													"key": "wo",
													"value": "{{work_order_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/assign - Assing WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_Outside}}\",\"assign_email\":\"{{assign_email_Outside}}\",\"assign_phone\":\"\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":\"\",\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":null}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_uuid}/includes - includes WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\",\"off\":1,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[2]}}\",\"off\":0,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[3]}}\",\"off\":0,\"includes\":{}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/includes/approval - includes WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\"},{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[2]}}\"},{\"approved\":false,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[3]}}\"}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - Resolve without assing 5 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(Number(responseJson.data.assigned_object.mileage)).to.be.equals(pm.collectionVariables.get(\"mileage\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/18/2021 3:15 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{attach_issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[2]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "11 External user: Open issue-Add issue-Assing-Estimate/Approve-Resolve    #2",
							"item": [
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=status&order=asc&page=2&status=0",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "status"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "status",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[4]}}\",\"{{issues_id[5]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/cars/{{car_id}}/issues/attachable?wo={{work_order_id}} - List of issues to add WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"attach_issues_id[0]\", responseJson.data[0].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[1]\", responseJson.data[1].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[2]\", responseJson.data[2].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[3]\", responseJson.data[3].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[4]\", responseJson.data[4].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[5]\", responseJson.data[5].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[6]\", responseJson.data[6].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[7]\", responseJson.data[7].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data[0]).to.to.have.any.keys(['issue_id','type']);",
													"    pm.expect(responseJson.data[0]).to.have.property('uuid');",
													"    pm.expect(responseJson.success).to.be.equal(true);});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues/attachable?wo={{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues",
												"attachable"
											],
											"query": [
												{
													"key": "wo",
													"value": "{{work_order_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/assign - Assing WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_Outside}}\",\"assign_email\":\"{{assign_email_Outside}}\",\"assign_phone\":\"\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":\"\",\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":null}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_uuid}/includes - includes WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\",\"off\":1,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[4]}}\",\"off\":0,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[5]}}\",\"off\":0,\"includes\":{}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/includes/approval - includes WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\"},{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[4]}}\"},{\"approved\":false,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[5]}}\"}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - Resolve without assing 5 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(Number(responseJson.data.assigned_object.mileage)).to.be.equals(pm.collectionVariables.get(\"mileage\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"mileage\", pm.collectionVariables.get(\"mileage\")+500);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/18/2021 3:15 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{attach_issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[4]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "12 External user: Open issue-Add issue-Assing-Estimate/Approve-Reject-Resolve (x3) #3",
							"item": [
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=status&order=asc&page=1&status=0",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "status"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+1@driveroo.com\"); ",
													"    // pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+1@driveroo.com\"); ",
													"    // pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{assign_email_without-perm}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[0]}}\",\"{{issues_id[1]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/cars/{{car_id}}/issues/attachable?wo={{work_order_id}} - List of issues to add WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"attach_issues_id[0]\", responseJson.data[0].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[1]\", responseJson.data[1].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[2]\", responseJson.data[2].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[3]\", responseJson.data[3].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[4]\", responseJson.data[4].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[5]\", responseJson.data[5].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[6]\", responseJson.data[6].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[7]\", responseJson.data[7].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data[0]).to.to.have.any.keys(['issue_id','type']);",
													"    pm.expect(responseJson.data[0]).to.have.property('uuid');",
													"    pm.expect(responseJson.success).to.be.equal(true);});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues/attachable?wo={{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues",
												"attachable"
											],
											"query": [
												{
													"key": "wo",
													"value": "{{work_order_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/assign - Assing WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"pm.collectionVariables.set(\"mileage_real\", responseJson.data.assigned_object.mileage);",
													"pm.collectionVariables.set(\"message_mileage\", responseJson.data.assigned_object.mileage);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_Outside}}\",\"assign_email\":\"{{assign_email_Outside}}\",\"assign_phone\":\"\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":\"\",\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":35}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_uuid}/includes - includes WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\",\"off\":1,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[0]}}\",\"off\":0,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[1]}}\",\"off\":0,\"includes\":{}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/includes/approval - includes WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\"},{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[0]}}\"},{\"approved\":false,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[1]}}\"}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_uuid}/reject - reject WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    console.log(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    pm.expect(responseJson.success).to.be.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/18/2021 3:15 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[2][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[2][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[2][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[3][object_id]",
													"value": "{{attach_issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[3][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[3][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 5 Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"The odometer you entered is above the reasonable increase limit set by your organization. Please check to make sure you are entering it correctly.\");",
													"    console.log(\"The odometer you entered is above the reasonable increase limit set by your organization. Please check to make sure you are entering it correctly.\");",
													"    pm.expect(responseJson.success).to.be.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"mileage\", pm.collectionVariables.get(\"mileage\")+500);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/18/2021 3:15 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[2][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[2][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[2][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[3][object_id]",
													"value": "{{attach_issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[3][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[3][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 5 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.equals(pm.collectionVariables.get(\"mileage_real\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage_real}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "5.00",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "01/18/2021 3:15 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[2][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[2][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[2][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[3][object_id]",
													"value": "{{attach_issues_id[1]}}",
													"type": "text"
												},
												{
													"key": "estimates[3][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[3][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "13 /userApi/cars/16489/remove -Delete car",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check responce\", function () {",
											"    pm.expect(responseJson.success).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_id}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/userApi/cars/{{car_id_resolve}}/remove",
									"host": [
										"{{4443}}"
									],
									"path": [
										"userApi",
										"cars",
										"{{car_id_resolve}}",
										"remove"
									]
								}
							},
							"response": []
						}
					],
					"description": "Create work-order base on Pre - Past Inspections\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "3 Sand: Pre - Past Inspections from Mauntenance (Maintenance)",
					"item": [
						{
							"name": "1 Creaate car & Pre- Post inspection & Check duplication",
							"item": [
								{
									"name": "Login Admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// console.log( pm.cookies.get(\"laravel_session\"));",
													"//let cookies = \"laravel_session=\"+ pm.cookies.get(\"laravel_session\");",
													"",
													"//console.log(cookies);",
													"",
													"pm.collectionVariables.set(\"cookies-token\", \"laravel_session=\"+ pm.cookies.get(\"laravel_session\"));",
													"",
													"// console.log(pm.globals.get(\"cookies-token\") +\" | \"+pm.collectionVariables.get(\"cookies-token\")+\" | \"+pm.environment.get(\"cookies-token\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "_token",
													"value": "XrMI2Z8n96OD7Az80vTRrPBrwFumiJUvBa7IQ2C0",
													"type": "text"
												},
												{
													"key": "email",
													"value": "sergeyk@driveroo.com",
													"type": "text"
												},
												{
													"key": "password",
													"value": "123456",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/admin/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"admin",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check Maintenance",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Cookie",
												"type": "text",
												"value": " _gid=GA1.2.840618837.1611337377; _hjTLDTest=1; _hjid=8d983bd7-eca9-4fea-af47-1ed7d0fad41b; _hjFirstSeen=1; ajs_group_id=null; ajs_anonymous_id=%225a1ec840-5f13-481d-a854-e650dc93f008%22; io=11iex9a8k9NptsD6AAQe; _ga_VLL86CMPFN=GS1.1.1611339714.12.1.1611340190.16; _ga=GA1.1.1369376699.1611131368; laravel_session=xqGa5jzaa8e3H0GWl9KteuoW3GaucJe9CkmgIxHK",
												"disabled": true
											},
											{
												"key": "Cookie",
												"value": "cc",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "id",
													"value": "64",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Driveroo_Test_Auto_Env",
													"type": "text"
												},
												{
													"key": "system_name",
													"value": "Driveroo_Test_Auto_Env",
													"type": "text"
												},
												{
													"key": "address",
													"value": "Gagarina, 25",
													"type": "text"
												},
												{
													"key": "terminal_address",
													"value": "Gagarina, 25",
													"type": "text"
												},
												{
													"key": "ttl",
													"value": "",
													"type": "text"
												},
												{
													"key": "timezone",
													"value": "America/Los_Angeles",
													"type": "text"
												},
												{
													"key": "currency",
													"value": "USD",
													"type": "text"
												},
												{
													"key": "measurement",
													"value": "USCS",
													"type": "text"
												},
												{
													"key": "notification_channels[0]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "notification_channels[1]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "behaviors[0][name]",
													"value": "assigned_vehicles",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][region]",
													"value": "US",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][vin]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][ymm]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][chassis]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[0][data][engine]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "behaviors[1][name]",
													"value": "assigned_heavy",
													"type": "text"
												},
												{
													"key": "behaviors[1][data][sn]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "behaviors[2][name]",
													"value": "",
													"type": "text"
												},
												{
													"key": "permissions[company-vehicles-recall]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-vehicles-visibility]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-daily-log]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-assign]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-dashboard-create-issues]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-fuel]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-remind]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-tasks]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-daily-inspection]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-damage]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-inspection-location]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-location-fence]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-alert-inspection-complete]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[alert-car-status-change]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-accident]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-incident]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-maintenance]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-inspection]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-service-frequency]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-warehouse]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "permissions[company-metabase-reports]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "dashboard_service_id",
													"value": "107",
													"type": "text"
												},
												{
													"key": "user_tracking",
													"value": "0",
													"type": "text"
												},
												{
													"key": "gps_interval",
													"value": "10",
													"type": "text"
												},
												{
													"key": "gps_stop_time",
													"value": "",
													"type": "text"
												},
												{
													"key": "diesel_price",
													"value": "2",
													"type": "text"
												},
												{
													"key": "gasoline_price",
													"value": "5",
													"type": "text"
												},
												{
													"key": "fuel_service_id",
													"value": "102",
													"type": "text"
												},
												{
													"key": "maintenance_service_id",
													"value": "126",
													"type": "text"
												},
												{
													"key": "mileage_increase_limit",
													"value": "250",
													"type": "text"
												},
												{
													"key": "hours_increase_limit",
													"value": "5.5",
													"type": "text"
												},
												{
													"key": "metabase_reports[__0][name]",
													"value": "first",
													"type": "text"
												},
												{
													"key": "metabase_reports[__0][link]",
													"value": "https://metabase.driveroo.com/public/question/93d29118-f432-400a-9834-2df992fbe378",
													"type": "text"
												},
												{
													"key": "metabase_reports[__1][name]",
													"value": "second",
													"type": "text"
												},
												{
													"key": "metabase_reports[__1][link]",
													"value": "https://metabase.driveroo.com/public/question/93d29118-f432-400a-9834-2df992fbe378",
													"type": "text"
												},
												{
													"key": "cdb_id",
													"value": "CDB-20",
													"type": "text"
												},
												{
													"key": "stripe_customer_id",
													"value": "123456",
													"type": "text"
												},
												{
													"key": "stripe_sub_item_id",
													"value": "1234578",
													"type": "text"
												},
												{
													"key": "service[1][service_type_id]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[1][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[2][service_type_id]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "service[2][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[3][service_type_id]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "service[3][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[4][service_type_id]",
													"value": "4",
													"type": "text"
												},
												{
													"key": "service[4][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[5][service_type_id]",
													"value": "5",
													"type": "text"
												},
												{
													"key": "service[5][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[6][service_type_id]",
													"value": "6",
													"type": "text"
												},
												{
													"key": "service[6][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[9][service_type_id]",
													"value": "9",
													"type": "text"
												},
												{
													"key": "service[9][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[10][service_type_id]",
													"value": "10",
													"type": "text"
												},
												{
													"key": "service[10][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[11][service_type_id]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "service[11][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[12][service_type_id]",
													"value": "12",
													"type": "text"
												},
												{
													"key": "service[12][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[14][service_type_id]",
													"value": "14",
													"type": "text"
												},
												{
													"key": "service[14][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[15][service_type_id]",
													"value": "15",
													"type": "text"
												},
												{
													"key": "service[15][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[16][service_type_id]",
													"value": "16",
													"type": "text"
												},
												{
													"key": "service[16][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[17][service_type_id]",
													"value": "17",
													"type": "text"
												},
												{
													"key": "service[17][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[18][service_type_id]",
													"value": "18",
													"type": "text"
												},
												{
													"key": "service[18][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[19][service_type_id]",
													"value": "19",
													"type": "text"
												},
												{
													"key": "service[19][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[20][service_type_id]",
													"value": "20",
													"type": "text"
												},
												{
													"key": "service[20][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[22][service_type_id]",
													"value": "22",
													"type": "text"
												},
												{
													"key": "service[22][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[23][service_type_id]",
													"value": "23",
													"type": "text"
												},
												{
													"key": "service[23][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[24][service_type_id]",
													"value": "24",
													"type": "text"
												},
												{
													"key": "service[24][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[25][service_type_id]",
													"value": "25",
													"type": "text"
												},
												{
													"key": "service[25][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[26][service_type_id]",
													"value": "26",
													"type": "text"
												},
												{
													"key": "service[26][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[27][service_type_id]",
													"value": "27",
													"type": "text"
												},
												{
													"key": "service[27][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[28][service_type_id]",
													"value": "28",
													"type": "text"
												},
												{
													"key": "service[28][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[29][service_type_id]",
													"value": "29",
													"type": "text"
												},
												{
													"key": "service[29][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[30][service_type_id]",
													"value": "30",
													"type": "text"
												},
												{
													"key": "service[30][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[31][service_type_id]",
													"value": "31",
													"type": "text"
												},
												{
													"key": "service[31][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[32][service_type_id]",
													"value": "32",
													"type": "text"
												},
												{
													"key": "service[32][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[33][service_type_id]",
													"value": "33",
													"type": "text"
												},
												{
													"key": "service[33][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[34][service_type_id]",
													"value": "34",
													"type": "text"
												},
												{
													"key": "service[34][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[35][service_type_id]",
													"value": "35",
													"type": "text"
												},
												{
													"key": "service[35][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[36][service_type_id]",
													"value": "36",
													"type": "text"
												},
												{
													"key": "service[36][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[37][service_type_id]",
													"value": "37",
													"type": "text"
												},
												{
													"key": "service[37][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[38][service_type_id]",
													"value": "38",
													"type": "text"
												},
												{
													"key": "service[38][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[39][service_type_id]",
													"value": "39",
													"type": "text"
												},
												{
													"key": "service[39][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[40][service_type_id]",
													"value": "40",
													"type": "text"
												},
												{
													"key": "service[40][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[41][service_type_id]",
													"value": "41",
													"type": "text"
												},
												{
													"key": "service[41][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[42][service_type_id]",
													"value": "42",
													"type": "text"
												},
												{
													"key": "service[42][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[43][service_type_id]",
													"value": "43",
													"type": "text"
												},
												{
													"key": "service[43][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[44][service_type_id]",
													"value": "44",
													"type": "text"
												},
												{
													"key": "service[44][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[45][service_type_id]",
													"value": "45",
													"type": "text"
												},
												{
													"key": "service[45][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[46][service_type_id]",
													"value": "46",
													"type": "text"
												},
												{
													"key": "service[46][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[47][service_type_id]",
													"value": "47",
													"type": "text"
												},
												{
													"key": "service[47][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[48][service_type_id]",
													"value": "48",
													"type": "text"
												},
												{
													"key": "service[48][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[49][service_type_id]",
													"value": "49",
													"type": "text"
												},
												{
													"key": "service[49][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[50][service_type_id]",
													"value": "50",
													"type": "text"
												},
												{
													"key": "service[50][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[51][service_type_id]",
													"value": "51",
													"type": "text"
												},
												{
													"key": "service[51][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[52][service_type_id]",
													"value": "52",
													"type": "text"
												},
												{
													"key": "service[52][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[53][service_type_id]",
													"value": "53",
													"type": "text"
												},
												{
													"key": "service[53][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[54][service_type_id]",
													"value": "54",
													"type": "text"
												},
												{
													"key": "service[54][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[55][service_type_id]",
													"value": "55",
													"type": "text"
												},
												{
													"key": "service[55][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[56][service_type_id]",
													"value": "56",
													"type": "text"
												},
												{
													"key": "service[56][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[57][service_type_id]",
													"value": "57",
													"type": "text"
												},
												{
													"key": "service[57][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[58][service_type_id]",
													"value": "58",
													"type": "text"
												},
												{
													"key": "service[58][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[59][service_type_id]",
													"value": "59",
													"type": "text"
												},
												{
													"key": "service[59][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[60][service_type_id]",
													"value": "60",
													"type": "text"
												},
												{
													"key": "service[60][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[61][service_type_id]",
													"value": "61",
													"type": "text"
												},
												{
													"key": "service[61][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[62][service_type_id]",
													"value": "62",
													"type": "text"
												},
												{
													"key": "service[62][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[63][service_type_id]",
													"value": "63",
													"type": "text"
												},
												{
													"key": "service[63][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[64][service_type_id]",
													"value": "64",
													"type": "text"
												},
												{
													"key": "service[64][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[65][service_type_id]",
													"value": "65",
													"type": "text"
												},
												{
													"key": "service[65][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[66][service_type_id]",
													"value": "66",
													"type": "text"
												},
												{
													"key": "service[66][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[67][service_type_id]",
													"value": "67",
													"type": "text"
												},
												{
													"key": "service[67][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[68][service_type_id]",
													"value": "68",
													"type": "text"
												},
												{
													"key": "service[68][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[69][service_type_id]",
													"value": "69",
													"type": "text"
												},
												{
													"key": "service[69][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[70][service_type_id]",
													"value": "70",
													"type": "text"
												},
												{
													"key": "service[70][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[71][service_type_id]",
													"value": "71",
													"type": "text"
												},
												{
													"key": "service[71][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[72][service_type_id]",
													"value": "72",
													"type": "text"
												},
												{
													"key": "service[72][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[73][service_type_id]",
													"value": "73",
													"type": "text"
												},
												{
													"key": "service[73][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[74][service_type_id]",
													"value": "74",
													"type": "text"
												},
												{
													"key": "service[74][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[75][service_type_id]",
													"value": "75",
													"type": "text"
												},
												{
													"key": "service[75][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[76][service_type_id]",
													"value": "76",
													"type": "text"
												},
												{
													"key": "service[76][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[77][service_type_id]",
													"value": "77",
													"type": "text"
												},
												{
													"key": "service[77][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[78][service_type_id]",
													"value": "78",
													"type": "text"
												},
												{
													"key": "service[78][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[79][service_type_id]",
													"value": "79",
													"type": "text"
												},
												{
													"key": "service[79][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[80][service_type_id]",
													"value": "80",
													"type": "text"
												},
												{
													"key": "service[80][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[81][service_type_id]",
													"value": "81",
													"type": "text"
												},
												{
													"key": "service[81][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[82][service_type_id]",
													"value": "82",
													"type": "text"
												},
												{
													"key": "service[82][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[83][service_type_id]",
													"value": "83",
													"type": "text"
												},
												{
													"key": "service[83][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[84][service_type_id]",
													"value": "84",
													"type": "text"
												},
												{
													"key": "service[84][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[85][service_type_id]",
													"value": "85",
													"type": "text"
												},
												{
													"key": "service[85][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[86][service_type_id]",
													"value": "86",
													"type": "text"
												},
												{
													"key": "service[86][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[87][service_type_id]",
													"value": "87",
													"type": "text"
												},
												{
													"key": "service[87][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[88][service_type_id]",
													"value": "88",
													"type": "text"
												},
												{
													"key": "service[88][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[89][service_type_id]",
													"value": "89",
													"type": "text"
												},
												{
													"key": "service[89][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[90][service_type_id]",
													"value": "90",
													"type": "text"
												},
												{
													"key": "service[90][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[91][service_type_id]",
													"value": "91",
													"type": "text"
												},
												{
													"key": "service[91][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[92][service_type_id]",
													"value": "92",
													"type": "text"
												},
												{
													"key": "service[92][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[93][service_type_id]",
													"value": "93",
													"type": "text"
												},
												{
													"key": "service[93][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[94][service_type_id]",
													"value": "94",
													"type": "text"
												},
												{
													"key": "service[94][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[95][service_type_id]",
													"value": "95",
													"type": "text"
												},
												{
													"key": "service[95][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[96][service_type_id]",
													"value": "96",
													"type": "text"
												},
												{
													"key": "service[96][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[98][service_type_id]",
													"value": "98",
													"type": "text"
												},
												{
													"key": "service[98][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[99][service_type_id]",
													"value": "99",
													"type": "text"
												},
												{
													"key": "service[99][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[100][service_type_id]",
													"value": "100",
													"type": "text"
												},
												{
													"key": "service[100][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[101][service_type_id]",
													"value": "101",
													"type": "text"
												},
												{
													"key": "service[101][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[102][service_type_id]",
													"value": "102",
													"type": "text"
												},
												{
													"key": "service[102][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[103][service_type_id]",
													"value": "103",
													"type": "text"
												},
												{
													"key": "service[103][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[105][service_type_id]",
													"value": "105",
													"type": "text"
												},
												{
													"key": "service[105][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[106][service_type_id]",
													"value": "106",
													"type": "text"
												},
												{
													"key": "service[106][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[107][service_type_id]",
													"value": "107",
													"type": "text"
												},
												{
													"key": "service[107][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[108][service_type_id]",
													"value": "108",
													"type": "text"
												},
												{
													"key": "service[108][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[109][service_type_id]",
													"value": "109",
													"type": "text"
												},
												{
													"key": "service[109][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[110][service_type_id]",
													"value": "110",
													"type": "text"
												},
												{
													"key": "service[110][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[111][service_type_id]",
													"value": "111",
													"type": "text"
												},
												{
													"key": "service[111][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[112][service_type_id]",
													"value": "112",
													"type": "text"
												},
												{
													"key": "service[112][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[113][service_type_id]",
													"value": "113",
													"type": "text"
												},
												{
													"key": "service[113][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[115][service_type_id]",
													"value": "115",
													"type": "text"
												},
												{
													"key": "service[115][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[116][service_type_id]",
													"value": "116",
													"type": "text"
												},
												{
													"key": "service[116][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[117][service_type_id]",
													"value": "117",
													"type": "text"
												},
												{
													"key": "service[117][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[118][service_type_id]",
													"value": "118",
													"type": "text"
												},
												{
													"key": "service[118][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[119][service_type_id]",
													"value": "119",
													"type": "text"
												},
												{
													"key": "service[119][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[120][service_type_id]",
													"value": "120",
													"type": "text"
												},
												{
													"key": "service[120][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[121][service_type_id]",
													"value": "121",
													"type": "text"
												},
												{
													"key": "service[121][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[122][service_type_id]",
													"value": "122",
													"type": "text"
												},
												{
													"key": "service[122][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[124][service_type_id]",
													"value": "124",
													"type": "text"
												},
												{
													"key": "service[124][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[125][service_type_id]",
													"value": "125",
													"type": "text"
												},
												{
													"key": "service[125][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[126][service_type_id]",
													"value": "126",
													"type": "text"
												},
												{
													"key": "service[126][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[128][service_type_id]",
													"value": "128",
													"type": "text"
												},
												{
													"key": "service[128][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[129][service_type_id]",
													"value": "129",
													"type": "text"
												},
												{
													"key": "service[129][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[130][service_type_id]",
													"value": "130",
													"type": "text"
												},
												{
													"key": "service[130][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[131][service_type_id]",
													"value": "131",
													"type": "text"
												},
												{
													"key": "service[131][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[132][service_type_id]",
													"value": "132",
													"type": "text"
												},
												{
													"key": "service[132][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[133][service_type_id]",
													"value": "133",
													"type": "text"
												},
												{
													"key": "service[133][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[134][service_type_id]",
													"value": "134",
													"type": "text"
												},
												{
													"key": "service[134][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[135][service_type_id]",
													"value": "135",
													"type": "text"
												},
												{
													"key": "service[135][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[136][service_type_id]",
													"value": "136",
													"type": "text"
												},
												{
													"key": "service[136][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[137][service_type_id]",
													"value": "137",
													"type": "text"
												},
												{
													"key": "service[137][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[138][service_type_id]",
													"value": "138",
													"type": "text"
												},
												{
													"key": "service[138][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[139][service_type_id]",
													"value": "139",
													"type": "text"
												},
												{
													"key": "service[139][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[140][service_type_id]",
													"value": "140",
													"type": "text"
												},
												{
													"key": "service[140][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[141][service_type_id]",
													"value": "141",
													"type": "text"
												},
												{
													"key": "service[141][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[142][service_type_id]",
													"value": "142",
													"type": "text"
												},
												{
													"key": "service[142][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[143][service_type_id]",
													"value": "143",
													"type": "text"
												},
												{
													"key": "service[143][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[144][service_type_id]",
													"value": "144",
													"type": "text"
												},
												{
													"key": "service[144][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[145][service_type_id]",
													"value": "145",
													"type": "text"
												},
												{
													"key": "service[145][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[146][service_type_id]",
													"value": "146",
													"type": "text"
												},
												{
													"key": "service[146][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[147][service_type_id]",
													"value": "147",
													"type": "text"
												},
												{
													"key": "service[147][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[148][service_type_id]",
													"value": "148",
													"type": "text"
												},
												{
													"key": "service[148][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[149][service_type_id]",
													"value": "149",
													"type": "text"
												},
												{
													"key": "service[149][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[150][service_type_id]",
													"value": "150",
													"type": "text"
												},
												{
													"key": "service[150][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[151][service_type_id]",
													"value": "151",
													"type": "text"
												},
												{
													"key": "service[151][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[152][service_type_id]",
													"value": "152",
													"type": "text"
												},
												{
													"key": "service[152][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[153][service_type_id]",
													"value": "153",
													"type": "text"
												},
												{
													"key": "service[153][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[154][service_type_id]",
													"value": "154",
													"type": "text"
												},
												{
													"key": "service[154][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[155][service_type_id]",
													"value": "155",
													"type": "text"
												},
												{
													"key": "service[155][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[156][service_type_id]",
													"value": "156",
													"type": "text"
												},
												{
													"key": "service[156][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[157][service_type_id]",
													"value": "157",
													"type": "text"
												},
												{
													"key": "service[157][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[158][service_type_id]",
													"value": "158",
													"type": "text"
												},
												{
													"key": "service[158][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[159][service_type_id]",
													"value": "159",
													"type": "text"
												},
												{
													"key": "service[159][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[160][service_type_id]",
													"value": "160",
													"type": "text"
												},
												{
													"key": "service[160][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[161][service_type_id]",
													"value": "161",
													"type": "text"
												},
												{
													"key": "service[161][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[162][service_type_id]",
													"value": "162",
													"type": "text"
												},
												{
													"key": "service[162][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[163][service_type_id]",
													"value": "163",
													"type": "text"
												},
												{
													"key": "service[163][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[166][service_type_id]",
													"value": "166",
													"type": "text"
												},
												{
													"key": "service[166][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[167][service_type_id]",
													"value": "167",
													"type": "text"
												},
												{
													"key": "service[167][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[168][service_type_id]",
													"value": "168",
													"type": "text"
												},
												{
													"key": "service[168][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[169][service_type_id]",
													"value": "169",
													"type": "text"
												},
												{
													"key": "service[169][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[170][service_type_id]",
													"value": "170",
													"type": "text"
												},
												{
													"key": "service[170][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[171][service_type_id]",
													"value": "171",
													"type": "text"
												},
												{
													"key": "service[171][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[172][service_type_id]",
													"value": "172",
													"type": "text"
												},
												{
													"key": "service[172][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[173][service_type_id]",
													"value": "173",
													"type": "text"
												},
												{
													"key": "service[173][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[174][service_type_id]",
													"value": "174",
													"type": "text"
												},
												{
													"key": "service[174][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[175][service_type_id]",
													"value": "175",
													"type": "text"
												},
												{
													"key": "service[175][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[176][service_type_id]",
													"value": "176",
													"type": "text"
												},
												{
													"key": "service[176][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[177][service_type_id]",
													"value": "177",
													"type": "text"
												},
												{
													"key": "service[177][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[178][service_type_id]",
													"value": "178",
													"type": "text"
												},
												{
													"key": "service[178][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[179][service_type_id]",
													"value": "179",
													"type": "text"
												},
												{
													"key": "service[179][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[180][service_type_id]",
													"value": "180",
													"type": "text"
												},
												{
													"key": "service[180][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[181][service_type_id]",
													"value": "181",
													"type": "text"
												},
												{
													"key": "service[181][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[182][service_type_id]",
													"value": "182",
													"type": "text"
												},
												{
													"key": "service[182][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[183][service_type_id]",
													"value": "183",
													"type": "text"
												},
												{
													"key": "service[183][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[184][service_type_id]",
													"value": "184",
													"type": "text"
												},
												{
													"key": "service[184][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[185][service_type_id]",
													"value": "185",
													"type": "text"
												},
												{
													"key": "service[185][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[187][service_type_id]",
													"value": "187",
													"type": "text"
												},
												{
													"key": "service[187][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[188][service_type_id]",
													"value": "188",
													"type": "text"
												},
												{
													"key": "service[188][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[189][service_type_id]",
													"value": "189",
													"type": "text"
												},
												{
													"key": "service[189][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[190][service_type_id]",
													"value": "190",
													"type": "text"
												},
												{
													"key": "service[190][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[193][service_type_id]",
													"value": "193",
													"type": "text"
												},
												{
													"key": "service[193][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[194][service_type_id]",
													"value": "194",
													"type": "text"
												},
												{
													"key": "service[194][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[195][service_type_id]",
													"value": "195",
													"type": "text"
												},
												{
													"key": "service[195][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[196][service_type_id]",
													"value": "196",
													"type": "text"
												},
												{
													"key": "service[196][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[197][service_type_id]",
													"value": "197",
													"type": "text"
												},
												{
													"key": "service[197][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[198][service_type_id]",
													"value": "198",
													"type": "text"
												},
												{
													"key": "service[198][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[199][service_type_id]",
													"value": "199",
													"type": "text"
												},
												{
													"key": "service[199][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[200][service_type_id]",
													"value": "200",
													"type": "text"
												},
												{
													"key": "service[200][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[201][service_type_id]",
													"value": "201",
													"type": "text"
												},
												{
													"key": "service[201][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[202][service_type_id]",
													"value": "202",
													"type": "text"
												},
												{
													"key": "service[202][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[203][service_type_id]",
													"value": "203",
													"type": "text"
												},
												{
													"key": "service[203][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[204][service_type_id]",
													"value": "204",
													"type": "text"
												},
												{
													"key": "service[204][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[205][service_type_id]",
													"value": "205",
													"type": "text"
												},
												{
													"key": "service[205][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[206][service_type_id]",
													"value": "206",
													"type": "text"
												},
												{
													"key": "service[206][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[207][service_type_id]",
													"value": "207",
													"type": "text"
												},
												{
													"key": "service[207][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[208][service_type_id]",
													"value": "208",
													"type": "text"
												},
												{
													"key": "service[208][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[209][service_type_id]",
													"value": "209",
													"type": "text"
												},
												{
													"key": "service[209][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[210][service_type_id]",
													"value": "210",
													"type": "text"
												},
												{
													"key": "service[210][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[211][service_type_id]",
													"value": "211",
													"type": "text"
												},
												{
													"key": "service[211][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[212][service_type_id]",
													"value": "212",
													"type": "text"
												},
												{
													"key": "service[212][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[213][service_type_id]",
													"value": "213",
													"type": "text"
												},
												{
													"key": "service[213][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[214][service_type_id]",
													"value": "214",
													"type": "text"
												},
												{
													"key": "service[214][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[215][service_type_id]",
													"value": "215",
													"type": "text"
												},
												{
													"key": "service[215][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[216][service_type_id]",
													"value": "216",
													"type": "text"
												},
												{
													"key": "service[216][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[217][service_type_id]",
													"value": "217",
													"type": "text"
												},
												{
													"key": "service[217][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[218][service_type_id]",
													"value": "218",
													"type": "text"
												},
												{
													"key": "service[218][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[219][service_type_id]",
													"value": "219",
													"type": "text"
												},
												{
													"key": "service[219][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[220][service_type_id]",
													"value": "220",
													"type": "text"
												},
												{
													"key": "service[220][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[221][service_type_id]",
													"value": "221",
													"type": "text"
												},
												{
													"key": "service[221][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[222][service_type_id]",
													"value": "222",
													"type": "text"
												},
												{
													"key": "service[222][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[223][service_type_id]",
													"value": "223",
													"type": "text"
												},
												{
													"key": "service[223][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[224][service_type_id]",
													"value": "224",
													"type": "text"
												},
												{
													"key": "service[224][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[225][service_type_id]",
													"value": "225",
													"type": "text"
												},
												{
													"key": "service[225][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[226][service_type_id]",
													"value": "226",
													"type": "text"
												},
												{
													"key": "service[226][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[227][service_type_id]",
													"value": "227",
													"type": "text"
												},
												{
													"key": "service[227][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[228][service_type_id]",
													"value": "228",
													"type": "text"
												},
												{
													"key": "service[228][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[229][service_type_id]",
													"value": "229",
													"type": "text"
												},
												{
													"key": "service[229][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[230][service_type_id]",
													"value": "230",
													"type": "text"
												},
												{
													"key": "service[230][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[231][service_type_id]",
													"value": "231",
													"type": "text"
												},
												{
													"key": "service[231][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[232][service_type_id]",
													"value": "232",
													"type": "text"
												},
												{
													"key": "service[232][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[233][service_type_id]",
													"value": "233",
													"type": "text"
												},
												{
													"key": "service[233][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[234][service_type_id]",
													"value": "234",
													"type": "text"
												},
												{
													"key": "service[234][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[235][service_type_id]",
													"value": "235",
													"type": "text"
												},
												{
													"key": "service[235][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[236][service_type_id]",
													"value": "236",
													"type": "text"
												},
												{
													"key": "service[236][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[237][service_type_id]",
													"value": "237",
													"type": "text"
												},
												{
													"key": "service[237][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[238][service_type_id]",
													"value": "238",
													"type": "text"
												},
												{
													"key": "service[238][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[239][service_type_id]",
													"value": "239",
													"type": "text"
												},
												{
													"key": "service[239][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[240][service_type_id]",
													"value": "240",
													"type": "text"
												},
												{
													"key": "service[240][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[241][service_type_id]",
													"value": "241",
													"type": "text"
												},
												{
													"key": "service[241][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[242][service_type_id]",
													"value": "242",
													"type": "text"
												},
												{
													"key": "service[242][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[245][service_type_id]",
													"value": "245",
													"type": "text"
												},
												{
													"key": "service[245][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[246][service_type_id]",
													"value": "246",
													"type": "text"
												},
												{
													"key": "service[246][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[247][service_type_id]",
													"value": "247",
													"type": "text"
												},
												{
													"key": "service[247][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[248][service_type_id]",
													"value": "248",
													"type": "text"
												},
												{
													"key": "service[248][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[249][service_type_id]",
													"value": "249",
													"type": "text"
												},
												{
													"key": "service[249][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[250][service_type_id]",
													"value": "250",
													"type": "text"
												},
												{
													"key": "service[250][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[251][service_type_id]",
													"value": "251",
													"type": "text"
												},
												{
													"key": "service[251][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[252][service_type_id]",
													"value": "252",
													"type": "text"
												},
												{
													"key": "service[252][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[253][service_type_id]",
													"value": "253",
													"type": "text"
												},
												{
													"key": "service[253][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[254][service_type_id]",
													"value": "254",
													"type": "text"
												},
												{
													"key": "service[254][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[255][service_type_id]",
													"value": "255",
													"type": "text"
												},
												{
													"key": "service[255][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[256][service_type_id]",
													"value": "256",
													"type": "text"
												},
												{
													"key": "service[256][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[257][service_type_id]",
													"value": "257",
													"type": "text"
												},
												{
													"key": "service[257][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[258][service_type_id]",
													"value": "258",
													"type": "text"
												},
												{
													"key": "service[258][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[259][service_type_id]",
													"value": "259",
													"type": "text"
												},
												{
													"key": "service[259][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[260][service_type_id]",
													"value": "260",
													"type": "text"
												},
												{
													"key": "service[260][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[261][service_type_id]",
													"value": "261",
													"type": "text"
												},
												{
													"key": "service[261][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[262][service_type_id]",
													"value": "262",
													"type": "text"
												},
												{
													"key": "service[262][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[263][service_type_id]",
													"value": "263",
													"type": "text"
												},
												{
													"key": "service[263][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[264][service_type_id]",
													"value": "264",
													"type": "text"
												},
												{
													"key": "service[264][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[265][service_type_id]",
													"value": "265",
													"type": "text"
												},
												{
													"key": "service[265][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[266][service_type_id]",
													"value": "266",
													"type": "text"
												},
												{
													"key": "service[266][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[267][service_type_id]",
													"value": "267",
													"type": "text"
												},
												{
													"key": "service[267][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[268][service_type_id]",
													"value": "268",
													"type": "text"
												},
												{
													"key": "service[268][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[269][service_type_id]",
													"value": "269",
													"type": "text"
												},
												{
													"key": "service[269][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[270][service_type_id]",
													"value": "270",
													"type": "text"
												},
												{
													"key": "service[270][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[271][service_type_id]",
													"value": "271",
													"type": "text"
												},
												{
													"key": "service[271][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[272][service_type_id]",
													"value": "272",
													"type": "text"
												},
												{
													"key": "service[272][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[273][service_type_id]",
													"value": "273",
													"type": "text"
												},
												{
													"key": "service[273][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[274][service_type_id]",
													"value": "274",
													"type": "text"
												},
												{
													"key": "service[274][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[275][service_type_id]",
													"value": "275",
													"type": "text"
												},
												{
													"key": "service[275][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[276][service_type_id]",
													"value": "276",
													"type": "text"
												},
												{
													"key": "service[276][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[277][service_type_id]",
													"value": "277",
													"type": "text"
												},
												{
													"key": "service[277][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[278][service_type_id]",
													"value": "278",
													"type": "text"
												},
												{
													"key": "service[278][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[279][service_type_id]",
													"value": "279",
													"type": "text"
												},
												{
													"key": "service[279][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[280][service_type_id]",
													"value": "280",
													"type": "text"
												},
												{
													"key": "service[280][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[281][service_type_id]",
													"value": "281",
													"type": "text"
												},
												{
													"key": "service[281][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[282][service_type_id]",
													"value": "282",
													"type": "text"
												},
												{
													"key": "service[282][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[284][service_type_id]",
													"value": "284",
													"type": "text"
												},
												{
													"key": "service[284][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[285][service_type_id]",
													"value": "285",
													"type": "text"
												},
												{
													"key": "service[285][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[286][service_type_id]",
													"value": "286",
													"type": "text"
												},
												{
													"key": "service[286][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[287][service_type_id]",
													"value": "287",
													"type": "text"
												},
												{
													"key": "service[287][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[288][service_type_id]",
													"value": "288",
													"type": "text"
												},
												{
													"key": "service[288][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[289][service_type_id]",
													"value": "289",
													"type": "text"
												},
												{
													"key": "service[289][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[290][service_type_id]",
													"value": "290",
													"type": "text"
												},
												{
													"key": "service[290][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[291][service_type_id]",
													"value": "291",
													"type": "text"
												},
												{
													"key": "service[291][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[292][service_type_id]",
													"value": "292",
													"type": "text"
												},
												{
													"key": "service[292][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[293][service_type_id]",
													"value": "293",
													"type": "text"
												},
												{
													"key": "service[293][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[294][service_type_id]",
													"value": "294",
													"type": "text"
												},
												{
													"key": "service[294][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[295][service_type_id]",
													"value": "295",
													"type": "text"
												},
												{
													"key": "service[295][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[296][service_type_id]",
													"value": "296",
													"type": "text"
												},
												{
													"key": "service[296][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[297][service_type_id]",
													"value": "297",
													"type": "text"
												},
												{
													"key": "service[297][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[298][service_type_id]",
													"value": "298",
													"type": "text"
												},
												{
													"key": "service[298][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[299][service_type_id]",
													"value": "299",
													"type": "text"
												},
												{
													"key": "service[299][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[300][service_type_id]",
													"value": "300",
													"type": "text"
												},
												{
													"key": "service[300][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[301][service_type_id]",
													"value": "301",
													"type": "text"
												},
												{
													"key": "service[301][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[303][service_type_id]",
													"value": "303",
													"type": "text"
												},
												{
													"key": "service[303][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[305][service_type_id]",
													"value": "305",
													"type": "text"
												},
												{
													"key": "service[305][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[306][service_type_id]",
													"value": "306",
													"type": "text"
												},
												{
													"key": "service[306][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[307][service_type_id]",
													"value": "307",
													"type": "text"
												},
												{
													"key": "service[307][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[308][service_type_id]",
													"value": "308",
													"type": "text"
												},
												{
													"key": "service[308][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[309][service_type_id]",
													"value": "309",
													"type": "text"
												},
												{
													"key": "service[309][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[310][service_type_id]",
													"value": "310",
													"type": "text"
												},
												{
													"key": "service[310][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[313][service_type_id]",
													"value": "313",
													"type": "text"
												},
												{
													"key": "service[313][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[314][service_type_id]",
													"value": "314",
													"type": "text"
												},
												{
													"key": "service[314][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[315][service_type_id]",
													"value": "315",
													"type": "text"
												},
												{
													"key": "service[315][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[316][service_type_id]",
													"value": "316",
													"type": "text"
												},
												{
													"key": "service[316][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[317][service_type_id]",
													"value": "317",
													"type": "text"
												},
												{
													"key": "service[317][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[318][service_type_id]",
													"value": "318",
													"type": "text"
												},
												{
													"key": "service[318][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[319][service_type_id]",
													"value": "319",
													"type": "text"
												},
												{
													"key": "service[319][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[320][service_type_id]",
													"value": "320",
													"type": "text"
												},
												{
													"key": "service[320][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[321][service_type_id]",
													"value": "321",
													"type": "text"
												},
												{
													"key": "service[321][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[322][service_type_id]",
													"value": "322",
													"type": "text"
												},
												{
													"key": "service[322][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[323][service_type_id]",
													"value": "323",
													"type": "text"
												},
												{
													"key": "service[323][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[324][service_type_id]",
													"value": "324",
													"type": "text"
												},
												{
													"key": "service[324][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[325][service_type_id]",
													"value": "325",
													"type": "text"
												},
												{
													"key": "service[325][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[326][service_type_id]",
													"value": "326",
													"type": "text"
												},
												{
													"key": "service[326][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[327][service_type_id]",
													"value": "327",
													"type": "text"
												},
												{
													"key": "service[327][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[328][service_type_id]",
													"value": "328",
													"type": "text"
												},
												{
													"key": "service[328][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[329][service_type_id]",
													"value": "329",
													"type": "text"
												},
												{
													"key": "service[329][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[330][service_type_id]",
													"value": "330",
													"type": "text"
												},
												{
													"key": "service[330][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[331][service_type_id]",
													"value": "331",
													"type": "text"
												},
												{
													"key": "service[331][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[332][service_type_id]",
													"value": "332",
													"type": "text"
												},
												{
													"key": "service[332][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[333][service_type_id]",
													"value": "333",
													"type": "text"
												},
												{
													"key": "service[333][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[334][service_type_id]",
													"value": "334",
													"type": "text"
												},
												{
													"key": "service[334][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[335][service_type_id]",
													"value": "335",
													"type": "text"
												},
												{
													"key": "service[335][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[336][service_type_id]",
													"value": "336",
													"type": "text"
												},
												{
													"key": "service[336][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[337][service_type_id]",
													"value": "337",
													"type": "text"
												},
												{
													"key": "service[337][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[338][service_type_id]",
													"value": "338",
													"type": "text"
												},
												{
													"key": "service[338][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[341][service_type_id]",
													"value": "341",
													"type": "text"
												},
												{
													"key": "service[341][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[342][service_type_id]",
													"value": "342",
													"type": "text"
												},
												{
													"key": "service[342][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[343][service_type_id]",
													"value": "343",
													"type": "text"
												},
												{
													"key": "service[343][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[344][service_type_id]",
													"value": "344",
													"type": "text"
												},
												{
													"key": "service[344][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[345][service_type_id]",
													"value": "345",
													"type": "text"
												},
												{
													"key": "service[345][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[346][service_type_id]",
													"value": "346",
													"type": "text"
												},
												{
													"key": "service[346][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[347][service_type_id]",
													"value": "347",
													"type": "text"
												},
												{
													"key": "service[347][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[348][service_type_id]",
													"value": "348",
													"type": "text"
												},
												{
													"key": "service[348][hidden]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "service[349][service_type_id]",
													"value": "349",
													"type": "text"
												},
												{
													"key": "service[349][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[350][service_type_id]",
													"value": "350",
													"type": "text"
												},
												{
													"key": "service[350][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[351][service_type_id]",
													"value": "351",
													"type": "text"
												},
												{
													"key": "service[351][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[352][service_type_id]",
													"value": "352",
													"type": "text"
												},
												{
													"key": "service[352][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[353][service_type_id]",
													"value": "353",
													"type": "text"
												},
												{
													"key": "service[353][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[354][service_type_id]",
													"value": "354",
													"type": "text"
												},
												{
													"key": "service[354][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[355][service_type_id]",
													"value": "355",
													"type": "text"
												},
												{
													"key": "service[355][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[356][service_type_id]",
													"value": "356",
													"type": "text"
												},
												{
													"key": "service[356][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[357][service_type_id]",
													"value": "357",
													"type": "text"
												},
												{
													"key": "service[357][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[358][service_type_id]",
													"value": "358",
													"type": "text"
												},
												{
													"key": "service[358][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[359][service_type_id]",
													"value": "359",
													"type": "text"
												},
												{
													"key": "service[359][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[360][service_type_id]",
													"value": "360",
													"type": "text"
												},
												{
													"key": "service[360][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[361][service_type_id]",
													"value": "361",
													"type": "text"
												},
												{
													"key": "service[361][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[362][service_type_id]",
													"value": "362",
													"type": "text"
												},
												{
													"key": "service[362][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[363][service_type_id]",
													"value": "363",
													"type": "text"
												},
												{
													"key": "service[363][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[364][service_type_id]",
													"value": "364",
													"type": "text"
												},
												{
													"key": "service[364][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[365][service_type_id]",
													"value": "365",
													"type": "text"
												},
												{
													"key": "service[365][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[366][service_type_id]",
													"value": "366",
													"type": "text"
												},
												{
													"key": "service[366][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[367][service_type_id]",
													"value": "367",
													"type": "text"
												},
												{
													"key": "service[367][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[368][service_type_id]",
													"value": "368",
													"type": "text"
												},
												{
													"key": "service[368][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[369][service_type_id]",
													"value": "369",
													"type": "text"
												},
												{
													"key": "service[369][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[370][service_type_id]",
													"value": "370",
													"type": "text"
												},
												{
													"key": "service[370][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[371][service_type_id]",
													"value": "371",
													"type": "text"
												},
												{
													"key": "service[371][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[372][service_type_id]",
													"value": "372",
													"type": "text"
												},
												{
													"key": "service[372][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[373][service_type_id]",
													"value": "373",
													"type": "text"
												},
												{
													"key": "service[373][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[374][service_type_id]",
													"value": "374",
													"type": "text"
												},
												{
													"key": "service[374][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[375][service_type_id]",
													"value": "375",
													"type": "text"
												},
												{
													"key": "service[375][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[376][service_type_id]",
													"value": "376",
													"type": "text"
												},
												{
													"key": "service[376][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[377][service_type_id]",
													"value": "377",
													"type": "text"
												},
												{
													"key": "service[377][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[378][service_type_id]",
													"value": "378",
													"type": "text"
												},
												{
													"key": "service[378][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[379][service_type_id]",
													"value": "379",
													"type": "text"
												},
												{
													"key": "service[379][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[382][service_type_id]",
													"value": "382",
													"type": "text"
												},
												{
													"key": "service[382][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[383][service_type_id]",
													"value": "383",
													"type": "text"
												},
												{
													"key": "service[383][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[384][service_type_id]",
													"value": "384",
													"type": "text"
												},
												{
													"key": "service[384][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[385][service_type_id]",
													"value": "385",
													"type": "text"
												},
												{
													"key": "service[385][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[386][service_type_id]",
													"value": "386",
													"type": "text"
												},
												{
													"key": "service[386][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[387][service_type_id]",
													"value": "387",
													"type": "text"
												},
												{
													"key": "service[387][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[388][service_type_id]",
													"value": "388",
													"type": "text"
												},
												{
													"key": "service[388][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[389][service_type_id]",
													"value": "389",
													"type": "text"
												},
												{
													"key": "service[389][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[390][service_type_id]",
													"value": "390",
													"type": "text"
												},
												{
													"key": "service[390][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[391][service_type_id]",
													"value": "391",
													"type": "text"
												},
												{
													"key": "service[391][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[392][service_type_id]",
													"value": "392",
													"type": "text"
												},
												{
													"key": "service[392][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[393][service_type_id]",
													"value": "393",
													"type": "text"
												},
												{
													"key": "service[393][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[394][service_type_id]",
													"value": "394",
													"type": "text"
												},
												{
													"key": "service[394][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[395][service_type_id]",
													"value": "395",
													"type": "text"
												},
												{
													"key": "service[395][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[396][service_type_id]",
													"value": "396",
													"type": "text"
												},
												{
													"key": "service[396][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[397][service_type_id]",
													"value": "397",
													"type": "text"
												},
												{
													"key": "service[397][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[398][service_type_id]",
													"value": "398",
													"type": "text"
												},
												{
													"key": "service[398][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[399][service_type_id]",
													"value": "399",
													"type": "text"
												},
												{
													"key": "service[399][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[400][service_type_id]",
													"value": "400",
													"type": "text"
												},
												{
													"key": "service[400][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[401][service_type_id]",
													"value": "401",
													"type": "text"
												},
												{
													"key": "service[401][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[402][service_type_id]",
													"value": "402",
													"type": "text"
												},
												{
													"key": "service[402][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[403][service_type_id]",
													"value": "403",
													"type": "text"
												},
												{
													"key": "service[403][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[404][service_type_id]",
													"value": "404",
													"type": "text"
												},
												{
													"key": "service[404][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[405][service_type_id]",
													"value": "405",
													"type": "text"
												},
												{
													"key": "service[405][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[406][service_type_id]",
													"value": "406",
													"type": "text"
												},
												{
													"key": "service[406][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[407][service_type_id]",
													"value": "407",
													"type": "text"
												},
												{
													"key": "service[407][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[408][service_type_id]",
													"value": "408",
													"type": "text"
												},
												{
													"key": "service[408][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[409][service_type_id]",
													"value": "409",
													"type": "text"
												},
												{
													"key": "service[409][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[410][service_type_id]",
													"value": "410",
													"type": "text"
												},
												{
													"key": "service[410][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[411][service_type_id]",
													"value": "411",
													"type": "text"
												},
												{
													"key": "service[411][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[412][service_type_id]",
													"value": "412",
													"type": "text"
												},
												{
													"key": "service[412][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[413][service_type_id]",
													"value": "413",
													"type": "text"
												},
												{
													"key": "service[413][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[414][service_type_id]",
													"value": "414",
													"type": "text"
												},
												{
													"key": "service[414][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[415][service_type_id]",
													"value": "415",
													"type": "text"
												},
												{
													"key": "service[415][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[416][service_type_id]",
													"value": "416",
													"type": "text"
												},
												{
													"key": "service[416][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[417][service_type_id]",
													"value": "417",
													"type": "text"
												},
												{
													"key": "service[417][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[423][service_type_id]",
													"value": "423",
													"type": "text"
												},
												{
													"key": "service[423][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "service[424][service_type_id]",
													"value": "424",
													"type": "text"
												},
												{
													"key": "service[424][hidden]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_types[1][value]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_types[2][value]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "car_types[3][value]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "car_types[4][value]",
													"value": "4",
													"type": "text"
												},
												{
													"key": "car_types[5][value]",
													"value": "5",
													"type": "text"
												},
												{
													"key": "car_types[6][value]",
													"value": "6",
													"type": "text"
												},
												{
													"key": "car_types[8][value]",
													"value": "8",
													"type": "text"
												},
												{
													"key": "car_types[9][value]",
													"value": "9",
													"type": "text"
												},
												{
													"key": "car_types[10][value]",
													"value": "10",
													"type": "text"
												},
												{
													"key": "car_types[11][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "car_types[12][value]",
													"value": "12",
													"type": "text"
												},
												{
													"key": "car_types[13][value]",
													"value": "13",
													"type": "text"
												},
												{
													"key": "car_types[14][value]",
													"value": "14",
													"type": "text"
												},
												{
													"key": "car_types[15][value]",
													"value": "15",
													"type": "text"
												},
												{
													"key": "car_types[16][value]",
													"value": "16",
													"type": "text"
												},
												{
													"key": "car_types[17][value]",
													"value": "17",
													"type": "text"
												},
												{
													"key": "car_types[18][value]",
													"value": "18",
													"type": "text"
												},
												{
													"key": "car_types[19][value]",
													"value": "19",
													"type": "text"
												},
												{
													"key": "car_types[20][value]",
													"value": "20",
													"type": "text"
												},
												{
													"key": "car_types[21][value]",
													"value": "21",
													"type": "text"
												},
												{
													"key": "car_types[22][value]",
													"value": "22",
													"type": "text"
												},
												{
													"key": "car_types[23][value]",
													"value": "23",
													"type": "text"
												},
												{
													"key": "car_types[24][value]",
													"value": "24",
													"type": "text"
												},
												{
													"key": "car_types[25][value]",
													"value": "25",
													"type": "text"
												},
												{
													"key": "car_types[26][value]",
													"value": "26",
													"type": "text"
												},
												{
													"key": "car_types[27][value]",
													"value": "27",
													"type": "text"
												},
												{
													"key": "car_types[28][value]",
													"value": "28",
													"type": "text"
												},
												{
													"key": "car_types[29][value]",
													"value": "29",
													"type": "text"
												},
												{
													"key": "car_types[30][value]",
													"value": "30",
													"type": "text"
												},
												{
													"key": "car_types[31][value]",
													"value": "31",
													"type": "text"
												},
												{
													"key": "car_types[32][value]",
													"value": "32",
													"type": "text"
												},
												{
													"key": "car_types[33][value]",
													"value": "33",
													"type": "text"
												},
												{
													"key": "car_types[35][value]",
													"value": "35",
													"type": "text"
												},
												{
													"key": "car_types[36][value]",
													"value": "36",
													"type": "text"
												},
												{
													"key": "car_types[37][value]",
													"value": "37",
													"type": "text"
												},
												{
													"key": "car_types[38][value]",
													"value": "38",
													"type": "text"
												},
												{
													"key": "car_types[39][value]",
													"value": "39",
													"type": "text"
												},
												{
													"key": "car_types[40][value]",
													"value": "40",
													"type": "text"
												},
												{
													"key": "car_types[41][value]",
													"value": "41",
													"type": "text"
												},
												{
													"key": "car_types[42][value]",
													"value": "42",
													"type": "text"
												},
												{
													"key": "car_types[43][value]",
													"value": "43",
													"type": "text"
												},
												{
													"key": "car_types[44][value]",
													"value": "44",
													"type": "text"
												},
												{
													"key": "car_types[45][value]",
													"value": "45",
													"type": "text"
												},
												{
													"key": "car_types[46][value]",
													"value": "46",
													"type": "text"
												},
												{
													"key": "car_types[47][value]",
													"value": "47",
													"type": "text"
												},
												{
													"key": "car_types[48][value]",
													"value": "48",
													"type": "text"
												},
												{
													"key": "car_types[49][value]",
													"value": "49",
													"type": "text"
												},
												{
													"key": "car_types[50][value]",
													"value": "50",
													"type": "text"
												},
												{
													"key": "car_types[215][value]",
													"value": "215",
													"type": "text"
												},
												{
													"key": "car_types[219][value]",
													"value": "219",
													"type": "text"
												},
												{
													"key": "car_types[264][value]",
													"value": "264",
													"type": "text"
												},
												{
													"key": "car_statuses[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "car_statuses[1]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "car_statuses[2]",
													"value": "4",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/admin/companies/64",
											"host": [
												"{{4443}}"
											],
											"path": [
												"admin",
												"companies",
												"64"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"pm.collectionVariables.set(\"mileage\", 20000);",
													"console.log(pm.collectionVariables.get(\"mileage\"))",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id\",responseJson.data[0].car_type.id)",
													"// pm.collectionVariables.set(\"user_id\",responseJson.data[0].holder.id)",
													"console.log(\"car_type_id = \"+(pm.collectionVariables.get(\"car_type_id\")))",
													"// console.log(pm.collectionVariables.get(\"user_id\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=van&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "van"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id#2\",responseJson.data[0].car_type.id)",
													"console.log(\"car_type_id = \"+(pm.collectionVariables.get(\"car_type_id#2\")))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=Cargo+Van&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "Cargo+Van"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Car_type #3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"car_type_id#3\",responseJson.data[0].car_type.id)",
													"console.log(\"car_type_id = \"+(pm.collectionVariables.get(\"car_type_id#3\")))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('user_id');",
													"    pm.expect(responseJson.data[0].model).to.be.an('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car_type=Passenger&sort=&order=asc&page=1&group_id=&_include=issues,groups,holder,carStatus,car_type",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car_type",
													"value": "Passenger"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												},
												{
													"key": "_include",
													"value": "issues,groups,holder,carStatus,car_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/users?name=? - Recive ID Freddie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"user_id\",responseJson.data[0].id)",
													"console.log(\"user_id = \"+pm.collectionVariables.get(\"user_id\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Freddie&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Freddie"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/users?name=? - Recive ID Chuck",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"user_id#2\",responseJson.data[0].id)",
													"console.log(\"user_id#2 = \"+pm.collectionVariables.get(\"user_id#2\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Chuck&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Chuck"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Recive ID Eddie & ID Team",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"group_id\",responseJson.data[0].groups[0].group_id)",
													"pm.collectionVariables.set(\"user_id_without-perm\",responseJson.data[0].id)",
													"console.log(\"group_id = \"+pm.collectionVariables.get(\"group_id\"))",
													"console.log(\"user_id_without-perm = \"+pm.collectionVariables.get(\"user_id_without-perm\"))",
													"",
													"pm.test(\"Receive list of all active fleet cars  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('first_name');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/users?name=Halen&order=desc&page=1&",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"users"
											],
											"query": [
												{
													"key": "name",
													"value": "Halen"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/status/active - Select Car #3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"if (responseJson.data[0]){",
													"    pm.collectionVariables.set(\"car_id_resolve\", responseJson.data[0].id);",
													"}",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/status/active?car={{VIN}}&sort=&order=asc&page=1&group_id=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"status",
												"active"
											],
											"query": [
												{
													"key": "car",
													"value": "{{VIN}}"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "group_id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/cars/16489/remove -Delete car",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/cars/{{car_id_resolve}}/remove",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"cars",
												"{{car_id_resolve}}",
												"remove"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars - Create car",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"// console.log(responseJson.data.id)",
													"pm.collectionVariables.set(\"car_id_resolve\", responseJson.data.id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a(\"number\");",
													"    pm.expect(responseJson.data.car_model_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"year\":\"\",\n\"make\":\"\",\n\"model\":\"\",\n\"trim\":\"\",\n\"id\":\"\",\n\"car_status_id\":1,\n\"pictureLoaded\":\"\",\n\"car_type_id\":45,\n\"vin\":\"{{VIN}}\",\n\"engine\":\"\",\n\"chassis\":\"\",\n\"notes\":\"string\",\n\"hours\":\"\",\n\"seriaNubmer\":\"\",\n\"purchase_at\":\"2020-01-01\",\n\"nickname\":\"Car #3\",\n\"group\":\"\",\n\"mileage\":20000,\n\"extra_notes\":\"string\",\n\"groups\":[532],\n\"license_plate\":\"SV27148\",\n\"picture\":\"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars"
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"// console.log(\"---- \"+responseJson.data[0])",
													"// console.log(responseJson.data.length)",
													"// console.log(responseJson.data[0].id)",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"//  console.log(responseJson.request_id);",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "151",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "02000.2",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "020002",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43264",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.74515",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GFH8IV5c][value]",
													"value": "Not Damaged or Defective",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qZVO1L4f][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ZQwbcA4F][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[nR9vgteo][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5WtfNkTm][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0H5yxSAZ][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[vWIhsunm][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[fxPL2Ivg][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[a9q9eWsv][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vTxNzEdU][value]",
													"value": "232828",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[3].issue_id);",
													"",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=date&order=desc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "date"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"// console.log(\"---- \"+responseJson.data[0])",
													"// console.log(responseJson.data.length)",
													"// console.log(responseJson.data[0].id)",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"//  console.log(responseJson.request_id);",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "153",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "02000.2",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "020002",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43272",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.7449",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[l4RnHUPQ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[ss7Ux58o][value]",
													"value": "232830",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[sBtsLQvJ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[4r8DSbp3][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[PxOvds8k][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[UGPQ7ZsN][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{car}/issues? - filtem by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"let j =0;",
													"for (let i=0; i<responseJson.length; i++){",
													"    if (responseJson[i].status!=0){",
													"        j++;",
													"    }",
													"}",
													"",
													"pm.test(\"Check dublikation of issues\", function () {",
													"    pm.expect(pm.collectionVariables.get(\"issues_question\")).to.be.equal(responseJson[0].label.slice(0));",
													"    // pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"});",
													" ",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.length-j).to.be.equal(1);",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&issue={{issues_question}}&sort=service_type&order=desc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "issue",
													"value": "{{issues_question}}"
												},
												{
													"key": "sort",
													"value": "service_type"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=date&order=desc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "date"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow\n- Login to Admin panel\n- Turn off Maintenance\n- Login\n- Create car by VIN\n- Select inspections  Pre- inspection\n- Start inspections  Pre- inspection\n- Finish inspection  Pre- inspection\n- Recive list of inspections\n- Select inspections  Post- inspection\n- Start inspections  Post- inspection\n- Finish inspection  Post- inspection\n- Recive list of inspections and check duplicate\n- Recive list of inspections and save ID of 10 issues\n\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "2 ХхХХХХХХХХХХХхххХХХХХХххХХХ Copy",
							"item": [
								{
									"name": "/userApi/fleets/login",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// function randomInteger(min, max) {",
													"//   // получить случайное число от (min-0.5) до (max+0.5)",
													"//   let rand = min - 0.5 + Math.random() * (max - min + 1);",
													"//   return Math.round(rand);",
													"// }",
													"// console.log(Number(pm.collectionVariables.get(\"mileage\"))+randomInteger(100,150))",
													"// // pm.collectionVariables.set(\"mileage\",pm.collectionVariables.get(\"mileage\")+randomInteger(100,150))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.car.id).to.be.a(\"number\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "151",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43264",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.74515",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GFH8IV5c][value]",
													"value": "Not Damaged or Defective",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qZVO1L4f][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ZQwbcA4F][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[nR9vgteo][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5WtfNkTm][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0H5yxSAZ][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[vWIhsunm][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ABMI1HYe][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[fxPL2Ivg][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[a9q9eWsv][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[vTxNzEdU][value]",
													"value": "232828",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=days&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests - Service Started (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p4&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p4"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/api/admin/requests -  Provider Arrived (fleet)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"const postRequest = {",
													"    url: pm.collectionVariables.get(\"4443\")+\"/admin/requestCancel/\",",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'X-Foo': 'bar',",
													"        // 'Authorization': \"Bearer \" + pm.collectionVariables.get(\"API_keys_Admin_Sergii\"),",
													"        // 'Cookie': pm.collectionVariables.get(\"cookies-token\")",
													"    },",
													"    body: {",
													"    }",
													"};",
													"",
													"postman.setGlobalVariable(\"globalFunction\", (request_id) => {",
													"    pm.sendRequest(postRequest.url + request_id , (error, response) => {              ",
													"    });",
													"});",
													"",
													"if(responseJson.data.length){",
													"     eval(globals.globalFunction)(responseJson.data[0].id );",
													"}",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/api/admin/requests?sort=id&order=desc&id=&uuid=&user_name={{fleet_sand}}&company_name=&provider_name=&status=s2p3&service_type_id=&request_type=&service_type_system_name=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"api",
												"admin",
												"requests"
											],
											"query": [
												{
													"key": "sort",
													"value": "id"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "uuid",
													"value": ""
												},
												{
													"key": "user_name",
													"value": "{{fleet_sand}}"
												},
												{
													"key": "company_name",
													"value": ""
												},
												{
													"key": "provider_name",
													"value": ""
												},
												{
													"key": "status",
													"value": "s2p3"
												},
												{
													"key": "service_type_id",
													"value": ""
												},
												{
													"key": "request_type",
													"value": ""
												},
												{
													"key": "service_type_system_name",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect  - Schedule an inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"//  console.log(responseJson.request_id);",
													"pm.collectionVariables.set(\"request_id_fleet\", responseJson.request_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.car.id).to.be.a(\"number\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "car",
													"value": "{{car_id_resolve}}",
													"type": "text"
												},
												{
													"key": "latitude",
													"value": "46.4539332",
													"type": "text"
												},
												{
													"key": "longitude",
													"value": "30.7433664",
													"type": "text"
												},
												{
													"key": "service_type",
													"value": "153",
													"type": "text"
												},
												{
													"key": "to_garage",
													"value": "1",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/start - Start inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.type).to.be.a(\"string\");",
													"    pm.expect(responseJson.request_id).to.be.a(\"string\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function randomInteger(min, max) {",
													"  // получить случайное число от (min-0.5) до (max+0.5)",
													"  let rand = min - 0.5 + Math.random() * (max - min + 1);",
													"  return Math.round(rand);",
													"}",
													"",
													"console.log(Number(pm.collectionVariables.get(\"mileage\"))+randomInteger(100,150));",
													" pm.collectionVariables.set(\"mileage\",Number(pm.collectionVariables.get(\"mileage\"))+randomInteger(100,150));",
													"",
													" function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "aatg_mode",
													"value": "1",
													"type": "text"
												},
												{
													"key": "answers[default_1]",
													"value": "SV27148",
													"type": "text"
												},
												{
													"key": "car_model_id",
													"value": "Other",
													"type": "text"
												},
												{
													"key": "country",
													"value": "UA",
													"type": "text"
												},
												{
													"key": "hours",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "previous_answers",
													"value": "1",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "transmission",
													"value": "2",
													"type": "text"
												},
												{
													"key": "vin",
													"value": "{{VIN}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "46.43272",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "30.7449",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/start",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"start"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/inspect/issues - Finish inspection 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.request_id).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "answers[7KPImg5R][value]",
													"value": "11",
													"type": "text"
												},
												{
													"key": "answers[S90sKyA2][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V2rr8vjL][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[JEm0oXe0][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CsgyXQac][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vnZIFC7a][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[Sm1lfiqV][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[l4RnHUPQ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[U1xbjFyP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PcK13MkV][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[ss7Ux58o][value]",
													"value": "232830",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[f6hWxVey][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[n8bpxP1b][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[PqV6ds9R][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yCQBXulJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[SjAzI6PG][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0snCUDnN][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[5Z55ic81][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X4mQvjJl][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[XKzWJOhO][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[YQ6YLnvI][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MpHZlCIp][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[sBtsLQvJ][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elEcK88O][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aD0zrgxC][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kl4jMqDE][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[X1PzGTPF][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[V1ZWsvu8][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[YU0PwXDh][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gwzNMBp0][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[k4fcikos][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0I844ZAe][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4IjHFBTh][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[k0MFwcl2][value]",
													"value": "No",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qD8Ck7hU][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[0DqCWuVm][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gmsh6huv][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[nE4sOKcz][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[AtVQA9Nz][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8k3u6d5T][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[vO7QQISD][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CPPYU62n][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[2QYsFMhu][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RS2uXxeq][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CK9UeKJb][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[kYYy5KgP][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RtX8OzgP][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MtFaCeKK][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[ssY0ksuB][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[zasxiV8u][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WRf6GDDF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[elBG9zLG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[GtFHTTIb][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[CUps1aBP][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[4r8DSbp3][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[rPspQ1l1][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[K5mAyBXX][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[qlNYoNqf][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[RhSvUb6E][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[NdBz5CwN][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[4qv74GlP][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[WQ9k5NCS][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[MKebTqis][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[IAeHjlJT][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[d0WS9ieI][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[PxOvds8k][value]",
													"value": "Full",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[aYsQSBEH][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[9STBA92L][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[UGPQ7ZsN][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[QK885tyX][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[URUZrh3x][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[pb7RbncD][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oRCMwKdX][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[0DMyTo2N][value]",
													"value": "Yes",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[8LYEQ7AK][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gvPRCzWF][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[LUnLtTdJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[yuLznYag][value]",
													"value": "The Light Is Flashing",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tse4ThIT][value]",
													"value": "Bald",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[S50snV6t][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[p2hvXPCW][value]",
													"value": "Doesn't Stay Open",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[y9Z2U2xC][value]",
													"value": "Crack",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[tfLbxPbJ][value]",
													"value": "Cracked / Broken",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[gsMF0viG][value]",
													"value": "Dents",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[oCf2EdzP][value]",
													"value": "Chip",
													"type": "text"
												},
												{
													"key": "answers[LksMb24o][value]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][comment]",
													"value": "",
													"type": "text"
												},
												{
													"key": "answers[s2RgOGqg][value]",
													"value": "Missing",
													"type": "text"
												},
												{
													"key": "is_issues",
													"value": "0",
													"type": "text"
												},
												{
													"key": "request_id",
													"value": "{{request_id_fleet}}",
													"type": "text"
												},
												{
													"key": "xlatitude",
													"value": "0.0",
													"type": "text"
												},
												{
													"key": "xlongitude",
													"value": "0.0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{car_id_resolve}/issues? - filtem by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"let j =0;",
													"for (let i=0; i<responseJson.length; i++){",
													"    if (responseJson[i].status!=0){",
													"        j++;",
													"    }",
													"}",
													"",
													"pm.test(\"Check dublikation of issues\", function () {",
													"    pm.expect(pm.collectionVariables.get(\"issues_question\")).to.be.equal(responseJson[0].label.slice(0));",
													"    // pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"});",
													" ",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.length-j).to.be.equal(1);",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													"",
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&issue={{issues_question}}&sort=service_type&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "issue",
													"value": "{{issues_question}}"
												},
												{
													"key": "sort",
													"value": "service_type"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/issues - Select list of issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"todeyDate\", moment().format(\"YYYY-MM-DD\"));",
													"pm.collectionVariables.set(\"previousDate\", moment().subtract(1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&sort=days&order=asc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow\n- Login to Admin panel\n- Turn off Maintenance\n- Login\n- Create car by VIN\n- Select inspections  Pre- inspection\n- Start inspections  Pre- inspection\n- Finish inspection  Pre- inspection\n- Recive list of inspections\n- Select inspections  Post- inspection\n- Start inspections  Post- inspection\n- Finish inspection  Post- inspection\n- Recive list of inspections and check duplicate\n- Recive list of inspections and save ID of 10 issues\n\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "3 Creating template maintenance",
							"item": [
								{
									"name": "/fleets/maintenance/list?",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"if (responseJson.data[0]){",
													"    pm.collectionVariables.set(\"parent_id\", responseJson.data[0].id);",
													"}",
													"",
													"",
													"pm.test(\"Creating template maintenance\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('estimate_cost');",
													"    pm.expect(responseJson.data[0].name).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/list?type=Car+Wash&sort=&order=desc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"list"
											],
											"query": [
												{
													"key": "type",
													"value": "Car+Wash"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/maintenance/{parent_id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/{{parent_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"{{parent_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/maintenance/",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"parent_id\", responseJson.data.id);",
													" ",
													"",
													"pm.test(\"Creating template maintenance\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('estimate_cost');",
													"    pm.expect(responseJson.data.name).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"name\":\"Car Wash\",\"follows\":{\"car_types\":[{{car_type_id}},{{car_type_id#2}},{{car_type_id#3}}]},\"icon_id\":{{icon_id}},\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]},\"id\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/maintenance/{parent_id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"name\":\"Car Wash\",\"follows\":{\"car_types\":[3,6,45]},\"icon_id\":226884,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]},\"id\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/{{parent_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"{{parent_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/maintenance/",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"parent_id\", responseJson.data.id);",
													" ",
													"",
													"pm.test(\"Creating template maintenance\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('estimate_cost');",
													"    pm.expect(responseJson.data.name).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"name\":\"Car Wash\",\"follows\":{\"car_types\":[{{car_type_id}},{{car_type_id#2}},{{car_type_id#3}}]},\"icon_id\":{{icon_id}},\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]},\"id\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/maintenance/{{parent_id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"parent_id\", responseJson.data.id);",
													" ",
													"",
													" pm.collectionVariables.set(\"estimate_cost\", responseJson.data.estimate_cost);",
													"",
													"",
													"pm.test(\"Creating template maintenance\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('estimate_cost');",
													"    pm.expect(responseJson.data.name).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"name\":\"Car Wash\",\"follows\":{\"car_types\":[{{car_type_id}},{{car_type_id#2}},{{car_type_id#3}},7]},\"icon_id\":{{icon_id}},\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]},\"id\":730}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/{{parent_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"{{parent_id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "4 Plan Maintenance - Delete - Update",
							"item": [
								{
									"name": "/fleets/maintenance/schedule/",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('estimate_cost');",
													"    pm.expect(responseJson.data.name).to.be.a('string');",
													"    pm.expect(responseJson.data.start_at).to.equal(pm.collectionVariables.get(\"tomorrowDate\"));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.notify).to.be.equal(true);",
													"    pm.expect(responseJson.data.estimate_cost).to.be.equal(pm.collectionVariables.get(\"estimate_cost\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"notify\": true,\"parent_id\":{{parent_id}},\"start_at\":\"{{tomorrowDate}}\",\"follows\":{\"cars\":[\"{{car_id_resolve}}\"],\"all\":false},\"expressions\":[{\"type\":\"every\",\"params\":\"1m\"}],\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/schedule/",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"schedule",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"if (!responseJson.data.length){",
													"   console.log(\"!!!!!!!!  Emptee request or Doesn't plan Maintanence   !!!!!!!!\") ",
													"}",
													"",
													"",
													" pm.collectionVariables.set(\"planed_id[0]\", responseJson.data[0].id);",
													"",
													" pm.collectionVariables.set(\"maintenance_id\", responseJson.data[0].maintenance.id);",
													" pm.collectionVariables.set(\"parent_id\", responseJson.data[0].maintenance.parent_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson.data).to.be.an(\"Array\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(4000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?sort=&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"maintenance",
												"schedulers",
												"list"
											],
											"query": [
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/maintenance/schedulers/{{planed_id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[1]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/schedulers/{{planed_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"schedulers",
												"{{planed_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/maintenance/schedulers/{{maintenance_id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson.data).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\":\"{{parent_id}}\",\"follows\":{\"cars\":[\"{{car_id_resolve}}\"],\"all\":false},\"expressions\":[],\"includes\":{}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/schedule/{{maintenance_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"schedule",
												"{{maintenance_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/maintenance/schedule/ by DATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('estimate_cost');",
													"    pm.expect(responseJson.data.name).to.be.a('string');",
													"    pm.expect(responseJson.data.start_at).to.equal(pm.collectionVariables.get(\"tomorrowDate\"));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.notify).to.be.equal(false);",
													"    pm.expect(responseJson.data.estimate_cost).to.be.equal(pm.collectionVariables.get(\"estimate_cost\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"notify\": false,\"parent_id\":{{parent_id}},\"start_at\":\"{{tomorrowDate}}\",\"follows\":{\"cars\":[\"{{car_id_resolve}}\"],\"all\":false},\"expressions\":[{\"type\":\"every\",\"params\":\"1m\"}],\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/schedule/",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"schedule",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"if (!responseJson.data.length){",
													"   console.log(\"!!!!!!!!  Emptee request or Doesn't plan Maintanence   !!!!!!!!\") ",
													"}",
													"",
													"",
													" pm.collectionVariables.set(\"planed_id[0]\", responseJson.data[0].id);",
													"",
													" pm.collectionVariables.set(\"maintenance_id\", responseJson.data[0].maintenance.id);",
													" pm.collectionVariables.set(\"parent_id\", responseJson.data[0].maintenance.parent_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson.data).to.be.an(\"Array\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(4000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?maintenance=Car+Wash&sort=&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"maintenance",
												"schedulers",
												"list"
											],
											"query": [
												{
													"key": "maintenance",
													"value": "Car+Wash"
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/maintenance/schedule/{{maintenance_id}} №1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('estimate_cost');",
													"    pm.expect(responseJson.data.name).to.be.a('string');",
													"    pm.expect(responseJson.data.start_at).to.equal(pm.collectionVariables.get(\"tomorrowDate\"));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"parent_id\":{{parent_id}},\"start_at\":\"{{tomorrowDate}}\",\"follows\":{\"cars\":[\"{{car_id_resolve}}\"],\"all\":false},\"expressions\":[{\"type\":\"every\",\"params\":\"1w\"}],\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/schedule/{{maintenance_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"schedule",
												"{{maintenance_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/maintenance/schedule/ by MILES",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('estimate_cost');",
													"    pm.expect(responseJson.data.name).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.notify).to.be.equal(true);",
													"    pm.expect(responseJson.data.estimate_cost).to.be.equal(pm.collectionVariables.get(\"estimate_cost\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\n{\"notify\": true,\"parent_id\":{{parent_id}},\"follows\":{\"cars\":[\"{{car_id_resolve}}\"],\"all\":false},\"expressions\":[{\"type\":\"every_odometer\",\"params\":\"1000\",\"notify\":200}],\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/maintenance/schedule/",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"maintenance",
												"schedule",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"if (!responseJson.data.length){",
													"   console.log(\"!!!!!!!!  Emptee request or Doesn't update Maintanence   !!!!!!!!\") ",
													"}",
													"",
													" pm.collectionVariables.set(\"planed_id[0]\", responseJson.data[0].id);",
													" pm.collectionVariables.set(\"planed_id[1]\", responseJson.data[1].id);",
													" pm.collectionVariables.set(\"planed_id[2]\", responseJson.data[2].id);",
													" pm.collectionVariables.set(\"planed_id[3]\", responseJson.data[3].id);",
													" pm.collectionVariables.set(\"planed_id[4]\", responseJson.data[4].id);",
													" pm.collectionVariables.set(\"planed_id[5]\", responseJson.data[5].id);",
													" pm.collectionVariables.set(\"planed_id[6]\", responseJson.data[6].id);",
													" pm.collectionVariables.set(\"planed_id[7]\", responseJson.data[7].id);",
													" pm.collectionVariables.set(\"planed_id[8]\", responseJson.data[8].id);",
													" pm.collectionVariables.set(\"planed_id[9]\", responseJson.data[9].id);",
													"",
													"",
													"",
													" pm.collectionVariables.set(\"maintenance_id\", responseJson.data[0].maintenance.id);",
													" pm.collectionVariables.set(\"parent_id\", responseJson.data[0].maintenance.parent_id);",
													"",
													"// console.log(\"maintenance_id = \"+pm.collectionVariables.get(\"maintenance_id\"))",
													"// console.log(\"parent_id = \"+pm.collectionVariables.get(\"parent_id\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson.data).to.be.an(\"Array\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(4000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?maintenance=&sort=&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"maintenance",
												"schedulers",
												"list"
											],
											"query": [
												{
													"key": "maintenance",
													"value": ""
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Delete WO\n- Create WO \n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolve WO\n\n- Create WO \n- Resolwe WO without Assing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "5 Assing-mail-resolve / Resolve without assign",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work-order_id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/work-order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data[0].id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data[0].total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data[0].maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data[0]).to.have.any.keys('id');",
													"    pm.expect(responseJson.data[0]).to.have.property('assign_email');",
													"    pm.expect(responseJson.data[0].status_string).to.be.a('string');",
													"    pm.expect(responseJson.data[0].status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/work-order?sort=&order=desc&page=1&status=",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"work-order"
											],
											"query": [
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "status",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}},\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes - approval WO 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 0 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"     pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"     pm.expect(responseJson.data.resolve.amount).to.be.eql(pm.collectionVariables.get(\"total_cost_mech\"));",
													"",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": " ",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": " ",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": " 11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing WO1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"     pm.expect(responseJson.data.resolve.amount).to.be.eql(pm.collectionVariables.get(\"total_cost\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Delete WO\n- Create WO \n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolve WO\n\n- Create WO \n- Resolwe WO without Assing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "6 Assing-Reject-Assing-Resolve",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[2]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[2]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"// console.log(pm.collectionVariables.get(\"work_order_id\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/reject  - Reject WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.updated_at).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"// console.log(pm.collectionVariables.get(\"work_order_id\"))",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":null}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}},\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 2 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Assing WO #1\n- Reject WO #1\n- Assing WO #2\n- Send Estimate\n- Approve Estimate\n- Reject WO #2\n- Assing WO #3\n- Send Estimate\n- Resolve WO \n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "7 Assing-Reject-Resolve",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[3]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[3]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/reject  - Reject WO 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.updated_at).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Assing WO\n- Reject WO\n- Resolwe WO without Assing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "8 Assing-User2-Reject-Resolve",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[4]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[4]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/reject  - Reject WO 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Assing WO\n- Login by another user\n- Reject WO by another user\n- Resolwe WO without Assing by another user\n- Login by default user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "9 Assing-User2-Reject-Assing-Resolve",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[5]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[5]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/reject  - Reject WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":null}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}},\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 5 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"mileage\", pm.collectionVariables.get(\"mileage\")-1);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Assing WO\n- Login by another user\n- Reject WO by another user\n- Assing WO by another user\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "10 Open OW-User2-Open issue-Assing-Resolve",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[6]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[6]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name}}\",\"assign_email\":\"{{assign_email}}\",\"assign_phone\":\"{{assign_phone}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":false,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}},\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes/approval - includes WO 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 6 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Open aditional info about issues\n- Login by another user\n- Open aditional info about issues\n- Assing WO by another user\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "11 Open OW-User2-Open issue-Resolve",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO7",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[7]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[7]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login  - Login User 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+3@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Freddie Mercury');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login#2}}\",\n    \"password\": \"{{pass#2}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}} - aditional info about issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - WO 7 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Open aditional info about issues\n- Login by another user\n- Open aditional info about issues\n- Resolwe WO \n- Login by default user\n\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "12 Our User: Open OW-Add issue-Assing-Estimate/Approve-Resolve   Copy",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[8]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[8]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/cars/{{car_id}}/issues/attachable?wo={{work_order_id}} - List of issues to add WO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"attach_issues_id[0]\", responseJson.data[0].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[1]\", responseJson.data[1].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[2]\", responseJson.data[2].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[3]\", responseJson.data[3].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[4]\", responseJson.data[4].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[5]\", responseJson.data[5].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[6]\", responseJson.data[6].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[7]\", responseJson.data[7].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data[0]).to.to.have.any.keys(['issue_id','type']);",
													"    pm.expect(responseJson.data[0]).to.have.property('uuid');",
													"    pm.expect(responseJson.success).to.be.equal(true);});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues/attachable?wo={{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues",
												"attachable"
											],
											"query": [
												{
													"key": "wo",
													"value": "{{work_order_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[2]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[2]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[2]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.globals.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_without-perm}}\",\"assign_email\":\"{{assign_email_without-perm}}\",\"assign_phone\":\"{{assign_phone_without-perm}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id_without-perm}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}},\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\",\"off\":1,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[2]}}\",\"off\":0,\"includes\":{}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes/approval - includes WO 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\"},{\"approved\":false,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[2]}}\"},{\"approved\":true,\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 8 resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.collectionVariables.set(\"message_mileage\", pm.collectionVariables.get(\"mileage\")+1);",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    console.log(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    pm.expect(responseJson.success).to.be.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 8  Resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"mileage\", pm.collectionVariables.get(\"mileage\")+1);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "13 External user: Open OW-Add issue-Assing-Estimate/Approve-Resolve   Copy",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[9]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[9]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/cars/{{car_id}}/issues/attachable?wo={{work_order_id}} - List of issues to add WO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"attach_issues_id[0]\", responseJson.data[0].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[1]\", responseJson.data[1].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[2]\", responseJson.data[2].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[3]\", responseJson.data[3].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[4]\", responseJson.data[4].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[5]\", responseJson.data[5].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[6]\", responseJson.data[6].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[7]\", responseJson.data[7].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data[0]).to.to.have.any.keys(['issue_id','type']);",
													"    pm.expect(responseJson.data[0]).to.have.property('uuid');",
													"    pm.expect(responseJson.success).to.be.equal(true);});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues/attachable?wo={{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues",
												"attachable"
											],
											"query": [
												{
													"key": "wo",
													"value": "{{work_order_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[2]}} - Add issues Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[2]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[2]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.globals.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_Outside}}\",\"assign_email\":\"{{assign_email_Outside}}\",\"assign_phone\":\"\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":\"\",\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}},\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\",\"off\":1,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[2]}}\",\"off\":0,\"includes\":{}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes/approval - includes WO 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\"},{\"approved\":false,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[2]}}\"},{\"approved\":true,\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing WO9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list? Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													" pm.collectionVariables.set(\"planed_id[0]\", responseJson.data[0].id);",
													" pm.collectionVariables.set(\"planed_id[1]\", responseJson.data[1].id);",
													" pm.collectionVariables.set(\"planed_id[2]\", responseJson.data[2].id);",
													" pm.collectionVariables.set(\"planed_id[3]\", responseJson.data[3].id);",
													" pm.collectionVariables.set(\"planed_id[4]\", responseJson.data[4].id);",
													" pm.collectionVariables.set(\"planed_id[5]\", responseJson.data[5].id);",
													" pm.collectionVariables.set(\"planed_id[6]\", responseJson.data[6].id);",
													" pm.collectionVariables.set(\"planed_id[7]\", responseJson.data[7].id);",
													" pm.collectionVariables.set(\"planed_id[8]\", responseJson.data[8].id);",
													" pm.collectionVariables.set(\"planed_id[9]\", responseJson.data[9].id);",
													"",
													"",
													"",
													" pm.collectionVariables.set(\"maintenance_id\", responseJson.data[0].maintenance.id);",
													" pm.collectionVariables.set(\"parent_id\", responseJson.data[0].maintenance.parent_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson.data).to.be.an(\"Array\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?maintenance=&sort=&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"maintenance",
												"schedulers",
												"list"
											],
											"query": [
												{
													"key": "maintenance",
													"value": ""
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "14 External user: Open OW-Add issue-Assing-Estimate/Approve-Resolve   Copy 2",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[9]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[9]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/cars/{{car_id}}/issues/attachable?wo={{work_order_id}} - List of issues to add WO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"attach_issues_id[0]\", responseJson.data[0].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[1]\", responseJson.data[1].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[2]\", responseJson.data[2].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[3]\", responseJson.data[3].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[4]\", responseJson.data[4].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[5]\", responseJson.data[5].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[6]\", responseJson.data[6].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[7]\", responseJson.data[7].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data[0]).to.to.have.any.keys(['issue_id','type']);",
													"    pm.expect(responseJson.data[0]).to.have.property('uuid');",
													"    pm.expect(responseJson.success).to.be.equal(true);});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues/attachable?wo={{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues",
												"attachable"
											],
											"query": [
												{
													"key": "wo",
													"value": "{{work_order_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[2]}} - Add issues Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[2]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[2]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.globals.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_Outside}}\",\"assign_email\":\"{{assign_email_Outside}}\",\"assign_phone\":\"\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":\"\",\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}},\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\",\"off\":1,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[2]}}\",\"off\":0,\"includes\":{}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes/approval - includes WO 10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\"},{\"approved\":false,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[2]}}\"},{\"approved\":true,\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "fleets/work-order/{{work_order_uuid}}/reject - Reject WO 10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/reject",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_id}}/resolve - Resolve without assing WO10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.created_at).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.status_string).to.be.equal(\"Resolved\");",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list? Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"planed_id[0]\", responseJson.data[0].id);",
													" pm.collectionVariables.set(\"planed_id[1]\", responseJson.data[1].id);",
													" pm.collectionVariables.set(\"planed_id[2]\", responseJson.data[2].id);",
													" pm.collectionVariables.set(\"planed_id[3]\", responseJson.data[3].id);",
													" pm.collectionVariables.set(\"planed_id[4]\", responseJson.data[4].id);",
													" pm.collectionVariables.set(\"planed_id[5]\", responseJson.data[5].id);",
													" pm.collectionVariables.set(\"planed_id[6]\", responseJson.data[6].id);",
													" pm.collectionVariables.set(\"planed_id[7]\", responseJson.data[7].id);",
													" pm.collectionVariables.set(\"planed_id[8]\", responseJson.data[8].id);",
													" pm.collectionVariables.set(\"planed_id[9]\", responseJson.data[9].id);",
													"",
													"",
													" pm.collectionVariables.set(\"maintenance_id\", responseJson.data[0].maintenance.id);",
													" pm.collectionVariables.set(\"parent_id\", responseJson.data[0].maintenance.parent_id);",
													"",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson.data).to.be.an(\"Array\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?maintenance=&sort=&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"maintenance",
												"schedulers",
												"list"
											],
											"query": [
												{
													"key": "maintenance",
													"value": ""
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "15 Our User: Open OW-Add issue-Assing-Estimate/Approve-Resolve   Copy 2",
							"item": [
								{
									"name": "/fleets/work-order/maintenance/schedulers/{{planed_id}} - WO11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost\", responseJson.data.total_cost);",
													"// console.log(\"total_cost = \"+pm.collectionVariables.get(\"total_cost\"))",
													"",
													"pm.collectionVariables.set(\"maintenance_id\", responseJson.data.maintenances[0].object.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/maintenance/schedulers/{{planed_id[8]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"maintenance",
												"schedulers",
												"{{planed_id[8]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/cars/{{car_id}}/issues/attachable?wo={{work_order_id}} - List of issues to add WO11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													" pm.collectionVariables.set(\"attach_issues_id[0]\", responseJson.data[0].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[1]\", responseJson.data[1].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[2]\", responseJson.data[2].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[3]\", responseJson.data[3].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[4]\", responseJson.data[4].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[5]\", responseJson.data[5].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[6]\", responseJson.data[6].issue_id);",
													" pm.collectionVariables.set(\"attach_issues_id[7]\", responseJson.data[7].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data[0]).to.to.have.any.keys(['issue_id','type']);",
													"    pm.expect(responseJson.data[0]).to.have.property('uuid');",
													"    pm.expect(responseJson.success).to.be.equal(true);});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues/attachable?wo={{work_order_id}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues",
												"attachable"
											],
											"query": [
												{
													"key": "wo",
													"value": "{{work_order_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[1]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[1]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[2]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{attach_issues_id[2]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{attach_issues_id[2]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_without-perm}}\",\"assign_email\":\"{{assign_email_without-perm}}\",\"assign_phone\":\"{{assign_phone_without-perm}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id_without-perm}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}},\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[1]}}\",\"off\":1,\"includes\":{}},{\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[2]}}\",\"off\":0,\"includes\":{}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes/approval - includes WO 11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[0]}}\"},{\"approved\":false,\"object_type\":\"issue\",\"object_id\":\"{{attach_issues_id[2]}}\"},{\"approved\":true,\"object_type\":\"maintenance\",\"object_id\":{{maintenance_id}}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 11  Resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"",
													"pm.collectionVariables.set(\"message_mileage\", pm.collectionVariables.get(\"mileage\")+1);",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    console.log(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    pm.expect(responseJson.success).to.be.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 11  Resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"mileage\", pm.collectionVariables.get(\"mileage\")+1);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{maintenance_id}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "maintenance",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{attach_issues_id[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "16 Our User: Open OW-Add issue-Assing-Estimate/Approve-Resolve   Copy 3",
							"item": [
								{
									"name": "/userApi/fleets/login - Login User 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"token_id\", responseJson.token);",
													"",
													"pm.test(\"Response time is less than 2400ms\", function () {",
													"    console.log(\"Response time is \"+pm.response.responseTime);",
													"    // pm.expect(pm.response.responseTime).to.be.below(2400);",
													"});",
													"",
													"pm.test(\"Create new user\", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson).to.have.any.keys('name');",
													"    pm.expect(responseJson).to.have.property('name');",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"    pm.expect(responseJson.email).to.have.lengthOf(22);",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"    pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"    pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"",
													"pm.test(\"To check if Value eql in the response \", () => {",
													"    pm.expect(responseJson.type).to.eql('fleet');",
													"     pm.expect(responseJson.email).to.eql(\"sergeyk+0@driveroo.com\"); ",
													"     pm.expect(responseJson.name).to.eql('Chuck Norris');",
													"    pm.expect(responseJson.email).not.eq(undefined); //To Check if Value is Null",
													"});",
													"pm.test(\"Check the type of properties\", () => {",
													"    pm.expect(responseJson.name).to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{pass}}\",\n    \"device_token\": \"73e879b8-eac0-46df-aa32-16bddadcebff\",\n    \"device_type\": \"web\",\n    \"login_by\": \"manual\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/login",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of open issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"  //  pm.expect(pm.collectionVariables.get(\"issues_issue_id\")).to.be.equal(responseJson[0].issue_id);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false,
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&status=0&sort=days&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "status",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Acknowledging #1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[0]}}/disable",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[0]}}",
												"disable"
											]
										}
									},
									"response": []
								},
								{
									"name": "Acknowledging #2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[1]}}/disable",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[1]}}",
												"disable"
											]
										}
									},
									"response": []
								},
								{
									"name": "Acknowledging #3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/issues/{{issues_id[2]}}/disable",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"issues",
												"{{issues_id[2]}}",
												"disable"
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of Acknowledging issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"AcknowledgingIssue[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"AcknowledgingIssue[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"AcknowledgingIssue[2]\", responseJson[2].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"",
													"});",
													"",
													"pm.test(\"Check JSON responce\", function () {",
													"    let responseJson = pm.response.json();",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"    pm.expect(responseJson.data.length).to.be.eql(3);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&status=10&service_type=&sort=days&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "status",
													"value": "10"
												},
												{
													"key": "service_type",
													"value": ""
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Vehicle Issue Report from dasboard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.status).to.be.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "issues[0][answer]",
													"value": "Brakes",
													"type": "text"
												},
												{
													"key": "issues[0][severity]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "issues[0][comment]",
													"value": "test_#1",
													"type": "text"
												},
												{
													"key": "issues[1][answer]",
													"value": "Cleanliness",
													"type": "text"
												},
												{
													"key": "issues[1][severity]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "issues[1][comment]",
													"value": "test_#2",
													"type": "text"
												},
												{
													"key": "issues[2][answer]",
													"value": "Climate Systems",
													"type": "text"
												},
												{
													"key": "issues[2][severity]",
													"value": "3",
													"type": "text"
												},
												{
													"key": "issues[2][comment]",
													"value": "test_#3",
													"type": "text"
												}
											],
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/inspect/issues",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"inspect",
												"issues"
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of create IssueFromDasboard issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													" pm.collectionVariables.set(\"IssueFromDasboard[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"IssueFromDasboard[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"IssueFromDasboard[2]\", responseJson[2].issue_id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"",
													"});",
													"",
													"pm.test(\"Check JSON responce\", function () {",
													"    let responseJson = pm.response.json();",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"    pm.expect(responseJson.data.length).to.be.eql(3);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													" function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false,
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&service_type={{IssueFromDasboard}}&sort=days&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "service_type",
													"value": "{{IssueFromDasboard}}"
												},
												{
													"key": "sort",
													"value": "days"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order #1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[3]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing #1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"approve_amount\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order #2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[4]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing #2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name#2}}\",\"assign_email\":\"{{login}}\",\"assign_phone\":\"{{assign_phone#2}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id#2}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"approve_amount\":\"\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order #3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[5]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of Assigned WO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"",
													"pm.test(\"Check JSON responce\", function () {",
													"    let responseJson = pm.response.json();",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"    pm.expect(responseJson.data.length).to.be.eql(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&status=1&sort=severity&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "status",
													"value": "1"
												},
												{
													"key": "sort",
													"value": "severity"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order #4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[6]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{issues_id[1]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{issues_id[7]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{issues_id[7]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{AcknowledgingIssue[2]}} - Add issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{AcknowledgingIssue[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{AcknowledgingIssue[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{{work_order_id}}/issues/{{IssueFromDasboard[3]}} - Add issues Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/issues/{{IssueFromDasboard[0]}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"issues",
												"{{IssueFromDasboard[0]}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/assign - Assing WO 11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_without-perm}}\",\"assign_email\":\"{{assign_email_without-perm}}\",\"assign_phone\":\"{{assign_phone_without-perm}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id_without-perm}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - includes WO 11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[6]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":2,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[7]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part1\",\"part_no\":\"1\",\"quantity\":1,\"price\":1,\"tax\":1}],\"2\":[{\"description\":\"Fix\",\"price\":1,\"tax\":1}],\"3\":[{\"description\":\"Tax\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{AcknowledgingIssue[0]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 3\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":12,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}},{\"object_type\":\"issue\",\"object_id\":\"{{IssueFromDasboard[0]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 4\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":22,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_id}/includes/approval - includes WO 11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.collectionVariables.set(\"total_cost_mech\",responseJson.data.total_cost );",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[6]}}\"},\n{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{issues_id[7]}}\"},{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{AcknowledgingIssue[0]}}\"},{\"approved\":true,\"object_type\":\"issue\",\"object_id\":\"{{IssueFromDasboard[0]}}\"}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/includes/approval",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"includes",
												"approval"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 11  Resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.collectionVariables.set(\"message_mileage\", pm.collectionVariables.get(\"mileage\")+1);",
													"  ",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.error_messages).to.be.eql(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    console.log(\"Mileage value cannot be smaller than \"+pm.collectionVariables.get(\"message_mileage\")+\" mi.\");",
													"    pm.expect(responseJson.success).to.be.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[7]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[6]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{AcknowledgingIssue[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{IssueFromDasboard[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{{work_order_uuid}}/resolve - WO 11  Resolve",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.company.currency.currency).to.be.a('string');",
													"    pm.expect(responseJson.company.name).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.data.assigned_object.mileage).to.be.eql(String(pm.collectionVariables.get(\"mileage\")));",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"    // pm.expect(responseJson.company.name).to.be.equal(\"Driveroo_Test_Env\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"mileage\", pm.collectionVariables.get(\"mileage\")+1);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "mileage",
													"value": "{{mileage}}",
													"type": "text"
												},
												{
													"key": "cost_info",
													"value": "",
													"type": "text"
												},
												{
													"key": "amount",
													"value": "{{total_cost_mech}}",
													"type": "text"
												},
												{
													"key": "resolve_date",
													"value": "11/26/2020 1:51 AM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "estimates[0][object_id]",
													"value": "{{issues_id[7]}}",
													"type": "text"
												},
												{
													"key": "estimates[0][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[0][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{issues_id[6]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{AcknowledgingIssue[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "estimates[1][object_id]",
													"value": "{{IssueFromDasboard[0]}}",
													"type": "text"
												},
												{
													"key": "estimates[1][object_type]",
													"value": "issue",
													"type": "text"
												},
												{
													"key": "estimates[1][off]",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/resolve",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"resolve"
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of Planed Maint",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"",
													"pm.test(\"Check JSON responce\", function () {",
													"    let responseJson = pm.response.json();",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"    // pm.expect(responseJson.data.length).to.be.eql(2);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/list?sort=&order=asc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"maintenance",
												"schedulers",
												"list"
											],
											"query": [
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/cars/{{car_id_resolve}} - update asset",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Check content JSON responce\", function () {",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set('mileage_overide', Number(pm.collectionVariables.get(\"mileage\"))+2100);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"year\":2006,\"make\":\"Audi\",\"model\":\"S4\",\"trim\":\"Other\",\"id\":\"19864\",\"car_status_id\":1,\"pictureLoaded\":\"\",\"car_type_id\":45,\"vin\":\"{{VIN}}\",\"engine\":\"\",\"chassis\":\"\",\"notes\":\"string\",\"hours\":\"0\",\"seriaNubmer\":\"\",\"purchase_at\":\"2020-01-01\",\"nickname\":\"Car #3\",\"group\":\"\",\"mileage\":{{mileage_overide}},\"extra_notes\":\"string\",\"groups\":[532],\"car_model\":{\"make_id\":\"Audi\",\"year\":2006,\"name\":\"S4\",\"trim\":\"Other\"},\"car_model_id\":\"S4\",\"license_plate\":\"SV27148\",\"picture\":\"\",\"car_type\":{\"id\":45,\"name\":\"Van\",\"type\":0}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of Missed Maint",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"",
													"pm.test(\"Check JSON responce\", function () {",
													"    let responseJson = pm.response.json();",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"    pm.expect(responseJson.data.length).to.be.eql(2);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(8000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/missed?sort=day&order=desc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"maintenance",
												"schedulers",
												"missed"
											],
											"query": [
												{
													"key": "sort",
													"value": "day"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of Missed Maint Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"",
													"pm.test(\"Check JSON responce\", function () {",
													"    let responseJson = pm.response.json();",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"    pm.expect(responseJson.data.length).to.be.eql(2);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function sleep(ms) {",
													"  ms += new Date().getTime();",
													"  while (new Date() < ms){}",
													"} ",
													"sleep(5000); "
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/maintenance/schedulers/missed?sort=day&order=desc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"maintenance",
												"schedulers",
												"missed"
											],
											"query": [
												{
													"key": "sort",
													"value": "day"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of open issues",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"",
													" pm.collectionVariables.set(\"issues_id[0]\", responseJson[0].issue_id);",
													" pm.collectionVariables.set(\"issues_id[1]\", responseJson[1].issue_id);",
													" pm.collectionVariables.set(\"issues_id[2]\", responseJson[2].issue_id);",
													" pm.collectionVariables.set(\"issues_id[3]\", responseJson[3].issue_id);",
													" pm.collectionVariables.set(\"issues_id[4]\", responseJson[4].issue_id);",
													" pm.collectionVariables.set(\"issues_id[5]\", responseJson[5].issue_id);",
													" pm.collectionVariables.set(\"issues_id[6]\", responseJson[6].issue_id);",
													" pm.collectionVariables.set(\"issues_id[7]\", responseJson[7].issue_id);",
													" pm.collectionVariables.set(\"issues_id[8]\", responseJson[8].issue_id);",
													" pm.collectionVariables.set(\"issues_id[9]\", responseJson[9].issue_id);",
													"",
													" pm.collectionVariables.set(\"issues_question\", responseJson[0].label.slice(0));",
													" pm.collectionVariables.set(\"issues_issue_id\", responseJson[0].issue_id);",
													"",
													"console.log(responseJson[3].question)",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson[0].issue_id).to.be.a('number');",
													"    pm.expect(responseJson[0].label).to.be.a('string');",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/issues?dateFrom={{previousDate}}&dateTo={{todeyDate}}&severity=&status=0&sort=reported&order=desc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"issues"
											],
											"query": [
												{
													"key": "dateFrom",
													"value": "{{previousDate}}"
												},
												{
													"key": "dateTo",
													"value": "{{todeyDate}}"
												},
												{
													"key": "severity",
													"value": ""
												},
												{
													"key": "status",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "reported"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order #4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[0]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing #4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_without-perm}}\",\"assign_email\":\"{{assign_email_without-perm}}\",\"assign_phone\":\"{{assign_phone_without-perm}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id_without-perm}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - Approv",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[0]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":22,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order #5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Receive list of all work-order  \", function () {",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"The response is JSON and type 'object'\", () => {",
													"    pm.response.to.be.json;",
													"    pm.expect(responseJson).to.be.an(\"object\");",
													"});",
													"",
													"pm.test(\"The response has all properties\", () => {",
													"    pm.expect(responseJson.data).to.have.any.keys('id');",
													"    pm.expect(responseJson.data).to.have.property('assign_email');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');",
													"    pm.expect(responseJson.data.status_string).to.equal('New');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"issues\":[\"{{issues_id[1]}}\"]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order"
											]
										}
									},
									"response": []
								},
								{
									"name": "/fleets/work-order/{work_order_id}/assign - Assing #5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.uuid).to.be.a('string');",
													"    pm.expect(responseJson.success).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": false
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"assign_name\":\"{{assign_name_without-perm}}\",\"assign_email\":\"{{assign_email_without-perm}}\",\"assign_phone\":\"{{assign_phone_without-perm}}\",\"overdue_to\":\"{{tomorrowDate}}\",\"user_id\":{{user_id_without-perm}},\"assigned_user_id\":\"\",\"isExitUser\":\"company\",\"isNeedApprove\":true,\"approve_amount\":\"{{total_cost}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_id}}/assign",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_id}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "/userApi/fleets/work-order/{work_order_uuid}/includes - Approv",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"mileage\", responseJson.data.assigned_object.mileage-1);",
													"",
													"pm.collectionVariables.set(\"work_order_uuid\", responseJson.data.uuid);",
													"",
													"pm.collectionVariables.set(\"work_order_id\", responseJson.data.id);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check shema JSON responce\", function () {",
													"    pm.expect(responseJson.data.id).to.be.a('number');",
													"    pm.expect(responseJson.data.status_string).to.be.a('string');    ",
													"    pm.expect(responseJson.success).to.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');",
													"pm.collectionVariables.set(\"tomorrowDate\", moment().subtract(-1, 'day').format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "cookie",
												"type": "text",
												"value": "laravel_session=jTFsLTE4eK05Jlpg9dZmwwcfHkZ4OdQvpC6JAPeT"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"estimates\":[{\"object_type\":\"issue\",\"object_id\":\"{{issues_id[1]}}\",\"off\":0,\"includes\":{\"1\":[{\"description\":\"Part 1\",\"part_no\":\"part number 1\",\"quantity\":1,\"price\":23,\"tax\":1}],\"2\":[{\"description\":\"Some labor\",\"price\":2,\"tax\":1}],\"3\":[{\"description\":\"Fee\",\"price\":1}]}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/work-order/{{work_order_uuid}}/includes",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"work-order",
												"{{work_order_uuid}}",
												"includes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Take list of Assigned WO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json().data;",
													"",
													"//  pm.collectionVariables.set(\"IssueFromDasboard[0]\", responseJson[0].issue_id);",
													"//  pm.collectionVariables.set(\"IssueFromDasboard[1]\", responseJson[1].issue_id);",
													" ",
													" pm.collectionVariables.set(\"mileage\", responseJson[0].assigned_object.mileage);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"",
													"pm.test(\"Check JSON responce\", function () {",
													"    let responseJson = pm.response.json();",
													"    pm.expect(responseJson.success).to.be.eql(true);",
													"    pm.expect(responseJson.data.length).to.be.eql(4);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_id}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{4443}}/userApi/fleets/cars/{{car_id_resolve}}/work-order/assigned?sort=created_at&order=desc&page=1",
											"host": [
												"{{4443}}"
											],
											"path": [
												"userApi",
												"fleets",
												"cars",
												"{{car_id_resolve}}",
												"work-order",
												"assigned"
											],
											"query": [
												{
													"key": "sort",
													"value": "created_at"
												},
												{
													"key": "order",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Steps to follow:\n- Create WO \n- Recive list of issues\n- Add issues #1 to WO\n- Add issues #2 to WO\n- Assing WO\n- Send Estimate\n- Approve Estimate\n- Resolwe WO \n- Login by default user\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"description": "Create work-order  base on Pre - Past Inspections\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "4 API for User Sand",
					"item": [
						{
							"name": "1 /api/v1/health/check - Provider Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" let responseJson = pm.response.json();",
											"",
											"pm.test(\"Receive list filter by Notes  \", function () {",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Provider}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/v1/health/check",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"health",
										"check"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 /api/v1/health/check -Fleet Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" let responseJson = pm.response.json();",
											"",
											"pm.test(\"Receive list filter by Notes  \", function () {",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": false
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Fleet}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/v1/health/check",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"health",
										"check"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 /api​/v1​/report​/{vin}​/{service} -  Need to Bearer Token = API Key Compani",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // postman.setEnvironmentVariable (\"uuid\", \"1c846d60-f356-11ea-bc53-71d549b77651?uuid\");",
											"// // postman.setG (\"uuid\", \"1c846d60-f356-11ea-bc53-71d549b77651?uuid\");",
											"",
											"// pm.globals.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"// pm.collectionVariables.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"// pm.environment.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"",
											"",
											"// // получить глобальную переменную",
											"// console.log(\"1 \"+pm.globals.get(\"uuid\"));",
											"// // получить переменную из окружения",
											"// console.log(\"2 \"+pm.environment.get(\"uuid\"));",
											"// // получить переменную из любого пространства согласно приоритету",
											"// console.log(\"3 \"+pm.variables.get(\"uuid\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJson = pm.response.json();",
											"",
											" pm.collectionVariables.set(\"report_uuid\",responseJson.request_uuid);",
											" ",
											"pm.test(\"Update flet roles with id - \"+pm.collectionVariables.get(\"role_id\"), function () {",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The response is JSON and type 'object'\", () => {",
											"    pm.response.to.be.json;",
											"    pm.expect(responseJson).to.be.an(\"object\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Fleet}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/v1/report/{{VIN_provider}}/accident-report-udelv",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"report",
										"{{VIN_provider}}",
										"accident-report-udelv"
									],
									"query": [
										{
											"key": "uuid",
											"value": "1c846d60-f356-11ea-bc53-71d549b77651?uuid",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4 /api​/v1​/report​/{uuid} -  Need to Bearer Token = API Key Compani",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // postman.setEnvironmentVariable (\"uuid\", \"1c846d60-f356-11ea-bc53-71d549b77651?uuid\");",
											"// // postman.setG (\"uuid\", \"1c846d60-f356-11ea-bc53-71d549b77651?uuid\");",
											"",
											"// pm.globals.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"// pm.collectionVariables.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"// pm.environment.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"",
											"",
											"// // получить глобальную переменную",
											"// console.log(\"1 \"+pm.globals.get(\"uuid\"));",
											"// // получить переменную из окружения",
											"// console.log(\"2 \"+pm.environment.get(\"uuid\"));",
											"// // получить переменную из любого пространства согласно приоритету",
											"// console.log(\"3 \"+pm.variables.get(\"uuid\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJson = pm.response.json();",
											"",
											"pm.test(\"Update flet roles with id - \"+pm.collectionVariables.get(\"role_id\"), function () {",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The response is JSON and type 'object'\", () => {",
											"    pm.response.to.be.json;",
											"    pm.expect(responseJson).to.be.an(\"object\");",
											"});",
											"",
											"pm.test(\"The response has all properties\", () => {",
											"    // pm.expect(responseJson.data).to.have.any.keys('assign_name');",
											"    // pm.expect(responseJson.data).to.have.property('id');",
											"    // // pm.expect(responseJson.data.assign_email).to.be.a('string');",
											"    // pm.expect(responseJson.data.id).to.be.eql(pm.collectionVariables.get(\"work-order_id\"));   ",
											"    // pm.expect(responseJson.data.uuid).to.be.eql(pm.collectionVariables.get(\"uuid\"));   ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Fleet}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/v1/report/{{report_uuid}}",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"report",
										"{{report_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5 /api/report/{{API_keys}}/{{requestID}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseJson = pm.response.json();",
											"",
											"pm.test(\"Check that user can resive API report by id - \" + pm.collectionVariables.get(\"requestID\"), function () {",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The response is JSON and type 'object'\", () => {",
											"    pm.response.to.be.json;",
											"    pm.expect(responseJson).to.be.an(\"object\");",
											"});",
											"",
											"pm.test(\"The response has all properties\", () => {",
											"    pm.expect(responseJson.client).to.have.any.keys('token');",
											"    pm.expect(responseJson.client).to.have.property('vin');",
											"    pm.expect(responseJson.client.year).to.be.a('number');",
											"    pm.expect(responseJson.client.make).to.be.an('string');",
											"  //  pm.expect(vin).to.equal(pm.collectionVariables.get(\"VIN_id\"));",
											"  //  pm.expect(car).to.equal(pm.collectionVariables.get(\"car_id\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/report/{{API_keys_Admin}}/{{report_uuid}}",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"report",
										"{{API_keys_Admin}}",
										"{{report_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6 /api​/v1​/report​/{vin}​/{service} -  Need to Bearer Token = API Provider",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // postman.setEnvironmentVariable (\"uuid\", \"1c846d60-f356-11ea-bc53-71d549b77651?uuid\");",
											"// // postman.setG (\"uuid\", \"1c846d60-f356-11ea-bc53-71d549b77651?uuid\");",
											"",
											"// pm.globals.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"// pm.collectionVariables.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"// pm.environment.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"",
											"",
											"// // получить глобальную переменную",
											"// console.log(\"1 \"+pm.globals.get(\"uuid\"));",
											"// // получить переменную из окружения",
											"// console.log(\"2 \"+pm.environment.get(\"uuid\"));",
											"// // получить переменную из любого пространства согласно приоритету",
											"// console.log(\"3 \"+pm.variables.get(\"uuid\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJson = pm.response.json();",
											"",
											" pm.collectionVariables.set(\"report_uuid\",responseJson.request_uuid);",
											"",
											"pm.test(\"Update flet roles with id - \"+pm.collectionVariables.get(\"role_id\"), function () {",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The response is JSON and type 'object'\", () => {",
											"    pm.response.to.be.json;",
											"    pm.expect(responseJson).to.be.an(\"object\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Provider}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/v1/report/{{VIN_provider}}/s-charlie-fleet-pre",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"report",
										"{{VIN_provider}}",
										"s-charlie-fleet-pre"
									],
									"query": [
										{
											"key": "uuid",
											"value": "1c846d60-f356-11ea-bc53-71d549b77651?uuid",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "7 /api​/v1​/report​/{uuid} -  Need to Bearer Token = API Provider",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // postman.setEnvironmentVariable (\"uuid\", \"1c846d60-f356-11ea-bc53-71d549b77651?uuid\");",
											"// // postman.setG (\"uuid\", \"1c846d60-f356-11ea-bc53-71d549b77651?uuid\");",
											"",
											"// pm.globals.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"// pm.collectionVariables.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"// pm.environment.set(\"uuid\", \"0d440c50-f82c-11ea-9ba9-79990f4e24d7\");",
											"",
											"",
											"// // получить глобальную переменную",
											"// console.log(\"1 \"+pm.globals.get(\"uuid\"));",
											"// // получить переменную из окружения",
											"// console.log(\"2 \"+pm.environment.get(\"uuid\"));",
											"// // получить переменную из любого пространства согласно приоритету",
											"// console.log(\"3 \"+pm.variables.get(\"uuid\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJson = pm.response.json();",
											"",
											"pm.test(\"Update flet roles with id - \"+pm.collectionVariables.get(\"role_id\"), function () {",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The response is JSON and type 'object'\", () => {",
											"    pm.response.to.be.json;",
											"    pm.expect(responseJson).to.be.an(\"object\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Provider}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/v1/report/{{report_uuid}}",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"report",
										"{{report_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "8 /api/report/{{API_keys}}/{{requestID}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseJson = pm.response.json();",
											"",
											"pm.test(\"Check that user can resive API report by id - \" + pm.collectionVariables.get(\"requestID\"), function () {",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The response is JSON and type 'object'\", () => {",
											"    pm.response.to.be.json;",
											"    pm.expect(responseJson).to.be.an(\"object\");",
											"});",
											"",
											"pm.test(\"The response has all properties\", () => {",
											"    pm.expect(responseJson.client).to.have.any.keys('token');",
											"    pm.expect(responseJson.client).to.have.property('vin');",
											"    pm.expect(responseJson.client.year).to.be.a('number');",
											"    pm.expect(responseJson.client.make).to.be.an('string');",
											"  //  pm.expect(vin).to.equal(pm.collectionVariables.get(\"VIN_id\"));",
											"  //  pm.expect(car).to.equal(pm.collectionVariables.get(\"car_id\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/report/{{API_keys_Admin}}/{{report_uuid}}",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"report",
										"{{API_keys_Admin}}",
										"{{report_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "9 Receive last report by inspection",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseJson = pm.response.json();",
											"let responseJson1 = pm.response.json().sets;",
											"",
											"",
											"pm.collectionVariables.set(\"report_uuid\",responseJson.request_uuid);",
											"",
											"let object_length = Object.keys(responseJson1).length;",
											"let object_issues = new Array;",
											"let object_question_uuid = new Array;",
											"",
											"",
											"for (let i=0;i<object_length;i++){",
											"    if (!responseJson1[i]){",
											"        continue;",
											"    }",
											"    else{",
											"    //   console.log(\"responseJson1[\"+i+\"] == \"+Object.keys(responseJson1[i].elements).length);",
											"        object_elements_length = Object.keys(responseJson1[i].elements).length",
											"        for(let j=0;j<object_elements_length;j++){",
											"            // console.log(responseJson1[i].elements[j].score);",
											"            if (responseJson1[i].elements[j].score!=100){",
											"                //  console.log(\"responseJson1[\"+i+\"][\"+j+\"} == \" + responseJson1[i].elements[j].question_uuid+\" = \"+responseJson1[i].elements[j].score);",
											"                // console.log(object_issues.length)",
											"                id_arrey=object_issues.length",
											"                // console.log(responseJson1[i].elements[j].question_uuid+\" = \");",
											"                // console.log(responseJson1[i].elements[j].score);",
											"                object_issues[id_arrey]=responseJson1[i].elements[j].score;",
											"                object_question_uuid[id_arrey]=responseJson1[i].elements[j].question_uuid;",
											"            }",
											"        }",
											"    }",
											"}",
											"",
											"//  console.log(object_issues);",
											"// console.log(object_question_uuid);",
											"",
											"pm.collectionVariables.set(\"question_uuid\",object_question_uuid);",
											"// console.log(pm.collectionVariables.get(\"report_uuid\"))",
											"// console.log(pm.collectionVariables.get(\"question_uuid\"))",
											"",
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Your test name\", function () {",
											"    // pm.expect(responseJson.request_uuid).to.be.equal(pm.collectionVariables.get(\"request_id_provider\"));",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Provider}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{4443}}/api/v1/report/{{VIN_provider}}/s-charlie-fleet-pre",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"report",
										"{{VIN_provider}}",
										"s-charlie-fleet-pre"
									]
								},
								"description": "/api/report/024e5916-d002-47e8-83f9-15ba0860c583/1HGCV3F49KA009255/s-charlie-fleet-pre\n\nApi key from admin page = 024e5916-d002-47e8-83f9-15ba0860c583\nVIN asset = 1HGCV3F49KA009255\nSystem Name of service = s-charlie-fleet-pre"
							},
							"response": []
						},
						{
							"name": "10 Provider | Resolve separate issue from report Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"pm.collectionVariables.set(\"question_uuid_0\", pm.collectionVariables.get(\"question_uuid\")[0])",
											"pm.collectionVariables.set(\"question_uuid_1\", pm.collectionVariables.get(\"question_uuid\")[1])",
											"pm.collectionVariables.set(\"question_uuid_2\", pm.collectionVariables.get(\"question_uuid\")[2])",
											"",
											"var moment = require('moment');",
											"pm.collectionVariables.set(\"Date\", moment().subtract(-1, 'day').format(\"MM/DD/YYYY\")+\" 11:00AM\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(responseJson.success).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Provider}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resolve\": [\n        \"{{question_uuid_0}}\",\"{{question_uuid_1}}\",\"{{question_uuid_2}}\"\n    ],\n    \"resolve_date\": \"{{Date}}\",\n    \"resolver_name\": \"Name\",\n    \"meter\": {{mileage}},\n    \"amount\": \"22.99\",\n    \"notes\": \"Notes\",\n    \"description\": \"Description\",\n    \"attachment\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{4443}}/api/v1/report/{{report_uuid}}/issue/resolve",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"report",
										"{{report_uuid}}",
										"issue",
										"resolve"
									]
								},
								"description": "https://sandbox.driveroo.com/api/v1/report/1748161/issue/resolve\nUUID of report = 1748161\n\n{\n  \"resolve\": [\n    \"qHwN2H39\", \"UUID_question\"\n  ],\n  ...\nUUID_question = qHwN2H39\n\nBearer token from Provider dashboard = 5472b48aeb587916c0ee7f21c9db33766d44dc59a52e0afed9a4a796c8c668cf"
							},
							"response": []
						},
						{
							"name": "11 Provider | Resolve all issue from report Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(responseJson.success).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Provider}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resolve_date\": \"{{Date}}\",\n  \"resolver_name\": \"Name 000\",\n  \"meter\": {{mileage}},\n  \"amount\": \"20.99\",\n  \"notes\": \"Notes 111\",\n  \"description\": \"Description 222\",\n  \"attachment\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{4443}}/api/v1/report/{{report_uuid}}/issue/resolve/all",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"report",
										"{{report_uuid}}",
										"issue",
										"resolve",
										"all"
									]
								},
								"description": "https://sandbox.driveroo.com/api/v1/report/2545329/issue/resolve/all\n\nuuid of report - 2545329\n\nBearer token from Provider dashboard = 5472b48aeb587916c0ee7f21c9db33766d44dc59a52e0afed9a4a796c8c668cf"
							},
							"response": []
						},
						{
							"name": "12 Fleet | Report issue Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(responseJson.success).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{API_keys_Fleet}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"asset\": {{car_id_resolve}},\n  \"meter\": {{mileage}},\n  \"issues\": [\n    {\n      \"severity\": 1,\n      \"answer\": \"Safety Lights\",\n      \"comment\": \"Some notes 1\",\n      \"pictures\": []\n    },\n    {\n      \"severity\": 2,\n      \"answer\": \"Brakes\",\n      \"comment\": \"Some notes 2\",\n      \"pictures\": []\n    },\n     {\n      \"severity\": 3,\n      \"answer\": \"Climate Systems\",\n      \"comment\": \"Some notes 3\",\n      \"pictures\": []\n    },\n     {\n      \"severity\": 1,\n      \"answer\": \"Doors And Hinges\",\n      \"comment\": \"Some notes 4\",\n      \"pictures\": []\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{4443}}/api/v1/report/issue",
									"host": [
										"{{4443}}"
									],
									"path": [
										"api",
										"v1",
										"report",
										"issue"
									]
								},
								"description": "{\n  \"asset\": 17295,\n  \"meter\": 1955,\n  \"issues\": [\n    {\n      \"severity\": 3,\n      \"answer\": \"Doors And Hinges\",\n      ...\n\nID car = \"asset\"\nRequired field with constant content =  \"answer\"\n \"answer\" = { Brakes, Cleanliness, Climate Systems, Dashboard, Dashboard Lights, Doors And Hinges, Electrical, Engine, Exhaust System, Fluids, Hoses, Lights, Mirrors, Miscellaneous, Safety Checks, Safety Lights, Safety Systems, Seat, Steering, Tire/Wheels/Lugs, Transmission, Vehicle Inspection, Windows/Windshield, Wiper Blades}\n\n Bearer token from Provider dashboard = ea4fb0cdf97fb06f0c1da406703b367e6fd23c65dbf4470b43f656dab32fa142"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "sand",
			"value": "https://lp.driveroo.com/driveroo"
		},
		{
			"key": "prod",
			"value": "https://lp.driveroo.com/driveroo"
		},
		{
			"key": "4443",
			"value": "https://sandbox.driveroo.com"
		},
		{
			"key": "VIN",
			"value": "WUARL48H76K900605"
		},
		{
			"key": "login",
			"value": "sergeyk+0@driveroo.com"
		},
		{
			"key": "pass",
			"value": "123456"
		},
		{
			"key": "assign_name",
			"value": "Freddie  Mercury"
		},
		{
			"key": "assign_email",
			"value": "sergeyk+3@driveroo.com"
		},
		{
			"key": "assign_phone",
			"value": "+19546338234"
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "user_id_prod",
			"value": ""
		},
		{
			"key": "assign_name#2",
			"value": "Chuck Norris"
		},
		{
			"key": "assign_phone#2",
			"value": "+15307282053"
		},
		{
			"key": "user_id#2",
			"value": ""
		},
		{
			"key": "user_id#2_prod",
			"value": ""
		},
		{
			"key": "assign_name_Outside",
			"value": "Outside Mechanic"
		},
		{
			"key": "assign_email_Outside",
			"value": "sergeyk+Outside@driveroo.com"
		},
		{
			"key": "assign_name_without-perm",
			"value": "Eddie Van Halen"
		},
		{
			"key": "assign_email_without-perm",
			"value": "sergeyk+1@driveroo.com"
		},
		{
			"key": "user_id_without-perm",
			"value": ""
		},
		{
			"key": "user_id_without-perm_prod",
			"value": ""
		},
		{
			"key": "assign_phone_without-perm",
			"value": "+19546338232"
		},
		{
			"key": "login#2",
			"value": "sergeyk+3@driveroo.com"
		},
		{
			"key": "pass#2",
			"value": "123456"
		},
		{
			"key": "cookies-token",
			"value": ""
		},
		{
			"key": "token_id",
			"value": ""
		},
		{
			"key": "issues_question",
			"value": ""
		},
		{
			"key": "work_order_id",
			"value": ""
		},
		{
			"key": "work_order_uuid",
			"value": ""
		},
		{
			"key": "token_id_prod",
			"value": ""
		},
		{
			"key": "car_id_resolve",
			"value": ""
		},
		{
			"key": "request_id_fleet",
			"value": ""
		},
		{
			"key": "issues_id[0]",
			"value": ""
		},
		{
			"key": "issues_id[1]",
			"value": ""
		},
		{
			"key": "issues_id[2]",
			"value": ""
		},
		{
			"key": "issues_id[3]",
			"value": ""
		},
		{
			"key": "issues_id[4]",
			"value": ""
		},
		{
			"key": "issues_id[5]",
			"value": ""
		},
		{
			"key": "issues_id[6]",
			"value": ""
		},
		{
			"key": "issues_id[7]",
			"value": ""
		},
		{
			"key": "issues_id[8]",
			"value": ""
		},
		{
			"key": "issues_id[9]",
			"value": ""
		},
		{
			"key": "issues_issue_id",
			"value": ""
		},
		{
			"key": "parent_id",
			"value": ""
		},
		{
			"key": "estimate_cost",
			"value": ""
		},
		{
			"key": "maintenance_id",
			"value": ""
		},
		{
			"key": "planed_id[0]",
			"value": ""
		},
		{
			"key": "planed_id[1]",
			"value": ""
		},
		{
			"key": "planed_id[2]",
			"value": ""
		},
		{
			"key": "planed_id[3]",
			"value": ""
		},
		{
			"key": "planed_id[4]",
			"value": ""
		},
		{
			"key": "planed_id[5]",
			"value": ""
		},
		{
			"key": "planed_id[6]",
			"value": ""
		},
		{
			"key": "planed_id[7]",
			"value": ""
		},
		{
			"key": "planed_id[8]",
			"value": ""
		},
		{
			"key": "planed_id[9]",
			"value": ""
		},
		{
			"key": "total_cost",
			"value": ""
		},
		{
			"key": "mileage",
			"value": "20003"
		},
		{
			"key": "message_mileage",
			"value": ""
		},
		{
			"key": "mileage_real",
			"value": ""
		},
		{
			"key": "foto",
			"value": "354956"
		},
		{
			"key": "group_id",
			"value": ""
		},
		{
			"key": "notes",
			"value": "string1"
		},
		{
			"key": "extra_notes",
			"value": "string2"
		},
		{
			"key": "car_type_id",
			"value": ""
		},
		{
			"key": "icon_id",
			"value": "226884"
		},
		{
			"key": "icon_id_prod",
			"value": "250802"
		},
		{
			"key": "car_type_id#2",
			"value": ""
		},
		{
			"key": "car_type_id#3",
			"value": ""
		},
		{
			"key": "issues_id[10]",
			"value": ""
		},
		{
			"key": "issues_id[11]",
			"value": ""
		},
		{
			"key": "cookies-token_prod",
			"value": ""
		},
		{
			"key": "IssueFromDasboard",
			"value": "Vehicle+Issue+Report"
		},
		{
			"key": "IssueFromDasboard[0]",
			"value": ""
		},
		{
			"key": "IssueFromDasboard[1]",
			"value": ""
		},
		{
			"key": "IssueFromDasboard[2]",
			"value": ""
		},
		{
			"key": "AcknowledgingIssue[0]",
			"value": ""
		},
		{
			"key": "AcknowledgingIssue[1]",
			"value": ""
		},
		{
			"key": "AcknowledgingIssue[2]",
			"value": ""
		},
		{
			"key": "mileage_overide",
			"value": ""
		},
		{
			"key": "total_cost_mech",
			"value": ""
		},
		{
			"key": "fleet_sand",
			"value": "Chuck+Norris"
		},
		{
			"key": "fleet_prod",
			"value": "Chuck+Norris"
		},
		{
			"key": "provider_sand",
			"value": "sergeyk%2B0"
		},
		{
			"key": "provider_prod",
			"value": "Driveroo_Test_Env"
		},
		{
			"key": "API_keys_Fleet",
			"value": "96f8cf8fbecf8b6fe657f690307897630b5dca4c244c50ce2ec8abdf1efbd730"
		},
		{
			"key": "API_keys_Provider",
			"value": "8a7806b4aaf46a34dc2860b779a6175f17dfd699186e9d9ab0af6fe3f5fbce8a"
		},
		{
			"key": "API_keys_Admin",
			"value": "024e5916-d002-47e8-83f9-15ba0860c583"
		},
		{
			"key": "API_keys_Admin_Sergii",
			"value": "43e361ab721d13e8a4ba267e02be64eaa4c5a48bfc8d014cd1a9487df6c65b04"
		},
		{
			"key": "VIN_provider",
			"value": "1HGCV3F49KA009255"
		},
		{
			"key": "API_keys_Fleet_Prod",
			"value": "ea4fb0cdf97fb06f0c1da406703b367e6fd23c65dbf4470b43f656dab32fa142"
		},
		{
			"key": "API_keys_Provider_Prod",
			"value": "beb50b379d3a3fb81c66900351e81593adcd86220d682118eadb5bab817e2525"
		},
		{
			"key": "API_keys_Admin_Prod",
			"value": "024e5916-d002-47e8-83f9-15ba0860c583"
		},
		{
			"key": "API_keys_Admin_Sergii_Prod",
			"value": "fedb5d856d69d106ba51c2ec23dc4a21af5edbb6a19ce0767def7c95837c03c9"
		},
		{
			"key": "report_uuid",
			"value": ""
		},
		{
			"key": "question_uuid",
			"value": ""
		},
		{
			"key": "Date",
			"value": ""
		},
		{
			"key": "question_uuid_0",
			"value": ""
		},
		{
			"key": "question_uuid_1",
			"value": ""
		},
		{
			"key": "question_uuid_2",
			"value": ""
		},
		{
			"key": "attach_issues_id[0]",
			"value": ""
		},
		{
			"key": "attach_issues_id[1]",
			"value": ""
		},
		{
			"key": "attach_issues_id[2]",
			"value": ""
		},
		{
			"key": "attach_issues_id[3]",
			"value": ""
		},
		{
			"key": "attach_issues_id[4]",
			"value": ""
		},
		{
			"key": "attach_issues_id[5]",
			"value": ""
		},
		{
			"key": "attach_issues_id[6]",
			"value": ""
		},
		{
			"key": "attach_issues_id[7]",
			"value": ""
		},
		{
			"key": "todeyDate",
			"value": ""
		},
		{
			"key": "todeyDate1",
			"value": ""
		},
		{
			"key": "tomorrowDate",
			"value": ""
		},
		{
			"key": "previousDate",
			"value": ""
		}
	]
}